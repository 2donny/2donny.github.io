{"version":3,"sources":["images/interest_9.svg","images/interest_10.svg","images/interest_11.svg","images/interest_12.svg","components/interest2UrlNumber.js","pages/HomePages/MyProfile.js","axios-instance.js","store/actions/User.js","store/actions/Auth.js","components/UI/backdrop.js","components/UI/modal.js","images/interest_1.svg","images/interest_2.svg","images/interest_3.svg","images/interest_4.svg","images/interest_5.svg","images/interest_6.svg","images/interest_7.svg","images/interest_8.svg"],"names":["interest2UrlNumber","interestArr","map","interest","hashtag","title","url","interest_7","interest_3","interest_10","interest_4","interest_5","interest_12","interest_8","interest_9","interest_6","interest_11","interest_2","interest_1","selectedTab","backgroundColor","color","notSelectedTab","MyProfile","history","useSelector","store","user","isPublic","isGraduate","displayNameInUser","gender","univInUser","age","job","adj","location","articleImgSrc","introText","profileImgSrc","resume","workPlace","auth","displayName","univ","useState","pageNum","setPageNum","setMyProfileImgSrc","anyThingClicked","setAnyThingClicked","newArr","dispatch","useDispatch","useCallback","event","preventDefault","reader","FileReader","onload","actions","target","result","__file","files","readAsDataURL","useEffect","storedToken","localStorage","getItem","profileImgChangeHandler","fileReader","e","contents","style","paddingTop","className","onClick","position","left","top","transform","width","height","margin","src","alt","fontSize","textAlign","whiteSpace","display","gridTemplateColumns","justifyItems","borderRadius","objectFit","opacity","cursor","type","onChange","push","fontWeight","padding","marginLeft","minHeight","right","id","bottom","border","alert","invitement","footerNone","show","clicked","Axios","axios","create","baseURL","addIsPublic","actionTypes","addIsGraduate","addGender","addAge","addJob","addAdj","addLocation","lng","lat","addIntroText","addInterest","submitImgToAWSStart","submitImgToAWSSuccess","imgAwsUrl","payloadType","submitImgToAWSFail","submitImgToAWSInit","submitArticleImgToAWS","articleImg_formData","post","then","res","console","log","data","success","catch","err","submitProfileImgToAWS","profileImg_formData","addArticleText","articleText","addArticleTag","articleTag","submitToServerFail","submitToServerInit","submitToServer","phoneNumberInRedux","latitudeInRedux","longitudeInRedux","passwordInRedux","isPublicInRedux","isGraduateInRedux","emailInRedux","genderInRedux","ageInRedux","jobInRedux","adjInRedux","locationInRedux","articleImgSrcInRedux","articleTextInRedux","articleTagInRedux","displayNameInRedux","interestArrInRedux","introTextInRedux","profileImgSrcInRedux","resumeText","workPlaceText","userData","longitude","latitude","phoneNumber","password","email","message","updateProfileImgToServer","updatedProfileImg","updateProfileImg","authFail","errorInit","authData","authSuccess","code","errorMsg","authConfirmFail","errCode","authConfirmInit","authConfirm","univKor","authConfirmSuccess","findAuthFail","findAuthInit","findAuth","joinFail","joinInit","joinSubmit","wpd","pwd","joinSuccess","loginFail","error","loginInit","loginSubmit","token","loginSuccess","setItem","getUser","getUserSuccess","university","hashtagCount","addProfileImgSrc","addDidsplayName","addResume","addWorkPlace","get","headers","Backdrop","Modal","children","visibility","zIndex","boxShadow","boxSizing","transition","memoizedModal","React","memo"],"mappings":"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","file":"static/js/7.ea9485c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/interest_9.aadaebf7.svg\";","export default __webpack_public_path__ + \"static/media/interest_10.f4220d4d.svg\";","export default __webpack_public_path__ + \"static/media/interest_11.1531b0fa.svg\";","export default __webpack_public_path__ + \"static/media/interest_12.f11e91e1.svg\";","import interest_1 from '../images/interest_1.svg';\nimport interest_2 from '../images/interest_2.svg';\nimport interest_3 from '../images/interest_3.svg';\nimport interest_4 from '../images/interest_4.svg';\nimport interest_5 from '../images/interest_5.svg';\nimport interest_6 from '../images/interest_6.svg';\nimport interest_7 from '../images/interest_7.svg';\nimport interest_8 from '../images/interest_8.svg';\nimport interest_9 from '../images/interest_9.svg';\nimport interest_10 from '../images/interest_10.svg';\nimport interest_11 from '../images/interest_11.svg';\nimport interest_12 from '../images/interest_12.svg';\n\nfunction interest2UrlNumber(interestArr){\n    const newArr = interestArr.map(interest => {\n        switch(interest.hashtag) {\n            case \"스타트업\": \n                return {\n                    title: \"스타트업\",\n                    url: interest_7\n                }\n            case \"맛집\": \n                return {\n                    title: \"맛집\",\n                    url: interest_3\n                }\n            case \"애견인\": \n                return {\n                    title: \"애견인\",\n                    url: interest_10\n                }\n            case \"요리\": \n                return {\n                    title: \"요리\",\n                    url: interest_4\n                }\n            case \"코딩\": \n                return {\n                    title: \"코딩\",\n                    url: interest_5\n                }\n            case \"패션\": \n                return {\n                    title: \"패션\",\n                    url: interest_12\n                }\n            case \"헬스\": \n                return {\n                    title: \"헬스\",\n                    url: interest_8\n                }\n            case \"보드게임\": \n                return {\n                    title: \"보드게임\",\n                    url: interest_9\n                }\n            case \"음악\": \n                return {\n                    title: \"음악\",\n                    url: interest_6\n                }\n            case \"취업준비\": \n                return {\n                    title: \"취업준비\",\n                    url: interest_11\n                }\n            case \"로스쿨\": \n                return {\n                    title: \"로스쿨\",\n                    url: interest_2\n                }\n            case \"대학원\": \n                return {\n                    title: \"대학원\",\n                    url: interest_1\n                }\n            default:\n                return null;\n        }\n    });\n    return newArr;\n}\n\nexport default interest2UrlNumber;\n","import React, { useCallback, useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Layout from '../../components/layout';\nimport * as actions from '../../store/actions/index';\nimport Modal from '../../components/UI/modal';\nimport interest2UrlNumber from '../../components/interest2UrlNumber';\n\nconst selectedTab = {\n    backgroundColor: 'black',\n    color: 'white',\n};\nconst notSelectedTab = {\n    backgroundColor: 'white',\n    color: \"#8D8D8D\"\n}\n\nconst MyProfile = ({ history }) => {\n    const { isPublic, isGraduate, displayNameInUser, gender, univInUser, age, job, adj, location, interestArr, articleImgSrc, introText, profileImgSrc, resume, workPlace } = useSelector(store => store.user);\n    const { displayName, univ } = useSelector(store => store.auth);\n    \n    const [pageNum, setPageNum] = useState(2);\n    const [myProfileImgSrc, setMyProfileImgSrc] = useState(profileImgSrc);\n    const [anyThingClicked, setAnyThingClicked] = useState(false);\n    \n    const newArr = interest2UrlNumber(interestArr);\n    const dispatch = useDispatch();\n\n    const updateProfile = useCallback((event) => {\n        event.preventDefault();\n        const reader = new FileReader();\n        reader.onload = event => { \n            dispatch(actions.updateProfileImgToServer(event.target.result))\n        };\n        const files = event.target.files;\n        const __file = files[0];\n\n        reader.readAsDataURL(__file);\n    }, []);\n    \n    useEffect(() => {\n        const storedToken = localStorage.getItem('tk');\n        if(storedToken) {\n            dispatch(actions.getUser(storedToken));\n        }\n    }, []);\n\n    const profileImgChangeHandler = useCallback((event) => {\n        const files = event.target.files;\n        const __file = files[0];\n\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(__file);\n        fileReader.onload = e => { // async하게 다 읽었악면 실행 \n            setMyProfileImgSrc(e.target.result);\n        };\n\n        // const formData = new FormData();\n        // formData.append(\"img\", __file);\n        // setProfileImgSrcFormData(formData);\n    }, []);\n\n    let contents = null;\n    if(pageNum === 1) {\n        contents = (\n            <div style={{paddingTop: 10}} className=\"h-screen relative\">\n                <section>\n                    <section onClick={() => setAnyThingClicked(true)} style={{position: 'absolute', left: '50%', top: '25%', transform: 'translate(-50%, 0)'}}>\n                        <img \n                            style={{width: 122, height: 122, margin: '0 auto'}}\n                            src=\"add-circle-outline.svg\"\n                            alt=\"add\"\n                        />\n                        <p style={{fontSize: 10, textAlign: 'center', whiteSpace: 'pre'}}>[개발중] 3월 12일부터 게시글을 올릴 수 있습니다. <br/> 일기장처럼 사용가능해요! <br/> 게시글 event도 있을 예정입니당 ^^  </p>\n                    </section>\n                    <div style={{height: '100%', display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', justifyItems: 'center'}}>\n                        <img \n                            style={{\n                                display: 'block', margin: 5, width: 90, height: 90, backgroundColor: \"#FFEAEA\", borderRadius: 40, borderRadius: '100%',\n                            }} \n                            src={articleImgSrc}\n                            className=\"cursor-pointer\"\n                            onClick={() => setAnyThingClicked(true)}\n                        />\n                    </div>\n                </section>\n                \n            </div>\n        )\n    } else if(pageNum === 2) {\n        contents = (\n            <>\n                {/* Profile Container */}\n                <section style={{height: '100%'}} className=\"px-3 py-3 mx-3\">\n                {/* 프로필 사진 */}\n                    <div className=\"relative\">\n                        <img \n                            style={{width: 228, height: 228, borderRadius: 114, backgroundColor: 'gray', margin: '0 auto', objectFit: 'cover'}}\n                            src={profileImgSrc}\n                        />\n                        <input className=\"focus:outline-none\" style={{position: 'absolute', opacity: 0, top: 0, left: '50%', transform: 'translate(-50%, 0)', width: 228, height: 228, borderRadius: 114, cursor: 'pointer'}} type=\"file\" onChange={(e) => profileImgChangeHandler(e)} />\n                    </div>\n\n                    {/* 닉네임, 개인정보 */}\n                    <div className=\"mt-3\">\n                        <div className=\"text-center\">\n                            <p style={{color: \"#8D8D8D\", fontSize: 11}} className=\"text-sm cursor-pointer\" onClick={() => history.push('/developer-profile')}>XIRCLE 개발자 프로필 구경하기</p>\n                            <h3 style={{fontSize: 20, fontWeight: '600', margin: '5px 0'}}>{adj} {job} <span style={{fontSize: 18, fontWeight: 'lighter'}}>{displayName || displayNameInUser}</span></h3>\n                        </div>\n                        <div className=\"flex flex-row justify-center\">\n                            <div style={{height: 25, backgroundColor: '#CCF6FF', margin: '0 2px 0 0'}}><p style={{fontSize: '8px', color: '#616060', fontWeight: 'bolder', padding: '7px'}}>{gender}</p></div>\n                            {isPublic ? <div style={{height: 25, backgroundColor: '#F7F7FA', margin: '0 2px'}}><p style={{fontSize: '8px', color: '#616060', fontWeight: 'bolder', padding: '7px'}}>{univ || univInUser} {isGraduate ? \"졸업\" : \"재학중\"}</p></div> : null}\n                            <div style={{height: 25, backgroundColor: '#F7F7FA', margin: '0 2px'}}><p style={{fontSize: '8px', color: '#616060', fontWeight: 'bolder', padding: '7px'}}>{location}</p></div>\n                            <div style={{height: 25, backgroundColor: '#F7F7FA', margin: '0 2px'}}><p style={{fontSize: '8px', color: '#616060', fontWeight: 'bolder', padding: '7px'}}>{age}</p></div>\n                        </div>\n                    </div>\n\n                    {/* 직장, 한줄소개\u001c */}\n                    <ul className=\"mt-14\">\n                        <li className=\"flex flex-row text-sm mb-2\">\n                            <img \n                                style={{width: 15, height: 15}}\n                                src=\"/company.svg\"\n                                alt=\"company\"\n                            />\n                            <p className=\"font-extrabold mx-2 my-0\">{workPlace}</p><span>재직중</span>\n                        </li>\n                        <li className=\"flex flex-row text-sm mb-2\">\n                            <p className=\"\">{introText}</p>\n                        </li>\n                        <li className=\"flex flex-row items-center my-3 \">\n                            <img \n                                style={{width: 11, height: 11}}\n                                src=\"/activity.svg\"\n                                alt=\"activity\"\n                            />\n                            <p className=\"font-sans\" style={{color: \"#8D8D8D\", fontSize: 13, marginLeft: 5}}>{resume}</p>\n                        </li>\n                    </ul>\n                </section>\n\n                {/* Album Container */}\n                <section style={{minHeight: '300px', height: '100%', padding: '20px 0', margin: '10px 0', backgroundColor: \"#F7F7FA\"}}>\n                    <section className=\"relative\">\n                        <div style={{position: 'absolute', top: -37, right: 30, borderRadius: 12.5}}>\n                            <button\n                                onClick={() => history.push('/event')} \n                                className=\"flex flex-row items-center px-5 py-3 text-white rounded-3xl bg-black focus:outline-none\"\n                            > \n                                <div style={{width: 4, height: 4, backgroundColor: 'red', borderRadius: 4}}></div>\n                                <p className=\"font-sans\" style={{fontSize: 10, fontWeight: 300, margin: '0 0 0 5px'}}>에어팟PRO 이벤트 참여하기</p>\n                                <img\n                                    style={{width: 42, height: 42, position: 'absolute', right: -10, top: -20}}\n                                    src=\"airpod_tilt.svg\"\n                                    alt=\"airpod\"\n                                />\n                            </button>\n                        </div>\n                        <div style={{height: '100%', display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', justifyItems: 'center'}}>\n                            {newArr.map((interest, id) => (\n                            <div\n                                key={id}\n                                style={{\n                                    margin: 3, width: 100, height: 100,  backgroundColor: \"#FFEAEA\", borderRadius: 40, borderRadius: '100%', \n                                    backgroundSize: 'cover', backgroundImage: `url(${interest.url})`\n                                }} \n                                className=\"cursor-pointer\"\n                                onClick={() => setAnyThingClicked(true)}\n                            >\n                                <div onClick={() => setAnyThingClicked(true)} className=\"relative text-white w-full h-full flex justify-center items-center\">\n                                    <p className=\"mb-1 relative\">@{interest.title}</p>\n                                    <button className=\"absolute\" style={{padding: '3px 5px', bottom: 20, fontSize: 3, border: '1px solid #fff', borderRadius: 15, color: \"#fff\", opacity: 0.7}}>게시물 0개</button>\n                                </div>\n                            </div>\n                            ))}\n                        </div>\n                    </section>\n                </section>\n            </>\n        )\n    }else if(pageNum === 3) {\n        contents = (\n            <div style={{padding: 10}} className=\"h-screen\">\n                <p>서비스 준비중입니다.</p>\n            </div>\n        )\n    }else {\n        alert('존재하지 않는 페이지입니다.')\n    }\n    return (\n        <Layout invitement footerNone>\n            {/* 어쩔수 없이 main안에 header 넣어야함\u001f */}\n            <header className=\"mt-5 mb-10\">\n                <section className=\"flex flex-row items-center justify-around mt-1\">\n                    <button \n                        style={pageNum === 1 ? selectedTab : notSelectedTab}\n                        className=\"px-5 py-3 m-0 rounded-3xl focus:outline-none\"\n                        onClick={() => setPageNum(1)}\n                    >\n                        게시물\n                    </button>\n                    <button \n                        style={pageNum === 2 ? selectedTab : notSelectedTab}\n                        className=\"px-5 py-3 rounded-3xl focus:outline-none\"\n                        onClick={() => setPageNum(2)}\n                    > {displayName || displayNameInUser}\n                    </button>\n                    <button \n                        style={pageNum === 3 ? selectedTab : notSelectedTab}\n                        className=\"px-5 py-3 rounded-3xl focus:outline-none\"\n                        onClick={() => setPageNum(3)}\n                    >\n                        방명록\n                    </button>\n                </section>\n            </header>\n\n            <Modal show={anyThingClicked} clicked={() => setAnyThingClicked(false)}>\n                <div className=\"mb-5\">\n                    <h1 className=\"text-xl mb-5\">개발중입니다.</h1>\n                </div>\n            </Modal>\n            \n            {contents}\n        </Layout>\n    )\n}\n\nexport default MyProfile;","import axios from 'axios';\n\nexport const Axios = axios.create({\n    baseURL: 'https://ykring.herokuapp.com',\n})\n","import * as actionTypes from './actionTypes';\nimport { Axios } from '../../axios-instance';\n\n\n// GET시 /user/profile를 리덕스에 담기위한 액션.\nexport const addProfileImgSrc = (profileImgSrc) => {\n    return {\n        type: actionTypes.ADD_PROFILE_IMG_SRC,\n        profileImgSrc,\n    }\n}\nexport const addPhoneNumber = (phoneNumber) => {\n    return {\n        type: actionTypes.ADD_PHONE_NUMBER,\n        phoneNumber,\n    }\n}\nexport const addIsPublic = (isPublic) => {\n    return {\n        type: actionTypes.ADD_IS_PUBLIC,\n        isPublic,\n    }\n}\nexport const addIsGraduate = (isGraduate) => {\n    return {\n        type: actionTypes.ADD_IS_GRADUATE,\n        isGraduate,\n    }\n}\nexport const addDidsplayName = (displayNameInUser) => {\n    return {\n        type: actionTypes.ADD_DISPLAY_NAME,\n        displayNameInUser,\n    }\n}\nexport const addGender = (gender) => {\n    return {\n        type: actionTypes.ADD_GENDER,\n        gender,\n    }\n}\nexport const addUniv = (univ) => {\n    return {\n        type: actionTypes.ADD_UNIV,\n        univ,\n    }\n}\nexport const addAge = (age) => {\n    return {\n        type: actionTypes.ADD_AGE,\n        age,\n    }\n}\nexport const addJob = (job) => {\n    return {\n        type: actionTypes.ADD_JOB,\n        job,\n    }\n}\n\nexport const addAdj = (adj) => {\n    return {\n        type: actionTypes.ADD_ADJ,\n        adj,\n    }\n}\nexport const addLocation = (location, lng, lat) => {\n    return {\n        type: actionTypes.ADD_LOCATION,\n        location,\n        lng,\n        lat\n    }\n}\nexport const addResume = (resume) => {\n    return {\n        type: actionTypes.ADD_RESUME,\n        resume,\n    }\n}\nexport const addWorkPlace = (workPlace) => {\n    return {\n        type: actionTypes.ADD_WORKPLACE,\n        workPlace,\n    }\n}\nexport const addIntroText = (introText) => {\n    return {\n        type: actionTypes.ADD_INTRO_TEXT,\n        introText,\n    }\n}\nexport const addInterest = (interestArr) => {\n    return {\n        type: actionTypes.ADD_INTEREST,\n        interestArr,\n    }\n}\n\n// ArticleImg Submit to AWS S3\nexport const submitImgToAWSStart = () => {\n    return {\n        type: actionTypes.SUBMIT_IMGSRC_TO_AWS_START,\n        \n    }\n}\nexport const submitImgToAWSSuccess = (imgAwsUrl, payloadType) => {\n    return {\n        type: actionTypes.SUBMIT_IMGSRC_TO_AWS_SUCCESS,\n        imgAwsUrl,\n        payloadType,\n    }\n}\nexport const submitImgToAWSFail = () => {\n    return {\n        type: actionTypes.SUBMIT_IMGSRC_TO_AWS_FAIL,\n    }\n}\nexport const submitImgToAWSInit = () => {\n    return {\n        type: actionTypes.SUBMIT_IMG_SRC_TO_AWS_INIT,\n    }\n}\n\nexport const submitArticleImgToAWS = (articleImg_formData, payloadType) => {\n    return dispatch => {\n        dispatch(submitImgToAWSStart());\n\n        Axios.post('/img', articleImg_formData)\n            .then(res => {\n                console.log(res);\n                const imgAwsUrl = res.data.data;\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    console.log(payloadType)\n                    dispatch(submitImgToAWSSuccess(imgAwsUrl, payloadType))\n                    dispatch(submitImgToAWSInit())\n                }else {\n                    dispatch(submitImgToAWSFail())\n                    dispatch(submitImgToAWSInit())\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(submitImgToAWSFail());\n                dispatch(submitImgToAWSInit())\n            })\n    }\n}\n// ----\n\n// Submit proflieImgSrc to AWS S3\nexport const submitProfileImgToAWS = (profileImg_formData, type) => {\n    return dispatch => {\n        dispatch(submitImgToAWSStart());\n\n        Axios.post('/img', profileImg_formData)\n            .then(res => {\n                console.log(res);\n                const imgAwsUrl = res.data.data;\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(submitImgToAWSSuccess(imgAwsUrl, type))\n                    dispatch(submitImgToAWSInit())\n                }else {\n                    dispatch(submitImgToAWSFail())\n                    dispatch(submitImgToAWSInit())\n                }\n            })\n            .catch(err => {{\n                console.log(err);\n                dispatch(submitImgToAWSFail())\n            }})\n    }\n}\n// -----\n\nexport const addArticleText = (articleText) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_TEXT,\n        articleText,\n    }\n}\nexport const addArticleTag = (articleTag) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_HASHTAG,\n        articleTag,\n    }\n}\n\n\n\n\n// SubmitToServer\nexport const submitToServerStart = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_START,\n    }\n}\n\nexport const submitToServerSuccess = (resume, workPlace) => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_SUCCESS,\n        resume,\n        workPlace,\n    }\n}\nexport const submitToServerFail = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_FAIL,\n    }\n}\nexport const submitToServerInit = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_FAIL,\n    }\n}\nexport const submitToServer = (phoneNumberInRedux, latitudeInRedux, longitudeInRedux, passwordInRedux, isPublicInRedux, isGraduateInRedux, emailInRedux, genderInRedux, ageInRedux, jobInRedux, adjInRedux, locationInRedux, articleImgSrcInRedux, articleTextInRedux, articleTagInRedux, displayNameInRedux, interestArrInRedux, introTextInRedux, profileImgSrcInRedux, resumeText, workPlaceText) => {\n    return dispatch => {\n        dispatch(submitToServerStart());\n        const userData = {\n            gender: genderInRedux, \n            age: ageInRedux,\n            adj: adjInRedux, \n            job: jobInRedux, \n            location: locationInRedux, \n            longitude: longitudeInRedux,\n            latitude: latitudeInRedux,\n            displayName: displayNameInRedux, \n            profileImgSrc: profileImgSrcInRedux, \n            introText: introTextInRedux, \n            interestArr: interestArrInRedux, \n            phoneNumber: phoneNumberInRedux,\n            isPublic: isPublicInRedux,\n            isGraduate: isGraduateInRedux,\n            resume: resumeText,\n            workPlace: workPlaceText,\n            password: passwordInRedux,\n            email: emailInRedux,\n            articleImgSrc: articleImgSrcInRedux, \n            articleText: articleTextInRedux, \n            articleTag: articleTagInRedux,\n        };\n        Axios.post('/pre/user', userData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess)\n                    dispatch(submitToServerSuccess(resumeText, workPlaceText));\n                else {\n                    dispatch(submitToServerFail());\n                    dispatch(submitToServerInit());\n                    alert(res.data.message);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(submitToServerFail());\n                dispatch(submitToServerInit());\n                alert('일시적인 오류가 발생했습니다. 잠시후 다시 시도해주세요.');\n            })\n    }\n}\n\n\nexport const updateProfileImg = (updatedProfileImg) => {\n    return {\n        type: actionTypes.UPDATE_PROFILE_IMG,\n        updatedProfileImg,\n    }\n}\n\nexport const updateProfileImgToServer = (updatedProfileImg) => {\n    return dispatch => {\n        dispatch(updateProfileImg(updatedProfileImg));\n        // 서버에 보내기\n    }\n}\n","import * as actionTypes from './actionTypes';\nimport { addProfileImgSrc, addIsPublic, addIsGraduate, addDidsplayName, addAge, addGender, addJob, addAdj, addLocation, addResume, addWorkPlace, addInterest, addUniv, addIntroText, }  from '../actions/User';\nimport { Axios } from '../../axios-instance';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    }\n}\n\nexport const authSuccess = (email) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        email: email,\n    }\n}\n\nexport const authFail = () => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n    }\n}\n\nexport const errorInit = () => {\n    return {\n        type: actionTypes.ERROR_INIT\n    }\n}\n// Auth page, 이메일 보내기\nexport const auth = (email) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email\n        };\n        Axios.post('/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess)\n                    dispatch(authSuccess(email));\n                else {\n                    const errCode = res.data.code;\n                    dispatch(authFail(errCode));\n                    dispatch(errorInit());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                const errorMsg = err.data.message;\n                alert(errorMsg);\n                dispatch(authFail(err));\n                dispatch(errorInit());\n            })\n    }\n}\n\n// Auth page, Confirm 하기\nexport const authConfirmStart = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_START,\n    }\n}\nexport const authConfirmFail = (errCode) => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_FAIL,\n        errCode,\n    }\n}\nexport const authConfirmSuccess = (univKor) => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_SUCCESS,\n        univ: univKor,\n    }\n}\nexport const authConfirmInit = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_INIT,\n    }\n}\n\nexport const authConfirm = (email, code, univKor) => {\n    console.log(univKor);\n    return dispatch => {\n        dispatch(authConfirmStart());\n        const authData = {\n            email,\n            code, \n        };\n        Axios.post('/check/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(authConfirmSuccess(univKor));\n                    dispatch(authConfirmInit());\n                }else {\n                    const errCode = res.data.code;\n                    console.log(errCode);\n                    dispatch(authConfirmFail(errCode));\n                    dispatch(authConfirmInit());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(authConfirmFail(err.code));\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n            })\n    }\n}\n\n// 닉네임/비번찾기 페이지.\nexport const findAuthStart = () => {\n    return {\n        type: actionTypes.FIND_AUTH_START,\n    }\n}\nexport const findAuthSuccess = () => {\n    return {\n        type: actionTypes.FIND_AUTH_SUCCESS,\n    }\n}\nexport const findAuthFail = (errCode) => {\n    return {\n        type: actionTypes.FIND_AUTH_FAIL,\n        errCode,\n    }\n}\nexport const findAuthInit = () => {\n    return {\n        type: actionTypes.FIND_AUTH_INIT,\n    }\n}\nexport const findAuth = (email) => {\n    return dispatch => {\n        dispatch(findAuthStart());\n        const authData = {\n            email,\n        };\n        console.log(authData);\n        Axios.post('/find/info', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(findAuthSuccess());\n                }else {\n                    const errCode = res.data.code;\n                    console.log(errCode);\n                    dispatch(findAuthFail(errCode));\n                    dispatch(findAuthInit());\n                    if(errCode == 457) {\n                        alert(\"가입되지 않은 이메일입니다.\")\n                    }else if(errCode === 451) {\n                        alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 잠시 후에 다시 시도해주세요');\n                    }\n                }\n            })\n            .catch(err => {\n                const errCode = err.data.code;\n                dispatch(findAuthFail(errCode));\n                dispatch(findAuthInit());\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 잠시 후에 다시 시도해주세요');\n            })\n    }\n}\n\n// Start 페이지. 첫 회원가입 \nexport const joinStart = () => {\n    return {\n        type: actionTypes.JOIN_START,\n    }\n}\nexport const joinSuccess = (displayName, pwd, phoneNumber) => {\n    return {\n        type: actionTypes.JOIN_SUCCESS,\n        displayName,\n        pwd,\n        phoneNumber,\n    }\n}\nexport const joinFail = (errCode) => {\n    return {\n        type: actionTypes.JOIN_FAIL,\n        errCode,\n    }\n}\nexport const joinInit = () => {\n    return {\n        type: actionTypes.JOIN_INIT,\n    }\n}\nexport const joinSubmit = (displayName, wpd, phoneNumber) => {\n    return dispatch => {\n        dispatch(joinStart());\n        const authData = {\n            displayName,\n        };\n        console.log(authData);\n        Axios.post('/check/name', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(joinSuccess(displayName, wpd, phoneNumber));\n                }\n                else {\n                    const errCode = res.data.data;\n                    console.log(errCode);\n                    dispatch(joinFail(errCode));\n                    dispatch(joinInit());\n                }\n            })\n            .catch(err => {\n                const errCode = err;\n                dispatch(joinFail(errCode));\n                dispatch(joinInit());\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n            })\n    }\n}\n\n// Login 페이지, submit 하기\nexport const loginStart = () => {\n    return {\n        type: actionTypes.LOGIN_START,\n    }\n}\nexport const loginFail = (error) => {\n    return {\n        type: actionTypes.LOGIN_FAIL,\n        error,\n    }\n}\nexport const loginSuccess = (displayName, token) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        displayName,\n        token,\n    }\n}\nexport const loginInit = () => {\n    return {\n        type: actionTypes.LOGIN_INIT,\n    }\n}\nexport const loginSubmit = (displayName, password) => {\n    return dispatch => {\n        dispatch(loginStart());\n        const authData = {\n            displayName,\n            password,\n        };\n        Axios.post('/login', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    const token = res.data.data.token;\n                    dispatch(loginSuccess(displayName, token));\n                    localStorage.setItem('tk', token);\n                    dispatch(getUser(token));\n                }else {\n                    const errCode = res.data.code;\n                    console.log(errCode);\n                    dispatch(loginFail(errCode));\n                    dispatch(loginInit());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(loginFail(err));\n                dispatch(loginInit());\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n            })\n    }\n}\n\n// (** User 스토어의 액션들) \n// /my-profile 페이지. 토큰받아서 GET /user/profile \nexport const getUserStart = () => {\n    return {\n        type: actionTypes.GET_USER_START,\n    }\n}\nexport const getUserSuccess = (profileImgSrc, adj, job, displayNameInUser, gender, university, isGraduate, isPublic, location, age, resume, workPlace, introText, hashtagCount ) => {\n    return dispatch => {\n        console.log(profileImgSrc, adj, job, displayNameInUser, gender, university, isGraduate, isPublic, location, age, resume, workPlace, introText, hashtagCount);\n        dispatch(addProfileImgSrc(profileImgSrc));\n        dispatch(addIsGraduate(isGraduate));\n        dispatch(addIsPublic(isPublic));\n        dispatch(addAdj(adj));\n        dispatch(addJob(job));\n        dispatch(addGender(gender));\n        dispatch(addDidsplayName(displayNameInUser));\n        dispatch(addUniv(university));\n        dispatch(addLocation(location));\n        dispatch(addAge(age));\n        dispatch(addResume(resume));\n        dispatch(addWorkPlace(workPlace));\n        dispatch(addIntroText(introText));\n        dispatch(addInterest(hashtagCount));\n        dispatch({type: actionTypes.GET_USER_SUCCESS});\n    }\n}\nexport const getUserFail = () => {\n    return {\n        type: actionTypes.GET_USER_FAIL,\n    }\n}\nexport const getUser = (token) => {\n    return dispatch => {\n        dispatch(getUserStart());\n            Axios.get('/user/profile', {\n                headers: {\n                    'access-token': `${token}`\n                }\n            })\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    const { profileImgSrc, adj, job, displayName, gender, university, isGraduate, isPublic, location, age, resume, workPlace,  introText, hashtagCount } = res.data.data;\n                    dispatch(getUserSuccess(profileImgSrc, adj, job, displayName, gender, university, isGraduate, isPublic, location, age, resume, workPlace, introText, hashtagCount));\n                }else {\n                    dispatch(getUserFail());\n                    alert(\"죄송합니다 서버에 일시적인 오류가 발생했습니다. 잠시 후 다시 로그인해주세요.\");\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                alert(\"죄송합니다 서버에 일시적인 오류가 발생했습니다. 잠시 후 다시 로그인해주세요.\");\n            })\n    }\n}\n\n","import React from 'react';\n\nfunction Backdrop({ show, clicked }) {\n    return (\n        show ? ( \n            <div \n                style={{backgroundColor: 'rgba(0, 0, 0, .7'}}\n                className=\"w-full h-full z-30 fixed left-0 top-0\" \n                onClick={clicked}\n            /> \n        )\n        : null\n    )\n}\n\nexport default Backdrop;","import React from 'react';\nimport Backdrop from './backdrop';\n\nlet memoizedModal = null;\n\nconst Modal = ({ children, show, clicked }) => {\n    return (\n        <div className=\"w-full\">\n            <Backdrop show={show} clicked={clicked}/>\n            <div className=\"w-full\">\n                <div \n                    style={{\n                        visibility: show ? 'visible' :'hidden',\n                        borderRadius: '10px',\n                        position: \"fixed\",\n                        zIndex: 500,\n                        width: '340px',\n                        textAlign: 'center',\n                        border: '1px solid #ccc',\n                        boxShadow: '1px 1px 1px black',\n                        backgroundColor: 'white',\n                        padding: '36px',\n                        left: `calc(50% - 170px)`,\n                        top: '30%',\n                        boxSizing: 'border-box',\n                        transition: 'all .3s ease-out',\n                        transform: show ? 'scale(1)' : 'scale(0.5)',\n                        opacity: show ? '1' : '0'\n                    }}\n                >\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default memoizedModal = React.memo(Modal);\n","export default __webpack_public_path__ + \"static/media/interest_1.84344d12.svg\";","export default __webpack_public_path__ + \"static/media/interest_2.126bc740.svg\";","export default __webpack_public_path__ + \"static/media/interest_3.1595dcd5.svg\";","export default __webpack_public_path__ + \"static/media/interest_4.3a58c578.svg\";","export default __webpack_public_path__ + \"static/media/interest_5.461be812.svg\";","export default __webpack_public_path__ + \"static/media/interest_6.fbf94ac8.svg\";","export default __webpack_public_path__ + \"static/media/interest_7.716a0694.svg\";","export default __webpack_public_path__ + \"static/media/interest_8.bae24315.svg\";"],"sourceRoot":""}