{"version":3,"sources":["components/UI/textFieldUI.js","pages/PhoneNumber.js","axios-instance.js","store/actions/Auth.js","store/actions/User.js"],"names":["TextFieldUI","width","label","placeholder","submitted","changeHandler","onSubmit","e","noValidate","autoComplete","className","style","id","variant","onChange","autoFocus","PhoneNumber","history","useState","phoneNum","setPhoneNum","dispatch","useDispatch","phoneNumberChangeHandler","useCallback","console","log","target","value","phoneNumerBtnHandler","preventDefault","length","alert","actions","push","headerNone","footerNone","height","borderBottom","onClick","goBack","cursor","src","alt","padding","margin","fontSize","color","Axios","axios","create","baseURL","authFail","type","actionTypes","auth","email","univKor","authData","post","then","res","data","success","univ","authSuccess","code","window","location","assign","catch","err","authConfirmFail","authConfirmInit","authConfirm","addPhoneNumber","phoneNumber","addIsPublic","isPublic","addIsGraduate","isGraduate","addGender","gender","addAge","age","addJob","job","addAdj","adj","addLocation","submitArticleImgToAWSFail","submitImgToAWSInit","submitArticleImgToAWS","articleImg_formData","imgAwsUrl","submitArticleImgToAWSSuccess","addArticleText","articleText","addArticleTag","articleTag","addInterest","interestArr","displayNameFail","displayNameInit","displayName","isSuccess","displayNameSuccess","addIntroText","introText","submitProfileImgToAWSFail","submitProfileImgToAWS","profileImg_formData","submitProfileImgToAWSSuccess","submitToServerFail","submitToServer","phoneNumberInRedux","isPublicInRedux","isGraduateInRedux","emailInRedux","genderInRedux","ageInRedux","jobInRedux","adjInRedux","locationInRedux","articleImgSrcInRedux","articleTextInRedux","articleTagInRedux","displayNameInRedux","interestArrInRedux","introTextInRedux","profileImgSrcInRedux","resumeText","workPlaceText","userData","articleImgSrc","profileImgSrc","resume","workPlace","message","updateProfileImgToServer","updatedProfileImg","updateProfileImg"],"mappings":"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","file":"static/js/10.27b6570f.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst TextFieldUI = ({ width, label, placeholder, submitted, changeHandler }) => {\n  return (\n    <form onSubmit={(e) => submitted(e)} noValidate autoComplete=\"off\" className=\"flex flex-row justify-center\" style={{width: width}}>\n      <TextField \n        id=\"filled-basic\" \n        variant=\"filled\"\n        placeholder={placeholder} \n        label={label}\n        onChange={(e) => changeHandler(e)}\n        autoFocus \n      />\n    </form>\n  );\n}\nexport default TextFieldUI;","import React, {useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Layout from '../components/layout';\nimport TextFieldUI from '../components/UI/textFieldUI';\nimport * as actions from '../store/actions/index';\n\nconst PhoneNumber = ({ history }) => {\n    const [phoneNum, setPhoneNum] = useState('');\n    const dispatch = useDispatch();\n\n    const phoneNumberChangeHandler = useCallback((e) => {\n        console.log(e.target.value);\n        setPhoneNum(e.target.value);\n    }, []);\n\n    const phoneNumerBtnHandler = useCallback((e) => {\n        e.preventDefault();\n        if(phoneNum.length !== 11)\n            return alert('전화번호를 올바르게 입력해주세요.');\n        \n        dispatch(actions.addPhoneNumber(phoneNum));\n        history.push('/login');\n    }, [phoneNum]);\n    \n    return (\n        <Layout headerNone footerNone={true}>\n            <nav style={{height: '60px', borderBottom: '1px solid #eee'}} className=\"flex flex-row items-center justify-between \">\n                <img\n                    onClick={() => history.goBack()} \n                    style={{width: '25px', height: '25px', cursor: 'pointer'}}\n                    src=\"/arrow-back-outline.svg\"\n                    alt=\"back\"\n                />\n            </nav>\n            <section className=\"mb-10\">\n                <section style={{padding: '10px 30px'}} className=\"text-left mt-5\">\n                    <h1 style={{margin: '10px 0', fontSize: '24px'}} className=\"text-2xl text-left\">전화번호</h1>\n                    <p style={{color: \"#C5C1C1\"}}>XIRCLE 관련 중요 공지사항을 보낼때 이외에는 <br/> 절대 사용하지 않습니다.</p>\n                </section>\n                <section className=\"px-10 mt-32\">\n                    <TextFieldUI \n                        width=\"100%\"\n                        submitted={(e) => phoneNumerBtnHandler(e)} \n                        changeHandler={(e) => phoneNumberChangeHandler(e)}\n                        label=\"전화번호\" \n                        placeholder=\"-없이 입력해주세요\" \n                    />\n                </section>\n                <div className=\"flex flex-row justify-center\">\n                    <button onClick={(e) => phoneNumerBtnHandler(e)} className=\"mt-20 w-3/4 border-2 rounded-xl px-5 py-3 bg-gray-400 text-white focus:bg-black focus:outline-none\">다음</button>\n                </div>\n            </section>\n        </Layout>\n    )\n}\n\nexport default PhoneNumber;","import axios from 'axios';\n\nexport const Axios = axios.create({\n    baseURL: 'https://ykring.herokuapp.com',\n})\n","import * as actionTypes from './actionTypes';\nimport { Axios } from '../../axios-instance';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    }\n}\n\nexport const authSuccess = (email, univKor) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        email: email,\n        univ: univKor\n    }\n}\n\nexport const authFail = () => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n    }\n}\n\nexport const errorInit = () => {\n    return {\n        type: actionTypes.ERROR_INIT\n    }\n}\n\nexport const auth = (email, univKor) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email\n        };\n        Axios.post('/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess)\n                    dispatch(authSuccess(email, univKor));\n                else {\n                    const code = res.data.code;\n                    dispatch(authFail());\n                    if(code === 450) {\n                        // 여기서 dispatch 또해야함. 해당 이메일로 정보를 서버에서 가져와야함.\n                        window.location.assign('/my-profile');\n                    }else {\n                        alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n                    }\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n                dispatch(authFail(err));\n            })\n    }\n}\n\n// auth Confirm\nexport const authConfirmStart = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_START,\n    }\n}\nexport const authConfirmFail = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_FAIL,\n    }\n}\nexport const authConfirmSuccess = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_SUCCESS,\n    }\n}\nexport const authConfirmInit = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_INIT,\n    }\n}\n\nexport const authConfirm = (email) => {\n    return dispatch => {\n        dispatch(authConfirmStart());\n        const authData = {\n            email: email\n        };\n        Axios.post('/check/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(authConfirmSuccess());\n                    dispatch(authConfirmInit());\n                }\n                else {\n                    dispatch(authConfirmFail());\n                    dispatch(authConfirmInit());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(authConfirmFail());\n                dispatch(authConfirmInit());\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n            })\n    }\n}\n\n","import * as actionTypes from './actionTypes';\nimport { Axios } from '../../axios-instance';\n\n\nexport const addPhoneNumber = (phoneNumber) => {\n    return {\n        type: actionTypes.ADD_PHONE_NUMBER,\n        phoneNumber,\n    }\n}\nexport const addIsPublic = (isPublic) => {\n    return {\n        type: actionTypes.ADD_IS_PUBLIC,\n        isPublic,\n    }\n}\nexport const addIsGraduate = (isGraduate) => {\n    return {\n        type: actionTypes.ADD_IS_GRADUATE,\n        isGraduate,\n    }\n}\nexport const addGender = (gender) => {\n    return {\n        type: actionTypes.ADD_GENDER,\n        gender,\n    }\n}\nexport const addAge = (age) => {\n    return {\n        type: actionTypes.ADD_AGE,\n        age,\n    }\n}\nexport const addJob = (job) => {\n    return {\n        type: actionTypes.ADD_JOB,\n        job,\n    }\n}\n\nexport const addAdj = (adj) => {\n    return {\n        type: actionTypes.ADD_ADJ,\n        adj,\n    }\n}\n\nexport const addLocation = (location) => {\n    return {\n        type: actionTypes.ADD_LOCATION,\n        location,\n    }\n}\n\n// ArticleImg Submit to AWS S3\nexport const submitArticleImgToAWSStart = () => {\n    return {\n        type: actionTypes.SUBMIT_ARTICLE_IMGSRC_TO_AWS_START,\n    }\n}\nexport const submitArticleImgToAWSSuccess = (imgAwsUrl) => {\n    return {\n        type: actionTypes.SUBMIT_ARTICLE_IMGSRC_TO_AWS_SUCCESS,\n        imgAwsUrl,\n    }\n}\nexport const submitArticleImgToAWSFail = () => {\n    return {\n        type: actionTypes.SUBMIT_ARTICLE_IMGSRC_TO_AWS_FAIL,\n    }\n}\nexport const submitImgToAWSInit = () => {\n    return {\n        type: actionTypes.SUBMIT_IMG_SRC_TO_AWS_INIT,\n    }\n}\n\nexport const submitArticleImgToAWS = (articleImg_formData) => {\n    return dispatch => {\n        dispatch(submitArticleImgToAWSStart());\n        \n        console.log(articleImg_formData);\n\n        Axios.post('/img', articleImg_formData)\n            .then(res => {\n                console.log(res);\n                const imgAwsUrl = res.data.data;\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(submitArticleImgToAWSSuccess(imgAwsUrl))\n                    dispatch(submitImgToAWSInit())\n                }else {\n                    dispatch(submitArticleImgToAWSFail())\n                    dispatch(submitImgToAWSInit())\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(submitArticleImgToAWSFail());\n                dispatch(submitImgToAWSInit())\n            })\n    }\n}\n// ----\n\nexport const addArticleText = (articleText) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_TEXT,\n        articleText,\n    }\n}\nexport const addArticleTag = (articleTag) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_HASHTAG,\n        articleTag,\n    }\n}\n\nexport const addInterest = (interestArr) => {\n    return {\n        type: actionTypes.ADD_INTEREST,\n        interestArr,\n    }\n}\n\n// displayName check\nexport const displayNameStart = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_START,\n    }\n}\nexport const displayNameSuccess = (displayName) => {\n    return {\n        type: actionTypes.DISPLAYNAME_SUCCESS,\n        displayName,\n    }\n}\nexport const displayNameFail = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_FAIL,\n    }\n}\nexport const displayNameInit = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_INIT,\n    }\n}\n\nexport const displayName = (displayName) => {\n    return dispatch => {\n        dispatch(displayNameStart());\n\n        const data = {\n            displayName\n        }\n        Axios.post('/check/name', data)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess){ \n                    dispatch(displayNameSuccess(displayName));\n                }else {\n                    dispatch(displayNameFail());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(displayNameFail());\n            })\n    }\n}\n// -----\n\nexport const addIntroText = (introText) => {\n    return {\n        type: actionTypes.ADD_INTRO_TEXT,\n        introText,\n    }\n}\n\n// Submit proflieImgSrc to AWS S3\nexport const submitProfileImgToAWSStart = () => {\n    return {\n        type: actionTypes.SUBMIT_PROFILE_IMGSRC_TO_AWS_START,\n    }\n}\nexport const submitProfileImgToAWSSuccess = (imgAwsUrl) => {\n    return {\n        type: actionTypes.SUBMIT_PROFILE_IMGSRC_TO_AWS_SUCCESS,\n        imgAwsUrl,\n    }\n}\nexport const submitProfileImgToAWSFail = () => {\n    return {\n        type: actionTypes.SUBMIT_PROFILE_IMGSRC_TO_AWS_FAIL,\n    }\n}\n\nexport const submitProfileImgToAWS = (profileImg_formData) => {\n    return dispatch => {\n        dispatch(submitProfileImgToAWSStart());\n\n        Axios.post('/img', profileImg_formData)\n            .then(res => {\n                console.log(res);\n                const imgAwsUrl = res.data.data;\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(submitProfileImgToAWSSuccess(imgAwsUrl))\n                }else {\n                    dispatch(submitProfileImgToAWSFail())\n                }\n            })\n            .catch(err => {{\n                console.log(err);\n                dispatch(submitProfileImgToAWSFail())\n            }})\n    }\n}\n// -----\n\n// SubmitToServer\nexport const submitToServerStart = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_START,\n    }\n}\n\nexport const submitToServerSuccess = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_SUCCESS,\n    }\n}\nexport const submitToServerFail = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_FAIL,\n    }\n}\n\nexport const submitToServer = (phoneNumberInRedux, isPublicInRedux, isGraduateInRedux, emailInRedux, genderInRedux, ageInRedux, jobInRedux, adjInRedux, locationInRedux, articleImgSrcInRedux, articleTextInRedux, articleTagInRedux, displayNameInRedux, interestArrInRedux, introTextInRedux, profileImgSrcInRedux, resumeText, workPlaceText) => {\n    return dispatch => {\n        dispatch(submitToServerStart());\n        const userData = {\n            phoneNumber: phoneNumberInRedux,\n            email: emailInRedux,\n            isPublic: isPublicInRedux,\n            isGraduate: isGraduateInRedux,\n            gender: genderInRedux, \n            age: ageInRedux,\n            job: jobInRedux, \n            adj: adjInRedux, \n            location: locationInRedux, \n            articleImgSrc: articleImgSrcInRedux, \n            articleText: articleTextInRedux, \n            articleTag: articleTagInRedux,\n            displayName: displayNameInRedux, \n            interestArr: interestArrInRedux, \n            introText: introTextInRedux, \n            profileImgSrc: profileImgSrcInRedux, \n            resume: resumeText,\n            workPlace: workPlaceText\n        };\n        Axios.post('/pre/user', userData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess)\n                    dispatch(submitToServerSuccess());\n                else {\n                    dispatch(submitToServerFail());\n                    alert(res.data.message);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(submitToServerFail());\n                alert('일시적인 오류가 발생했습니다. 잠시후 다시 시도해주세요.');\n            })\n    }\n}\n\n\nexport const updateProfileImg = (updatedProfileImg) => {\n    return {\n        type: actionTypes.UPDATE_PROFILE_IMG,\n        updatedProfileImg,\n    }\n}\n\nexport const updateProfileImgToServer = (updatedProfileImg) => {\n    return dispatch => {\n        dispatch(updateProfileImg(updatedProfileImg));\n        // 서버에 보내기\n    }\n}\n"],"sourceRoot":""}