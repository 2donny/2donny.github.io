{"version":3,"sources":["../node_modules/react-spinner-material/lib/inject.js","pages/Auth/Login.js","axios-instance.js","store/actions/User.js","store/actions/Auth.js","../node_modules/react-spinner-material/lib/index.js"],"names":["css","ID","window","document","getElementById","head","getElementsByTagName","sprc","createElement","id","type","styleSheet","cssText","appendChild","createTextNode","Login","history","useState","displayNameDescription","setDisplayNameDescription","passwordDescription","setPasswordNameDescription","isBtnDisabled","setIsBtnDisabled","isLoading","useSelector","store","auth","loading","errCode","isConfirmed","displayRef","useRef","passwordRef","dispatch","useDispatch","useEffect","push","displayNameChangeHandler","useCallback","event","preventDefault","displayNameText","target","value","match","length","passwordChangeHandler","passwordText","loginSubmitHandler","e","actions","current","headerNone","footerNone","style","height","borderBottom","className","onClick","goBack","width","marginLeft","cursor","src","alt","href","color","marginRight","padding","textAlign","marginBottom","fontSize","margin","whiteSpace","onSubmit","autoComplete","noValidate","ref","placeholder","autoFocus","onChange","position","left","top","transform","size","marginTop","disabled","Axios","axios","create","baseURL","addIsPublic","isPublic","actionTypes","addIsGraduate","isGraduate","addGender","gender","addAge","age","addJob","job","addAdj","adj","addLocation","location","lng","lat","addIntroText","introText","addInterest","interestArr","submitImgToAWSStart","submitImgToAWSSuccess","imgAwsUrl","payloadType","submitImgToAWSFail","submitImgToAWSInit","submitArticleImgToAWS","articleImg_formData","post","then","res","console","log","data","success","catch","err","submitProfileImgToAWS","profileImg_formData","addArticleText","articleText","addArticleTag","articleTag","submitToServerFail","submitToServerInit","submitToServer","phoneNumberInRedux","latitudeInRedux","longitudeInRedux","passwordInRedux","isPublicInRedux","isGraduateInRedux","emailInRedux","genderInRedux","ageInRedux","jobInRedux","adjInRedux","locationInRedux","articleImgSrcInRedux","articleTextInRedux","articleTagInRedux","displayNameInRedux","interestArrInRedux","introTextInRedux","profileImgSrcInRedux","resumeText","workPlaceText","userData","longitude","latitude","displayName","profileImgSrc","phoneNumber","resume","workPlace","password","email","articleImgSrc","alert","message","updateProfileImgToServer","updatedProfileImg","updateProfileImg","authFail","errorInit","authData","authSuccess","code","errorMsg","authConfirmFail","authConfirmInit","authConfirm","univKor","univ","authConfirmSuccess","findAuthFail","findAuthInit","findAuth","joinFail","joinInit","joinSubmit","wpd","pwd","joinSuccess","loginFail","error","loginInit","loginSubmit","token","loginSuccess","localStorage","setItem","getUser","getUserSuccess","displayNameInUser","university","hashtagCount","addProfileImgSrc","addDidsplayName","addResume","addWorkPlace","get","headers","__assign","this","Object","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","__rest","indexOf","getOwnPropertySymbols","__importStar","mod","__esModule","result","k","defineProperty","exports","React","require","default","_a","_b","visible","_c","_d","stroke","_e","radius","rest","borderColor","borderWidth"],"mappings":"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","file":"static/js/12.2e8a1736.chunk.js","sourcesContent":["\"use strict\";\nvar css = \"\\n.react-spinner-material {\\n  width: 80px;\\n  height: 80px;\\n  border-radius: 50%;\\n  border: 10px solid #333;\\n  box-sizing: border-box;\\n  -webkit-animation: rsm-sweep 1s linear alternate infinite, rsm-rotate 0.8s linear infinite;\\n          animation: rsm-sweep 1s linear alternate infinite, rsm-rotate 0.8s linear infinite;\\n}\\n\\n@keyframes rsm-rotate {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@-webkit-keyframes rsm-rotate {\\n  from {\\n    -webkit-transform: rotate(0deg);\\n  }\\n  to {\\n    -webkit-transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes rsm-sweep {\\n  0% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 50% 50%, 0% 0%, 0% 0%, 0% 0%);\\n    clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 50% 50%, 0% 0%, 0% 0%, 0% 0%);\\n  }\\n  50% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 100%, 0% 100%, 50% 50%, 100% 0%, 100% 0%, 0% 0%);\\n    clip-path: polygon(0% 0%, 0% 100%, 0% 100%, 50% 50%, 100% 0%, 100% 0%, 0% 0%);\\n  }\\n  100% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 100%, 100% 100%, 50% 50%, 100% 100%, 100% 0%, 0% 0%);\\n    clip-path: polygon(0% 0%, 0% 100%, 100% 100%, 50% 50%, 100% 100%, 100% 0%, 0% 0%);\\n  }\\n}\\n\\n@-webkit-keyframes rsm-sweep {\\n  0% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 50% 50%, 0% 0%, 0% 0%, 0% 0%);\\n  }\\n  50% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 100%, 0% 100%, 50% 50%, 100% 0%, 100% 0%, 0% 0%);\\n  }\\n  100% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 100%, 100% 100%, 50% 50%, 100% 100%, 100% 0%, 0% 0%);\\n  }\\n}\\n\";\nvar ID = 'spinner_id_style';\n(function () {\n    if (typeof window === 'undefined') {\n        return;\n    }\n    if (!document.getElementById(ID)) {\n        var head = document.head || document.getElementsByTagName('head')[0];\n        var sprc = document.createElement('style');\n        sprc.id = ID;\n        sprc.type = \"text/css\";\n        if (sprc.styleSheet) {\n            sprc.styleSheet.cssText = css;\n        }\n        else {\n            sprc.appendChild(document.createTextNode(css));\n        }\n        if (head) {\n            head.appendChild(sprc);\n        }\n    }\n})();\n","import React, { useCallback, useEffect, useRef, useState }  from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Layout from '../../components/layout';\nimport * as actions from '../../store/actions/index';\nimport Spinner from 'react-spinner-material';\n\nconst Login = ({ history }) => {\n    const [displayNameDescription, setDisplayNameDescription] = useState(null);\n    const [passwordDescription, setPasswordNameDescription] = useState(null);\n    const [isBtnDisabled, setIsBtnDisabled] = useState(true);\n\n    const isLoading = useSelector(store => store.auth.loading);\n    const errCode = useSelector(store => store.auth.errCode); //만약 토큰이 있으면 AUTH_SUCCESS 이므로\n    const isConfirmed = useSelector(store => store.auth.isConfirmed);\n    \n    const displayRef = useRef();\n    const passwordRef = useRef();\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(isConfirmed === null) {\n            return null;\n        }else if(isConfirmed === true) {\n            history.push('/my-profile');\n        }else {\n            return null;\n        }\n    }, [isConfirmed]);\n\n    const displayNameChangeHandler = useCallback((event) => {\n        event.preventDefault();\n        const displayNameText = event.target.value;\n        const displayNameRegex = /^@/;\n        if(!displayNameText.match(displayNameRegex)) {\n            setDisplayNameDescription('닉네임 맨앞에 @를 포함해주세요');\n        }else {\n            if(displayNameText.length < 4) {\n                setDisplayNameDescription('닉네임은 3자리 이상으로 해주세요.');\n            }\n            else {\n                setDisplayNameDescription(null);\n            }\n        }\n    }, []);\n    const passwordChangeHandler = useCallback((event) => {\n        event.preventDefault();\n\n        const passwordText = event.target.value;\n        if(passwordText.length < 6 || passwordText.length > 10) {\n            setPasswordNameDescription('비밀번호는 6자리 이상 10자리 이하입니다.');\n            setIsBtnDisabled(true);\n        }else {\n            setPasswordNameDescription(null);\n            if(displayNameDescription === null)\n                setIsBtnDisabled(false);\n        }\n    }, []);\n    \n    // 로그인 버튼 누를때\n    const loginSubmitHandler = useCallback((e) => {\n        e.preventDefault();\n        \n        dispatch(actions.loginSubmit(displayRef.current.value, passwordRef.current.value));\n    }, []);\n\n    useEffect(() => {\n        if(errCode === null) {\n            return null;\n        }else if(errCode === 455) {\n            setDisplayNameDescription('존재하지 않는 별명입니다.');\n        }else if(errCode === 456) {\n            setPasswordNameDescription(\"비밀번호 불일치\");\n        }\n    }, [errCode]);\n    return (\n        <Layout headerNone footerNone={true}>\n            <nav style={{height: '60px', borderBottom: '1px solid #eee'}} className=\"flex flex-row items-center justify-between \">\n                <img\n                    onClick={() => history.goBack()} \n                    style={{width: '25px', height: '25px', marginLeft: 10, cursor: 'pointer'}}\n                    src=\"/arrow-back-outline.svg\"\n                    alt=\"back\"\n                />\n                <a href='http://pf.kakao.com/_kDxhtK' style={{color: \"#949393\", cursor: 'pointer', marginRight: 30}}> 문의하기 </a>\n            </nav>\n\n            <section className=\"mb-10\">\n                <section style={{padding: '10px 30px'}} className=\"text-center mt-5\">\n                    <h1 style={{textAlign: 'left', marginBottom: '5px', fontSize: '24px'}} className=\"text-2xl text-left\">로그인</h1>\n                    <p style={{fontSize: '15px', color: \"#C5C1C1\", textAlign: 'left', margin: '20px auto', whiteSpace: 'pre'}}> XIRCLE을 이용해 주셔서 감사합니다. <br/> 연고링은 베타테스트단계로 <br/> 서울대 고려대 연세대 서강대 한양대 성균관대<br/> 학생들로만 진행중입니다.</p>\n                </section>\n                <section className=\"px-10 mb-5\">\n                    <section className=\"text-center my-10\">\n                        <form onSubmit={(e) => loginSubmitHandler(e)} autoComplete=\"off\" noValidate>\n                            <div className=\"flex flex-col\"> \n                                <input \n                                    type=\"text\"\n                                    ref={displayRef}\n                                    placeholder=\"@닉네임을 적어주세요\"\n                                    className=\"bg-gray-100 px-5 py-5\"\n                                    autoFocus\n                                    onChange={(e) => displayNameChangeHandler(e)}\n                                />\n                                {displayNameDescription ? <p style={{color: 'red', textAlign: 'left', fontSize: 12, margin: '5px 0'}}>{displayNameDescription}</p> : <p style={{height: 17, margin: '5px 0'}}></p>}\n                                {errCode === 452 ? <p style={{color: 'red', margin: 0}}>[중복]사용자 이름 {displayRef.current.value}은 사용하실 수 없습니다.</p> : null}\n                                <input \n                                    type=\"password\"\n                                    ref={passwordRef}\n                                    placeholder=\"비밀번호를 적어주세요.\"\n                                    className=\"bg-gray-100 px-5 py-5\"\n                                    onChange={(e) => passwordChangeHandler(e)}\n                                />\n                                {passwordDescription ? <p style={{color: 'red', textAlign: 'left', fontSize: 12, margin: '5px 0'}}>{passwordDescription}</p> : <p style={{height: 17, margin: '5px 0'}}></p>}\n                            </div>\n                            \n                            {isLoading ? (\n                                <div style={{height: '40px', position: 'relative'}}>\n                                    <div className=\"flex flex-col items-center\" style={{position: 'absolute', left: '50%', top: 0, transform: 'translate(-50%, 0)'}}>\n                                        <Spinner \n                                            size={5}\n                                            color={\"#aaa\"}\n                                        />\n                                        <p style={{marginTop: 10, fontSize: 12, color: \"#8D8D8D\"}}>로그인 중입니다..</p>\n                                    </div>\n                                </div>\n                            ) : <div style={{height: '40px'}}></div>}\n                            <button disabled={isBtnDisabled} onClick={(e) => loginSubmitHandler(e)} style={{width: '100%', fontSize: 16, padding: \"15px 0\", margin: '40px 0 20px'}} className=\" rounded-lg text-white bg-gray-400 focus:outline-none\">\n                                다음\n                            </button>\n                        </form>\n                        <p onClick={(e) => history.push('/find-auth')} style={{color: \"#949393\", cursor: 'pointer'}}>잊어버리셨나요?</p>\n                    </section>\n                </section>\n            </section>\n        </Layout>\n    )\n}\n\nexport default Login;","import axios from 'axios';\n\nexport const Axios = axios.create({\n    baseURL: 'https://ykring.herokuapp.com',\n})\n","import * as actionTypes from './actionTypes';\nimport { Axios } from '../../axios-instance';\n\n\n// GET시 /user/profile를 리덕스에 담기위한 액션.\nexport const addProfileImgSrc = (profileImgSrc) => {\n    return {\n        type: actionTypes.ADD_PROFILE_IMG_SRC,\n        profileImgSrc,\n    }\n}\nexport const addPhoneNumber = (phoneNumber) => {\n    return {\n        type: actionTypes.ADD_PHONE_NUMBER,\n        phoneNumber,\n    }\n}\nexport const addIsPublic = (isPublic) => {\n    return {\n        type: actionTypes.ADD_IS_PUBLIC,\n        isPublic,\n    }\n}\nexport const addIsGraduate = (isGraduate) => {\n    return {\n        type: actionTypes.ADD_IS_GRADUATE,\n        isGraduate,\n    }\n}\nexport const addDidsplayName = (displayNameInUser) => {\n    return {\n        type: actionTypes.ADD_DISPLAY_NAME,\n        displayNameInUser,\n    }\n}\nexport const addGender = (gender) => {\n    return {\n        type: actionTypes.ADD_GENDER,\n        gender,\n    }\n}\nexport const addUniv = (univ) => {\n    return {\n        type: actionTypes.ADD_UNIV,\n        univ,\n    }\n}\nexport const addAge = (age) => {\n    return {\n        type: actionTypes.ADD_AGE,\n        age,\n    }\n}\nexport const addJob = (job) => {\n    return {\n        type: actionTypes.ADD_JOB,\n        job,\n    }\n}\n\nexport const addAdj = (adj) => {\n    return {\n        type: actionTypes.ADD_ADJ,\n        adj,\n    }\n}\nexport const addLocation = (location, lng, lat) => {\n    return {\n        type: actionTypes.ADD_LOCATION,\n        location,\n        lng,\n        lat\n    }\n}\nexport const addResume = (resume) => {\n    return {\n        type: actionTypes.ADD_RESUME,\n        resume,\n    }\n}\nexport const addWorkPlace = (workPlace) => {\n    return {\n        type: actionTypes.ADD_WORKPLACE,\n        workPlace,\n    }\n}\nexport const addIntroText = (introText) => {\n    return {\n        type: actionTypes.ADD_INTRO_TEXT,\n        introText,\n    }\n}\nexport const addInterest = (interestArr) => {\n    return {\n        type: actionTypes.ADD_INTEREST,\n        interestArr,\n    }\n}\n\n// ArticleImg Submit to AWS S3\nexport const submitImgToAWSStart = () => {\n    return {\n        type: actionTypes.SUBMIT_IMGSRC_TO_AWS_START,\n        \n    }\n}\nexport const submitImgToAWSSuccess = (imgAwsUrl, payloadType) => {\n    return {\n        type: actionTypes.SUBMIT_IMGSRC_TO_AWS_SUCCESS,\n        imgAwsUrl,\n        payloadType,\n    }\n}\nexport const submitImgToAWSFail = () => {\n    return {\n        type: actionTypes.SUBMIT_IMGSRC_TO_AWS_FAIL,\n    }\n}\nexport const submitImgToAWSInit = () => {\n    return {\n        type: actionTypes.SUBMIT_IMG_SRC_TO_AWS_INIT,\n    }\n}\n\nexport const submitArticleImgToAWS = (articleImg_formData, payloadType) => {\n    return dispatch => {\n        dispatch(submitImgToAWSStart());\n\n        Axios.post('/img', articleImg_formData)\n            .then(res => {\n                console.log(res);\n                const imgAwsUrl = res.data.data;\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    console.log(payloadType)\n                    dispatch(submitImgToAWSSuccess(imgAwsUrl, payloadType))\n                    dispatch(submitImgToAWSInit())\n                }else {\n                    dispatch(submitImgToAWSFail())\n                    dispatch(submitImgToAWSInit())\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(submitImgToAWSFail());\n                dispatch(submitImgToAWSInit())\n            })\n    }\n}\n// ----\n\n// Submit proflieImgSrc to AWS S3\nexport const submitProfileImgToAWS = (profileImg_formData, type) => {\n    return dispatch => {\n        dispatch(submitImgToAWSStart());\n\n        Axios.post('/img', profileImg_formData)\n            .then(res => {\n                console.log(res);\n                const imgAwsUrl = res.data.data;\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(submitImgToAWSSuccess(imgAwsUrl, type))\n                    dispatch(submitImgToAWSInit())\n                }else {\n                    dispatch(submitImgToAWSFail())\n                    dispatch(submitImgToAWSInit())\n                }\n            })\n            .catch(err => {{\n                console.log(err);\n                dispatch(submitImgToAWSFail())\n            }})\n    }\n}\n// -----\n\nexport const addArticleText = (articleText) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_TEXT,\n        articleText,\n    }\n}\nexport const addArticleTag = (articleTag) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_HASHTAG,\n        articleTag,\n    }\n}\n\n\n\n\n// SubmitToServer\nexport const submitToServerStart = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_START,\n    }\n}\n\nexport const submitToServerSuccess = (resume, workPlace) => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_SUCCESS,\n        resume,\n        workPlace,\n    }\n}\nexport const submitToServerFail = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_FAIL,\n    }\n}\nexport const submitToServerInit = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_FAIL,\n    }\n}\nexport const submitToServer = (phoneNumberInRedux, latitudeInRedux, longitudeInRedux, passwordInRedux, isPublicInRedux, isGraduateInRedux, emailInRedux, genderInRedux, ageInRedux, jobInRedux, adjInRedux, locationInRedux, articleImgSrcInRedux, articleTextInRedux, articleTagInRedux, displayNameInRedux, interestArrInRedux, introTextInRedux, profileImgSrcInRedux, resumeText, workPlaceText) => {\n    return dispatch => {\n        dispatch(submitToServerStart());\n        const userData = {\n            gender: genderInRedux, \n            age: ageInRedux,\n            adj: adjInRedux, \n            job: jobInRedux, \n            location: locationInRedux, \n            longitude: longitudeInRedux,\n            latitude: latitudeInRedux,\n            displayName: displayNameInRedux, \n            profileImgSrc: profileImgSrcInRedux, \n            introText: introTextInRedux, \n            interestArr: interestArrInRedux, \n            phoneNumber: phoneNumberInRedux,\n            isPublic: isPublicInRedux,\n            isGraduate: isGraduateInRedux,\n            resume: resumeText,\n            workPlace: workPlaceText,\n            password: passwordInRedux,\n            email: emailInRedux,\n            articleImgSrc: articleImgSrcInRedux, \n            articleText: articleTextInRedux, \n            articleTag: articleTagInRedux,\n        };\n        Axios.post('/pre/user', userData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess)\n                    dispatch(submitToServerSuccess(resumeText, workPlaceText));\n                else {\n                    dispatch(submitToServerFail());\n                    dispatch(submitToServerInit());\n                    alert(res.data.message);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(submitToServerFail());\n                dispatch(submitToServerInit());\n                alert('일시적인 오류가 발생했습니다. 잠시후 다시 시도해주세요.');\n            })\n    }\n}\n\n\nexport const updateProfileImg = (updatedProfileImg) => {\n    return {\n        type: actionTypes.UPDATE_PROFILE_IMG,\n        updatedProfileImg,\n    }\n}\n\nexport const updateProfileImgToServer = (updatedProfileImg) => {\n    return dispatch => {\n        dispatch(updateProfileImg(updatedProfileImg));\n        // 서버에 보내기\n    }\n}\n","import * as actionTypes from './actionTypes';\nimport { addProfileImgSrc, addIsPublic, addIsGraduate, addDidsplayName, addAge, addGender, addJob, addAdj, addLocation, addResume, addWorkPlace, addInterest, addUniv, addIntroText, }  from '../actions/User';\nimport { Axios } from '../../axios-instance';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    }\n}\n\nexport const authSuccess = (email) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        email: email,\n    }\n}\n\nexport const authFail = () => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n    }\n}\n\nexport const errorInit = () => {\n    return {\n        type: actionTypes.ERROR_INIT\n    }\n}\n// Auth page, 이메일 보내기\nexport const auth = (email) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email\n        };\n        Axios.post('/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess)\n                    dispatch(authSuccess(email));\n                else {\n                    const errCode = res.data.code;\n                    dispatch(authFail(errCode));\n                    dispatch(errorInit());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                const errorMsg = err.data.message;\n                alert(errorMsg);\n                dispatch(authFail(err));\n                dispatch(errorInit());\n            })\n    }\n}\n\n// Auth page, Confirm 하기\nexport const authConfirmStart = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_START,\n    }\n}\nexport const authConfirmFail = (errCode) => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_FAIL,\n        errCode,\n    }\n}\nexport const authConfirmSuccess = (univKor) => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_SUCCESS,\n        univ: univKor,\n    }\n}\nexport const authConfirmInit = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_INIT,\n    }\n}\n\nexport const authConfirm = (email, code, univKor) => {\n    console.log(univKor);\n    return dispatch => {\n        dispatch(authConfirmStart());\n        const authData = {\n            email,\n            code, \n        };\n        Axios.post('/check/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(authConfirmSuccess(univKor));\n                    dispatch(authConfirmInit());\n                }else {\n                    const errCode = res.data.code;\n                    console.log(errCode);\n                    dispatch(authConfirmFail(errCode));\n                    dispatch(authConfirmInit());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(authConfirmFail(err.code));\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n            })\n    }\n}\n\n// 닉네임/비번찾기 페이지.\nexport const findAuthStart = () => {\n    return {\n        type: actionTypes.FIND_AUTH_START,\n    }\n}\nexport const findAuthSuccess = () => {\n    return {\n        type: actionTypes.FIND_AUTH_SUCCESS,\n    }\n}\nexport const findAuthFail = (errCode) => {\n    return {\n        type: actionTypes.FIND_AUTH_FAIL,\n        errCode,\n    }\n}\nexport const findAuthInit = () => {\n    return {\n        type: actionTypes.FIND_AUTH_INIT,\n    }\n}\nexport const findAuth = (email) => {\n    return dispatch => {\n        dispatch(findAuthStart());\n        const authData = {\n            email,\n        };\n        console.log(authData);\n        Axios.post('/find/info', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(findAuthSuccess());\n                }else {\n                    const errCode = res.data.code;\n                    console.log(errCode);\n                    dispatch(findAuthFail(errCode));\n                    dispatch(findAuthInit());\n                    if(errCode == 457) {\n                        alert(\"가입되지 않은 이메일입니다.\")\n                    }else if(errCode === 451) {\n                        alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 잠시 후에 다시 시도해주세요');\n                    }\n                }\n            })\n            .catch(err => {\n                const errCode = err.data.code;\n                dispatch(findAuthFail(errCode));\n                dispatch(findAuthInit());\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 잠시 후에 다시 시도해주세요');\n            })\n    }\n}\n\n// Start 페이지. 첫 회원가입 \nexport const joinStart = () => {\n    return {\n        type: actionTypes.JOIN_START,\n    }\n}\nexport const joinSuccess = (displayName, pwd, phoneNumber) => {\n    return {\n        type: actionTypes.JOIN_SUCCESS,\n        displayName,\n        pwd,\n        phoneNumber,\n    }\n}\nexport const joinFail = (errCode) => {\n    return {\n        type: actionTypes.JOIN_FAIL,\n        errCode,\n    }\n}\nexport const joinInit = () => {\n    return {\n        type: actionTypes.JOIN_INIT,\n    }\n}\nexport const joinSubmit = (displayName, wpd, phoneNumber) => {\n    return dispatch => {\n        dispatch(joinStart());\n        const authData = {\n            displayName,\n        };\n        console.log(authData);\n        Axios.post('/check/name', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(joinSuccess(displayName, wpd, phoneNumber));\n                }\n                else {\n                    const errCode = res.data.data;\n                    console.log(errCode);\n                    dispatch(joinFail(errCode));\n                    dispatch(joinInit());\n                }\n            })\n            .catch(err => {\n                const errCode = err;\n                dispatch(joinFail(errCode));\n                dispatch(joinInit());\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n            })\n    }\n}\n\n// Login 페이지, submit 하기\nexport const loginStart = () => {\n    return {\n        type: actionTypes.LOGIN_START,\n    }\n}\nexport const loginFail = (error) => {\n    return {\n        type: actionTypes.LOGIN_FAIL,\n        error,\n    }\n}\nexport const loginSuccess = (displayName, token) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        displayName,\n        token,\n    }\n}\nexport const loginInit = () => {\n    return {\n        type: actionTypes.LOGIN_INIT,\n    }\n}\nexport const loginSubmit = (displayName, password) => {\n    return dispatch => {\n        dispatch(loginStart());\n        const authData = {\n            displayName,\n            password,\n        };\n        Axios.post('/login', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    const token = res.data.data.token;\n                    dispatch(loginSuccess(displayName, token));\n                    localStorage.setItem('tk', token);\n                    dispatch(getUser(token));\n                }else {\n                    const errCode = res.data.code;\n                    console.log(errCode);\n                    dispatch(loginFail(errCode));\n                    dispatch(loginInit());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(loginFail(err));\n                dispatch(loginInit());\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n            })\n    }\n}\n\n// (** User 스토어의 액션들) \n// /my-profile 페이지. 토큰받아서 GET /user/profile \nexport const getUserStart = () => {\n    return {\n        type: actionTypes.GET_USER_START,\n    }\n}\nexport const getUserSuccess = (profileImgSrc, adj, job, displayNameInUser, gender, university, isGraduate, isPublic, location, age, resume, workPlace, introText, hashtagCount ) => {\n    return dispatch => {\n        console.log(profileImgSrc, adj, job, displayNameInUser, gender, university, isGraduate, isPublic, location, age, resume, workPlace, introText, hashtagCount);\n        dispatch(addProfileImgSrc(profileImgSrc));\n        dispatch(addIsGraduate(isGraduate));\n        dispatch(addIsPublic(isPublic));\n        dispatch(addAdj(adj));\n        dispatch(addJob(job));\n        dispatch(addGender(gender));\n        dispatch(addDidsplayName(displayNameInUser));\n        dispatch(addUniv(university));\n        dispatch(addLocation(location));\n        dispatch(addAge(age));\n        dispatch(addResume(resume));\n        dispatch(addWorkPlace(workPlace));\n        dispatch(addIntroText(introText));\n        dispatch(addInterest(hashtagCount));\n        dispatch({type: actionTypes.GET_USER_SUCCESS});\n    }\n}\nexport const getUserFail = () => {\n    return {\n        type: actionTypes.GET_USER_FAIL,\n    }\n}\nexport const getUser = (token) => {\n    return dispatch => {\n        dispatch(getUserStart());\n            Axios.get('/user/profile', {\n                headers: {\n                    'access-token': `${token}`\n                }\n            })\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    const { profileImgSrc, adj, job, displayName, gender, university, isGraduate, isPublic, location, age, resume, workPlace,  introText, hashtagCount } = res.data.data;\n                    dispatch(getUserSuccess(profileImgSrc, adj, job, displayName, gender, university, isGraduate, isPublic, location, age, resume, workPlace, introText, hashtagCount));\n                }else {\n                    dispatch(getUserFail());\n                    alert(\"죄송합니다 서버에 일시적인 오류가 발생했습니다. 잠시 후 다시 로그인해주세요.\");\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                alert(\"죄송합니다 서버에 일시적인 오류가 발생했습니다. 잠시 후 다시 로그인해주세요.\");\n            })\n    }\n}\n\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nrequire(\"./inject\");\nvar Spinner = function (_a) {\n    var _b = _a.visible, visible = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? '#333333' : _c, _d = _a.stroke, stroke = _d === void 0 ? 5 : _d, _e = _a.radius, radius = _e === void 0 ? 40 : _e, rest = __rest(_a, [\"visible\", \"color\", \"stroke\", \"radius\"]);\n    if (!visible) {\n        return null;\n    }\n    return (React.createElement(\"div\", __assign({}, rest, { className: \"react-spinner-material\", style: {\n            width: radius,\n            height: radius,\n            borderColor: color,\n            borderWidth: stroke\n        } })));\n};\nexports.default = Spinner;\n"],"sourceRoot":""}