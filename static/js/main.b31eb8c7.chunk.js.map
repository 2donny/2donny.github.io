{"version":3,"sources":["images/yk.png","components/UI/backdrop.js","components/UI/modal.js","pages/Intro.js","components/card.js","containers/community.js","components/footer_nav.js","components/banner.js","components/layout.js","model/person.js","pages/Person.js","pages/CreateArticle.js","pages/Profile.js","pages/Article.js","pages/People-circle.js","pages/Globe.js","pages/Love-me.js","pages/MyProfile.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Backdrop","show","clicked","style","backgroundColor","className","onClick","Modal","children","visibility","borderRadius","position","zIndex","width","textAlign","border","boxShadow","padding","left","top","boxSizing","transition","transform","opacity","memoizedModal","React","memo","Intro","useState","isclicked","setClicked","useEffect","Aos","init","Fragment","src","alt","height","fontSize","color","to","console","log","backgroundImage","bgImg","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","data-aos","data-aos-duration","Card","id","profileImg","description","displayName","contents","heartCnt","tags","isHeartClicked","setHeartClicked","heartStateCnt","setHeartCnt","map","keyword","tag","Community","users","MediaQueryArr","Query","useMediaQuery","minDeviceHeight","i","person","key","Footer_nav","borderTop","window","location","pathname","Banner","Layout","headerNone","minWidth","maxWidth","maxHeight","personCommunity","univ","gender","age","interests","UniversityOptions","value","label","isFixed","UnivgroupedOptions","options","GenderOptions","GendergroupedOptions","AgeOptions","AgegroupedOptions","InterestOptions","InterestgroupedOptions","Person","isFiltering","setFiltering","FilteredUser","setFilteringUser","isUnivClicked","setUnivClicked","isGenderClicked","setGenderClicked","isAgeClicked","setAgeClicked","isInterestClicked","setInterestClicked","Univ","setUniv","Gender","setGender","Age","setAge","Interest","setInterest","UnivHandler","useCallback","selectedOption","GenderHandler","AgeHandler","InterestHandler","UnivFilteringHandler","filteredArr","filter","user","GenderFilteringHandler","AgeFilteringHandler","InterestFilteringHandler","find","interest","defaultValue","onChange","join","red","green","blue","alpha","segmentWidth","CreateArticle","marginRight","placeholder","alert","Profile","match","params","__User","Number","Article","cnt","__Article","People_circle","Globe","Love_me","MyProfile","App","fallback","path","component","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b31eb8c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/yk.252d2680.png\";","import React from 'react';\n\nfunction Backdrop({ show, clicked }) {\n    return (\n        show ? ( \n            <div \n                style={{backgroundColor: 'rgba(0, 0, 0, .5'}}\n                className=\"w-full h-full z-30 fixed left-0 top-0\" \n                onClick={clicked}\n            /> \n        )\n        : null\n    )\n}\n\nexport default Backdrop;","import React from 'react';\nimport Backdrop from './backdrop';\nlet memoizedModal = null;\n\nconst Modal = ({ children, show, clicked }) => {\n    return (\n        <>\n            <Backdrop show={show} clicked={clicked}/>\n            <div \n                style={{\n                    visibility: show ? 'visible' :'hidden',\n                    borderRadius: '10px',\n                    position: \"fixed\",\n                    zIndex: 500,\n                    width: '440px',\n                    textAlign: 'center',\n                    border: '1px solid #ccc',\n                    boxShadow: '1px 1px 1px black',\n                    backgroundColor: 'white',\n                    padding: '36px',\n                    left: 'calc(50% - 220px)',\n                    top: '20%',\n                    boxSizing: 'border-box',\n                    transition: 'all .3s ease-out',\n                    transform: show ? 'scale(1)' : 'scale(0.5)',\n                    opacity: show ? '1' : '0'\n                }}\n                >\n                {children}\n            </div>\n        </>\n    )\n}\n\nexport default memoizedModal = React.memo(Modal);\n","import React, {useState, useEffect} from 'react';\nimport bgImg from '../images/yk.png';\nimport Modal from '../components/UI/modal';\nimport { Link } from 'react-router-dom';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\n\nconst Intro = () => {\n  const [isclicked, setClicked] = useState(false);\n\n  useEffect(() => {\n    Aos.init();\n  }, []);\n  return (\n    <React.Fragment>\n      {/* Header */}\n      <header className=\"absolute w-full flex flex-row justify-between items-center px-10 py-7\">\n          <h1 className=\"text-3xl font-bold text-white\">연고링</h1>\n          <nav>\n              <ul className=\"flex flex-row items-center \">\n                  <li className=\"text-xl font-bold mx-5 text-white\">사용법</li>\n                  <li className=\"text-xl font-bold mx-3 text-white\">\n                    <button onClick={() => setClicked(true)} className=\"font-sans text-white px-5 py-2 rounded-xl bg-transparent-600 font-bold border-2 hover:bg-white hover:text-black focus:outline-none\">로그인</button>\n                  </li>\n              </ul>\n          </nav>\n      </header>\n\n      {/* main */}\n      <main>\n        <section className=\"h-screen\">\n\n          {/* 모달 */}\n          <Modal show={isclicked} clicked={() => setClicked(false)}>\n            <div className=\"my-5 text-2xl font-bold\">\n              <img \n                src=\"https://2donny.github.io/ykring/yk-logo.png\"\n                alt=\"yk-logo\"\n                width={50}\n                height={50}\n                className=\"mb-5 rounded-full text-center mx-auto\"\n              />\n              <i>계정 만들기\u001e</i>\n            </div>\n            <div>\n              <span style={{ fontSize: '14px', color: '#5c5c5c'}}>'로그인'을(를) 함으로써 연고링 이용약관에 동의합니다.<br /> 연고링은 학교 인증 기반 웹 어플리케이션으로서 인증하기 위해서는 학교 메일을 통하여 인증해야합니다.</span>\n            </div>\n            <div>\n              <Link to=\"/person\">\n                <button onClick={() => console.log('clicked')} className=\"font-sans w-full border-2 rounded-3xl px-5 py-3 mt-10 hover:text-white hover:bg-black focus:outline-none\">학교 이메일로 인증하기</button>\n              </Link>\n            </div>\n          </Modal>\n\n          {/* 메인 글귀 */}\n          <article \n            style={{\n              backgroundImage: `url(${bgImg})`,\n              width: \"100%\",\n              height: \"100%\",\n              backgroundSize: \"cover\",\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',  \n              backgroundAttachment: 'fixed',\n            }}\n          >\n            <div className=\"flex flex-col items-center w-full h-full\" style={{backgroundColor: 'rgba(0, 0, 0, 0.4)'}}>\n              <div data-aos=\"fade-up\" data-aos-duration=\"2500\" className=\"text-center\">\n                <h1 \n                  className=\"w-full pt-56 text-5xl md:text-7xl lg:text-7xl font-bold text-white text-center leading-normal md:leading-normal lg:leading-normal\"\n                >\n                  가슴뛰는 대학생활 <br /> 연고링과 함께\n                </h1>\n                <p className=\"text-white text-xs\">서울대 고려대 연세대 성균관대 서강대 한양대 대상 <br/> 시범 서비스 진행</p>\n                <button \n                  onClick={() => setClicked(true)} \n                  className=\"font-sans text-white w-48 h-16 mt-10 rounded-3xl bg-transparent-600 border-2 hover:bg-white hover:text-black focus:outline-none\"\n                > \n                  계정 만들기\n                </button>\n              </div>\n            </div>\n          </article>\n\n          {/* Banner */}\n          {/* <div className=\"flex flex-row justify-center items-center absolute bottom-0 w-full h-32 bg-gray-400\">\n            <p className=\"text-white text-xl font-bold\"> 인스타에 홍보하고 기프티콘 받기</p>\n          </div> */}\n\n        </section>\n      </main>\n\n      {/* footer */}\n      {/* <footer>\n        <div className=\"w-full h-56\">\n          <h1>동기부여</h1>\n          \n        </div>\n      </footer> */}\n    </React.Fragment>\n  );\n}\n\nexport default Intro;\n","import React, { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom';\n\nconst Card = ({ id, profileImg, description, displayName, contents, heartCnt, tags }) => {\n    const [isHeartClicked, setHeartClicked] = useState(null);\n    const [heartStateCnt, setHeartCnt] = useState(heartCnt);\n\n    useEffect(() => {\n        if(isHeartClicked === true) \n            setHeartCnt(heartStateCnt + 1);\n        else if(isHeartClicked === false) \n            setHeartCnt(heartStateCnt - 1);\n        else \n            setHeartCnt(heartCnt)\n    }, [isHeartClicked]);\n\n    return (\n        <article className=\"my-2 mx-3 relative\">\n                {/* Profle */}\n                <div className=\"flex flex-row\">\n                    <Link to={`/profile/${id}`}>\n                        <img \n                            src={profileImg}\n                            alt={displayName}\n                            width={50}\n                            height={50}\n                            className=\"rounded-full object-cover m-0\"\n                        />\n                    </Link>\n                    <div className=\"mx-5\">\n                        {description.map((keyword, id) => (\n                            <span key={id} className=\"text-xs\"> {keyword} / </span>\n                        ))}\n                        <h1 className=\"text-lg font-bold\">{displayName}</h1>\n                    </div>\n                    <div className=\"absolute right-0\">\n                        {/* Heart */}\n                        <button onClick={() => setHeartClicked(!isHeartClicked)} className=\"px-2 py-2 focus:outline-none\">\n                            {isHeartClicked ? (\n                                <img \n                                    src=\"https://2donny.github.io/ykring//heart-red.png\"\n                                    height={18}\n                                    width={20}\n                                    alt=\"heart\"\n                                />\n                            ) : (\n                                <img \n                                    src=\"https://2donny.github.io/ykring/NavImage/heart-outline.svg\"\n                                    height={20}\n                                    width={20}\n                                    alt=\"heart-outline\"\n                                />\n                            )}\n                        </button>\n                        {/* Heart count */}\n                        <p className=\"text-center\">\n                            {heartCnt}\n                        </p>\n                    </div>\n\n                </div>\n                \n                {/* 글 내용 */}\n                <Link to={`/article/${id}`}>\n                    <h1 className=\" text-xs my-3\">{contents}</h1>\n                </Link>\n\n                {/* 태그 */}\n                <div className=\"border-b-2\">\n                    {tags.map((tag, id) => (\n                        <p key={id} className=\"px-3 inline-block mx-1 mb-3 text-xs text-2xs border-2 rounded-2xl text-gray-400\">{tag}</p>\n                    ))}\n                </div>\n\n        </article>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../components/card';\nimport { useMediaQuery } from 'react-responsive';\n\nconst Community = ({ users }) => {\n    const isIPhoneX = useMediaQuery({\n        minDeviceHeight: 811     \n    });\n    const isPC = useMediaQuery({\n        minDeviceHeight: 795\n    });\n    const isIPhon_6_7_8_Plus = useMediaQuery({\n        minDeviceHeight: 735\n    });\n    const isIPhon_6_7_8 = useMediaQuery({\n        minDeviceHeight: 666\n    });\n    const remainder = useMediaQuery({\n        minDeviceHeight: 0\n    });\n\n    const MediaQueryArr = [\n        {\n            Query: isIPhoneX, // 811px\n            height: '500px'\n        }, \n        {\n            Query: isPC,   // 795px\n            height: '450px'\n        }, \n        {\n            Query: isIPhon_6_7_8_Plus, // 735px\n            height: '420px'\n        }, \n        {\n            Query: isIPhon_6_7_8, // 666px\n            height: '350px'\n        },\n        {\n            Query: remainder, // 0px\n            height: '300px'\n        }\n    ];\n\n    // 뷰포트 크기에 따라 Scroll pannel의 height 계산\n    let height = 0;\n    for(let i = 0 ; i < 5; i++) {\n        if(MediaQueryArr[i].Query === true){\n            height = MediaQueryArr[i].height;\n            break;\n        }\n    }\n    return (\n        <>\n            <section \n                style={{height: height}}\n                className=\"flex flex-col overflow-scroll relative\"\n            >\n                {users.map((person, key) => (\n                    <Card \n                        key={key}\n                        id={person.id}\n                        profileImg={person.profileImg} \n                        description={person.description} \n                        displayName={person.displayName} \n                        heartCnt={person.heartCnt}\n                        contents={person.contents}\n                        tags={person.tags}\n                    />\n                ))}                       \n            </section>\n        </>\n    )\n}\n\nexport default Community;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Footer_nav = () => {\n    return (\n        <footer\n            style={{ borderTop: '1px solid #ccc' }}\n            className=\"flex flex-row w-full justify-evenly absolute bottom-0 py-3 bg-gray-100\"\n        >\n            <NavLink to=\"/person\">\n                <img \n                    src={(window.location.pathname == \"/person\") ? \"https://2donny.github.io/ykring/NavImage/person-add.svg\" : \"https://2donny.github.io/ykring/NavImage/person-add-outline.svg\"}\n                    width={35}\n                    height={35}\n                />\n            </NavLink>\n            <NavLink to=\"/people-circle\">\n                <img \n                    src={(window.location.pathname == \"/people-circle\") ? \"https://2donny.github.io/ykring/NavImage/people-circle.svg\" : \"https://2donny.github.io/ykring/NavImage/people-circle-outline.svg\"}\n                    width={35}\n                    height={35}\n                />\n            </NavLink>\n            <NavLink to=\"/globe\">\n                <img \n                    src={(window.location.pathname == \"/globe\") ? \"https://2donny.github.io/ykring/NavImage/globe.svg\" : \"https://2donny.github.io/ykring/NavImage/globe-outline.svg\"}\n                    width={35}\n                    height={35}\n                />\n            </NavLink>\n            <NavLink to=\"love-me\">\n                <img \n                    src={(window.location.pathname == \"/love-me\") ? \"https://2donny.github.io/ykring/NavImage/heart.svg\" : \"https://2donny.github.io/ykring/NavImage/heart-outline.svg\"}\n                    width={35}\n                    height={35}\n                />\n            </NavLink>\n            <NavLink to=\"/my-profile\">\n                <img \n                    src={(window.location.pathname == \"/my-profile\") ? \"https://2donny.github.io/ykring/NavImage/profile.svg\" : \"https://2donny.github.io/ykring/NavImage/profile-outline.svg\"}\n                    width={35}\n                    height={35}\n                />\n            </NavLink>\n        </footer>\n    )\n}\n\nexport default Footer_nav;","import React from 'react';\n\nconst Banner = () => {\n    return (\n        <section className=\"px-3 rounded-3xl\">\n            <div className=\"flex flex-row items-center justify-evenly w-full h-16 bg-gray-100\">\n                <div>\n                    <h1 className=\"text-sm font-bold\">[연고링 사용법] 알려드려요.</h1>\n                    <p className=\"text-xs text-gray-400\">알아보기 START!</p>\n                </div>\n                <img \n                    src=\"https://2donny.github.io/ykring/logo192.png\"\n                    width={50}\n                    height={50}\n                />\n                </div>\n        </section>\n    )\n}\n\nexport default Banner;","import React from 'react'\nimport Footer_nav from './footer_nav';\nimport Banner from './banner';\nimport { Link } from 'react-router-dom';\n\nconst Layout = ({ children, headerNone }) => {\n    return (\n        <div \n            style={{ minWidth: \"320px\", maxWidth: \"414px\", maxHeight: '100vh', border: \"1px solid gray\"}}\n            className=\"flex flex-col mx-auto h-screen relative\"\n        >\n            {/* Navigation */}\n            {!headerNone ? (\n                <>\n                    <nav className=\"flex flex-row justify-between px-3 py-5\">\n                        <Link to=\"/person\">\n                            <img\n                                style={{width: 50, height: 50}}\n                                src=\"https://2donny.github.io/ykring/yk-logo.png\"\n                                className=\" rounded-2xl\"\n                            />\n                        </Link>\n                        <div className=\"flex flex-row items-center\">\n                            <Link to=\"/\">\n                            <h1 className=\"mx-2 font-bold hover:text-blue-400\">돌아가기</h1>\n                            </Link>\n                            <h1 className=\"mx-2 cursor-pointer font-bold hover:text-red-600 hover:font-bold\">신고하기</h1>\n                        </div>\n                    </nav>\n                    {/* Banner */}\n                    <Banner />\n                </>\n            ) : (\n                null\n            )}\n            \n            {/*  main custom  */}\n            <main className=\"h-screen\">\n                {children}\n            </main>\n\n            {/* footer */}\n            <Footer_nav />\n        </div>\n    )\n}\n\nexport default Layout;","export const personCommunity = [\n    {\n        id: 0,\n        profileImg: \"https://2donny.github.io/ykring/UserImage/User1.png\",\n        description: [\"고려대학교\", \"ENTP\", \"23살\", \"진지충\"],\n        displayName: \"정이든\",\n        heartCnt: 32,\n        contents: \"요즘 취준하느라 너무 힘들어요! 고민이야기 같이 하실 분 구해요 ✨ \",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"개발\"],\n        univ: \"고려대학교\",\n        gender: \"남자\",\n        age: 23,\n        interests: [\"헬스\", \"넷플릭스\", \"개발\"]\n    },\n    {\n        id: 1,\n        profileImg: \"https://2donny.github.io/ykring//UserImage/User2.png\",\n        description: [\"연세대학교\", \"ISFP\", \"26살\", \"수다쟁이\"],\n        displayName: \"양지원\",\n        heartCnt: 2,\n        contents: \"제일 좋아하는 건 마라탕이고 인천살아용 친구사귀고 싶어요~! 연락주세요 ㅎㅎ!\",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"예술\"],\n        univ: \"연세대학교\",\n        gender: \"여자\",\n        age: 26,\n        interests: [\"독서\", \"넷플릭스\"]\n    },\n    {\n        id: 2,\n        profileImg: \"https://2donny.github.io/ykring//UserImage/User3.png\",\n        description: [\"서강대학교\", \"ENTP\", \"20살\", \"신입생\"],\n        displayName: \"김현우\",\n        heartCnt: 3,\n        contents: \"코로나라 밖에 못나가는.... 불쌍한 신입생과 영상통화 하실 분.... ㅎㅎ\",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"예술\"],\n        univ: \"서강대학교\",\n        gender: \"남자\",\n        age: 20,\n        interests: [\"헬스\", \"넷플릭스\", \"맛집\"]\n    },\n    {\n        id: 3,\n        profileImg: \"https://2donny.github.io/ykring//UserImage/User4.png\",\n        description: [\"한양대학교\", \"ENTP\", \"22살\", \"재수생\"],\n        displayName: \"김소연\",\n        heartCnt: 15,\n        contents: \"피아노잘침. 인공지능 관심 있어요! / 대화잘 통하는 분 원해요. 개발스터디 같이하실분\",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"예술\"],\n        univ: \"한양대학교\",\n        gender: \"여자\",\n        age: 22,\n        interests: [\"맛집\", \"독서\", \"게임\"]\n    },\n];\n\n// Select Options data\n\n// 대학교\nexport const UniversityOptions = [\n    { value: 'seoul', label: '서울대학교', color: '#00B8D9', isFixed: true },\n    { value: 'korea', label: '고려대학교', color: '#0052CC'},\n    { value: 'yonsei', label: '연세대학교', color: '#5243AA' },\n    { value: 'hanyang', label: '한양대학교', color: '#FF5630', isFixed: true },\n    { value: 'seokang', label: '서강대학교', color: '#FF5630', isFixed: true },\n    { value: 'sungkyunkwan', label: '성균관대학교', color: '#FF5630', isFixed: true },\n]\n\nexport const UnivgroupedOptions = [\n    {\n      label: '대학',\n      options: UniversityOptions,\n    },\n];\n\n// 성별\nexport const GenderOptions = [\n    { value: 'man', label: '남자', color: '#00B8D9', isFixed: true },\n    { value: 'woman', label: '여자', color: '#0052CC'},\n]\n\nexport const GendergroupedOptions = [\n    {\n      label: '성별',\n      options: GenderOptions,\n    },\n];\n\n// 나이\nexport const AgeOptions = [\n    // value => 최대 나이\n    { value: [20, 22], label: '20세 ~ 22세', color: '#00B8D9', isFixed: true },\n    { value: [23, 26], label: '23세 ~ 26세', color: '#0052CC'},\n    { value: [27, 29], label: '27세 ~ 29세', color: '#0052CC'},\n    { value: [30, 40], label: '30세 이상', color: '#0052CC'},\n]\n\nexport const AgegroupedOptions = [\n    {\n      label: '나이',\n      options: AgeOptions,\n    },\n];\n\n// 취향\nexport const InterestOptions = [\n    { value: '맛집', label: '🍣 맛집 탐방하기', color: '#0052CC'},\n    { value: '넷플릭스', label: '🍿 넷플릭스 보기', color: '#0052CC'},\n    { value: '게임', label: '🎮 게임', color: '#00B8D9', isFixed: true },\n    { value: '독서', label: '📚 독서', color: '#00B8D9', isFixed: true },\n    { value: '헬스', label: '💪🏻 헬스', color: '#0052CC'},\n    { value: '개발', label:'💻 개발', color: '#00B8D9', isFixed: true },\n]\n\nexport const InterestgroupedOptions = [\n    {\n      label: '관심사',\n      options: InterestOptions,\n    },\n];","import React, { useState, useCallback, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { StyleRoot } from 'radium';\nimport Select from 'react-select';\nimport LoadingIndicator from 'react-loading-indicator';\nimport Community from '../containers/community';\nimport Layout from '../components/layout';\nimport Modal from '../components/UI/modal';\nimport { \n    UniversityOptions, \n    UnivgroupedOptions,\n    GenderOptions,\n    GendergroupedOptions,\n    AgeOptions,\n    AgegroupedOptions,\n    InterestOptions,\n    InterestgroupedOptions,\n} from '../model/person';\nimport { personCommunity } from '../model/person';\n\nconst Person = () => {\n    // filtering state => 필터링 시작 여부\n    const [isFiltering, setFiltering] = useState(false);\n    const [FilteredUser, setFilteringUser] = useState(personCommunity);\n    // button click state => 버튼 클릭 여부\n    const [isUnivClicked, setUnivClicked] = useState(false);\n    const [isGenderClicked, setGenderClicked] = useState(false);\n    const [isAgeClicked, setAgeClicked] = useState(false);\n    const [isInterestClicked, setInterestClicked] = useState(false);\n    // filtered state => Select 후 상태\n    const [Univ, setUniv] = useState(\"고려대학교\");\n    const [Gender, setGender] = useState(\"여자\");\n    const [Age, setAge] = useState([23, 26]);\n    const [Interest, setInterest] = useState(\"맛집\");\n\n    // filtering state Handler => Select를 할 때 발생\n    const UnivHandler = useCallback((selectedOption) => {\n        setUniv(selectedOption.label);\n    }, []);\n    const GenderHandler = useCallback((selectedOption) => {\n        setGender(selectedOption.label);\n    }, []);\n    const AgeHandler = useCallback((selectedOption) => {\n        setAge(selectedOption.value);\n    }, []);\n    const InterestHandler = useCallback((selectedOption) => {\n        setInterest(selectedOption.value);\n    }, []);\n\n    // Filtering User Handler => 확인 버튼. 클릭 시 발생.\n    const UnivFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr = personCommunity.filter(user => {\n            return user.univ === Univ\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setUnivClicked(false);\n    }, [Univ]);\n\n    const GenderFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr = personCommunity.filter(user => {\n            return user.gender === Gender\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setGenderClicked(false);\n    }, [Gender]);\n\n    const AgeFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr = personCommunity.filter(user => {\n            return (user.age >= Age[0]) && (user.age <= Age[1])\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setAgeClicked(false);\n    }, [Age]);\n\n    const InterestFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr =  personCommunity.filter(user => {\n            return user.interests.find(interest => interest === Interest)\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setInterestClicked(false);\n    }, [Interest]);\n    \n\n    return (\n        <div className=\"max-h-screen overflow-hidden\">\n            <Layout>\n\n                {/* main */}\n                <section className=\"px-3 my-2\">\n\n                    {/* Button Nav */}\n                    <div className=\"my-3 flex-nowrap overflow-hidden\">\n                        <button id=\"univ\" onClick={() => setUnivClicked(true)} className=\"px-1 py-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                            학교 <span className=\"text-blue-500\">{Univ}</span>\n                        </button>\n                        <Modal show={isUnivClicked} clicked={() => setUnivClicked(false)}>\n                            <div>\n                                <h1 className=\"font-bold mb-5\">대학교</h1>\n                                <Select \n                                    defaultValue={UniversityOptions[1]}\n                                    options={UnivgroupedOptions}\n                                    onChange={UnivHandler}\n                                />\n                                <button \n                                    onClick={() => UnivFilteringHandler()} \n                                    className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                >\n                                    확인\n                                </button>\n                            </div>\n                        </Modal>\n\n                        <button id=\"gender\" onClick={() => setGenderClicked(true)} className=\"px-1 py-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                            성별 <span className=\"text-blue-500\">{Gender}</span>\n                        </button>\n                        <Modal show={isGenderClicked} clicked={() => setGenderClicked(false)}>\n                            <div>\n                                <h1 className=\"font-bold mb-5\">성별</h1>\n                                <Select \n                                    defaultValue={GenderOptions[1]}\n                                    options={GendergroupedOptions}\n                                    onChange={GenderHandler}\n                                />\n                                <button \n                                    onClick={() => GenderFilteringHandler()} \n                                    className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                >\n                                    확인\n                                </button>\n                            </div>\n                        </Modal>\n\n                        <button id=\"age\" onClick={() => setAgeClicked(true)} className=\"px-1 py-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                            나이 <span className=\"text-blue-400\">{Age.join('~')}살</span>\n                        </button>\n                        <Modal show={isAgeClicked} clicked={() => setAgeClicked(false)}>\n                            <div>\n                                <h1 className=\"font-bold mb-5\">나이</h1>\n                                <Select \n                                    defaultValue={AgeOptions[1]}\n                                    options={AgegroupedOptions}\n                                    onChange={AgeHandler}\n                                />\n                                <button \n                                    onClick={() => AgeFilteringHandler()} \n                                    className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                >\n                                    확인\n                                </button>\n                            </div>\n                        </Modal>\n\n                        <button id=\"interest\" onClick={() => setInterestClicked(true)} className=\"px-1 py-2 mt-2 mr-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                            관심사 <span className=\"text-blue-400\">{Interest}</span>\n                        </button>\n                        <Modal show={isInterestClicked} clicked={() => setInterestClicked(false)}>\n                            <div>\n                                <h1 className=\"font-bold mb-5\">{Interest}</h1>\n                                <Select \n                                    defaultValue={InterestOptions[0]}\n                                    options={InterestgroupedOptions}\n                                    onChange={InterestHandler}\n                                />\n                                <button \n                                    onClick={() => InterestFilteringHandler()} \n                                    className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                >\n                                    확인\n                                </button>\n                            </div>\n                        </Modal>\n                        <img \n                            onClick={() => setFilteringUser(personCommunity)}\n                            src=\"https://2donny.github.io/ykring/refresh-outline.svg\"\n                            width={20}\n                            height={20}\n                            className=\"inline-block cursor-pointer \"\n                        />\n                    </div>\n\n                    {/* 커뮤니티 컨테이너 */}\n                    {isFiltering ? (\n                        <StyleRoot\n                            className=\"flex flex-row justify-center mt-5\"\n                        >\n                            <LoadingIndicator \n                                color={{red: 0, green: 0, blue: 200, alpha: .5}}\n                                segmentWidth={5}\n                            />\n                        </StyleRoot>    \n                    ) : (\n                        <Community users={FilteredUser} />\n                    )}\n\n                    {/* 작성 버튼 */}\n                    <Link to=\"/create-article\">\n                        <img \n                            src=\"https://2donny.github.io/ykring/add-circle.svg\"\n                            alt=\"add-circle\"\n                            width={50}\n                            height={50}\n                            className=\"absolute right-1 bottom-20 mr-3\"\n                        />\n                    </Link>\n                </section>\n                \n            </Layout>\n        </div>\n    )\n}\n\nexport default Person;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer_nav from '../components/footer_nav';\nimport Layout from '../components/layout';\nimport Banner from '../components/banner';\n\nconst CreateArticle = () => {\n    return (\n        <div className=\"w-full\">\n            <Layout headerNone>\n                {/* Navigation */}\n                <nav className=\"flex flex-row items-center px-3 py-5\">\n                    <Link to=\"/person\">\n                        <img\n                            src=\"https://2donny.github.io/ykring/arrow-back-outline.svg\"\n                            className=\" rounded-2xl\"\n                            width={25}\n                            height={25}\n                        />\n                    </Link>\n                    <h1 \n                        style={{marginRight: '25px'}}\n                        className=\"text-md font-bold w-full text-center\"\n                    >\n                        글 작성\n                    </h1>\n                </nav>\n\n                {/* 배너 */}\n                <Banner />\n\n                {/* main */}\n                <section className=\"w-full \">\n                    <textarea \n                        placeholder=\"글을 작성해 보세요. 글을 쓰면 대화신청확률을 높일 수 있습니다. 다른 친구에게 상처가 되는 비방/욕설은 삼가해주세요.\"\n                        style={{height: '250px', border: '1px solid gray'}}\n                        className=\"my-3 px-3 py-5 w-full text-sm placeholder-gray-300\">\n                    </textarea>\n                    <Link to=\"/person\">\n                        <button onClick={() => alert('글이 작성되었습니다!')} className=\" w-full block mx-auto mt-1 border-2 rounded-3xl px-5 py-3 bg-black text-white  focus:outline-none\">작성하기</button>\n                    </Link>\n                </section>\n\n            </Layout>\n        </div>\n    )\n}\n\nexport default CreateArticle;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../components/layout';\nimport { personCommunity } from '../model/person';\n\nconst Profile = ({ match }) => {\n    const id = match.params.id;\n    const __UserArr = personCommunity.filter(user => {\n        return user.id === Number(id)\n    });\n    const __User = __UserArr[0];\n\n    return (\n        <div className=\"w-full\">\n            <Layout headerNone>\n                {/* Navigation */}\n                <nav className=\"flex flex-row px-3 py-5\"> \n                    <Link to=\"/person\">\n                        <img \n                            src=\"https://2donny.github.io/ykring/arrow-back-outline.svg\"\n                            className=\"rounded-2xl\"\n                            width={25}\n                            height={25}\n                        />\n                    </Link>\n                    <h1 \n                        style={{marginRight: '27px'}}\n                        className=\"w-full text-center text-md\"\n                    >\n                        {__User.displayName}님의 프로필\n                    </h1>\n                </nav>\n\n                <div className=\"border-b-2\"></div>\n\n                {/* main */}\n                <section className=\"px-3 my-5 relative\">\n                    <img\n                        id=\"profile\" \n                        src={`${__User.profileImg}`}\n                        alt=\"profile\"\n                        width=\"480px\"\n                        height=\"480px\"\n                        className=\"rounded-3xl mx-auto\"\n                    >\n                    </img>\n                </section>\n                \n                <section>\n                    <Link to=\"/person\">\n                        <button className=\"border-2 rounded-full px-5 py-3 absolute bottom-28 left-3 hover:text-white hover:bg-black focus:outline-none\">다음에</button>\n                    </Link>\n                    <button onClick={() => alert('친구를 신청했습니다!')} className=\"border-2 rounded-full px-5 py-3 absolute bottom-28 right-3 hover:text-white hover:bg-black focus:outline-none\">친구 신청</button>\n                </section>\n            </Layout>\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer_nav from '../components/footer_nav';\nimport Layout from '../components/layout';\nimport { personCommunity } from '../model/person';\nimport Card from '../components/card';\n\nconst Article = ({ match }) => {\n    const cnt = match.params.cnt; // id는 글의 고유 번호\n    const __ArticleArr = personCommunity.filter(user => {\n        return user.id === Number(cnt)\n    });\n    const __Article = __ArticleArr[0];\n    return (\n        <div className=\"w-full\">\n            <Layout headerNone>\n                {/* Navigation */}\n                <nav style={{height: '7%'}} className=\"flex flex-row justify-between px-3\"> \n                    <Link to=\"/person\">\n                        <img \n                            src=\"https://2donny.github.io/ykring/arrow-back-outline.svg\"\n                            className=\"rounded-2xl h-full \"\n                            width={25}\n                            height={25}\n                        />\n                    </Link>\n                    <div className=\"flex flex-row\">\n                        <img \n                            src=\"https://2donny.github.io/ykring/NavImage/heart-outline.svg\"\n                            alt=\"heart\"\n                            width={25}\n                            height={25}\n                            className=\"mx-3\"\n                        />\n                        <img \n                            src=\"https://2donny.github.io/ykring/Article/ellipsis-vertical-outline.svg\"\n                            alt=\"ellipsis\"\n                            width={25}\n                            height={25}\n                            className=\"mx-3\"\n                        />\n                        \n                    </div>\n                </nav>\n                <div className=\"border-b-2\"></div>\n\n                {/* main */}\n                <main style={{height: '93%'}}>\n\n                    {/* Card, Button */}\n                    <section style={{height: '30%', boxSizing: 'border-box'}}>\n                        <Card \n                        key={cnt}\n                        id={__Article.id}\n                        profileImg={__Article.profileImg} \n                        description={__Article.description} \n                        displayName={__Article.displayName} \n                        heartCnt={__Article.heartCnt}\n                        contents={__Article.contents}\n                        tags={__Article.tags} \n                        />\n                        <div style={{height: '10%'}} className=\"flex flex-row mb-2\">\n                            <div className=\"flex flex-row mx-2\">\n                                <img \n                                    src=\"https://2donny.github.io/ykring/Article/heart-circle-outline.svg\"\n                                    alt=\"heart\"\n                                    width={20}\n                                    height={20}\n                                    className=\"mx-2\"\n                                />\n                                <h1 className=\"text-xs\">좋아요</h1>\n                            </div>\n                            <div className=\"flex flex-row mx-2\">\n                                <img \n                                    src=\"https://2donny.github.io/ykring/Article/chatbubble-outline.svg\"\n                                    alt=\"chat\"\n                                    width={15}\n                                    height={15}\n                                    className=\"mx-2\"\n                                />\n                                <h1 className=\"text-xs\">댓글</h1>\n                            </div>\n                        </div>\n                        <section className=\"h-8 bg-gray-100 border-b-2 border-t-2\">\n                            <p className=\"text-xs text-center text-gray-500 leading-6 \">연고링에서 따뜻한 <strong className=\"text-blue-300 inline-block\">소개팅 문화</strong>를 함께 만들어가요 🌟</p>\n                        </section>\n                    </section>\n\n                    {/* Comments section */}\n                    <section>\n\n                    </section>\n                </main>\n            </Layout>\n        </div>\n    )\n}\n\nexport default Article;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer_nav from '../components/footer_nav';\nimport Layout from '../components/layout';\nimport Banner from '../components/banner';\n\nconst People_circle = () => {\n    return (\n        <div className=\"w-full\">\n            <Layout>\n                \n                {/* main */}\n                <section className=\"px-3\">\n\n                </section>\n                \n            </Layout>\n        </div>\n    )\n}\n\nexport default People_circle;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer_nav from '../components/footer_nav';\nimport Layout from '../components/layout';\nimport Banner from '../components/banner';\n\nconst Globe = () => {\n    return (\n        <div className=\"w-full\">\n            <Layout>\n                {/* main */}\n                <section className=\"px-3\">\n\n                </section>\n            </Layout>\n        </div>\n    )\n}\n\nexport default Globe;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer_nav from '../components/footer_nav';\nimport Layout from '../components/layout';\nimport Banner from '../components/banner';\n\nconst Love_me = () => {\n    return (\n        <div className=\"w-full\">\n            <Layout>\n                \n                {/* main */}\n                <section className=\"px-3\">\n\n                </section>\n                \n            </Layout>\n        </div>\n    )\n}\n\nexport default Love_me;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../components/layout';\nimport Banner from '../components/banner';\n\nconst MyProfile = () => {\n    return (\n        <div className=\"w-full\">\n            <Layout>\n\n                {/* Profile Container */}\n                <section style={{height: '30%'}} className=\"px-3 py-3\">\n                    hi\n                </section>\n\n                {/* Album Container */}\n                <section style={{height: '70%'}} className=\"px-3 py-3\">\n                    hello\n                </section>\n                \n                {/* footer */}\n            </Layout>\n        </div>\n    )\n}\n\nexport default MyProfile;","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Intro from './pages/Intro';\n\n// const Person = React.lazy(() => import('./pages/Person'));\n// const People_circle = React.lazy(() => import('./pages/People-circle'));\n// const Globe = React.lazy(() => import('./pages/Globe'));\n// const Love_me = React.lazy(() => import('./pages/Love-me'));\n// const MyProfile = React.lazy(() => import('./pages/MyProfile'));\n// const Profile = React.lazy(() => import('./pages/Profile'));\n// const CreateArticle = React.lazy(() => import('./pages/CreateArticle'));\n// const Article = React.lazy(() => import('./pages/Article'));\nimport Person from './pages/Person';\nimport CreateArticle from './pages/CreateArticle';\nimport Profile from './pages/Profile';\nimport Article from './pages/Article';\nimport People_circle from './pages/People-circle';\nimport Globe from './pages/Globe';\nimport Love_me from './pages/Love-me';\nimport MyProfile from './pages/MyProfile';\n\n\nconst App = () => {\n  return (\n    <div>\n      <Suspense fallback={<p> Loading...</p>}>\n        <Switch>\n            <Route path=\"/person\" component={Person} exact/>\n            <Route path=\"/create-article\" component={CreateArticle}/>\n            <Route path=\"/profile/:id\" component={Profile}/>\n            <Route path=\"/article/:cnt\" component={Article}/> \n            \n            <Route path=\"/people-circle\" component={People_circle}/>\n\n            <Route path=\"/globe\" component={Globe} />\n\n            <Route path=\"/love-me\" component={Love_me}/>\n\n            <Route path=\"/my-profile\" component={MyProfile}/>\n\n            <Route path=\"/\" component={Intro}/>\n        </Switch>\n      </Suspense>\n    </div>\n  )  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/main.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}