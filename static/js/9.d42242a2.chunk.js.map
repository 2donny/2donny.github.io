{"version":3,"sources":["containers/community.js","pages/Person.js","model/person.js","components/card.js"],"names":["Community","users","MediaQueryArr","Query","useMediaQuery","minDeviceHeight","height","i","style","className","map","person","key","id","profileImg","description","displayName","heartCnt","contents","tags","Person","useState","isSettingFinished","unKnownUserClicked","setUnKnownUserClicked","isFiltering","setFiltering","personCommunity","FilteredUser","setFilteringUser","isUnivClicked","setUnivClicked","isGenderClicked","setGenderClicked","isAgeClicked","setAgeClicked","isInterestClicked","setInterestClicked","Univ","setUniv","Gender","setGender","Age","setAge","Interest","setInterest","UnivHandler","useCallback","selectedOption","label","GenderHandler","AgeHandler","value","InterestHandler","UnivFilteringHandler","filteredArr","filter","user","univ","GenderFilteringHandler","gender","AgeFilteringHandler","age","InterestFilteringHandler","interests","find","interest","onClick","e","preventDefault","zIndex","show","to","clicked","defaultValue","UniversityOptions","options","UnivgroupedOptions","onChange","GenderOptions","GendergroupedOptions","join","AgeOptions","AgegroupedOptions","InterestOptions","InterestgroupedOptions","src","width","color","red","green","blue","alpha","segmentWidth","alt","isFixed","AgeSettingOptions","jobs","adjectives","Card","isHeartClicked","setHeartClicked","heartStateCnt","setHeartCnt","useEffect","keyword","tag"],"mappings":"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","file":"static/js/9.d42242a2.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '../components/card';\nimport { useMediaQuery } from 'react-responsive';\n\nconst Community = ({ users }) => {\n    const isIPhoneX = useMediaQuery({\n        minDeviceHeight: 811     \n    });\n    const isPC = useMediaQuery({\n        minDeviceHeight: 795\n    });\n    const isIPhon_6_7_8_Plus = useMediaQuery({\n        minDeviceHeight: 735\n    });\n    const isIPhon_6_7_8 = useMediaQuery({\n        minDeviceHeight: 666\n    });\n    const remainder = useMediaQuery({\n        minDeviceHeight: 0\n    });\n\n    const MediaQueryArr = [\n        {\n            Query: isIPhoneX, // 811px\n            height: '500px'\n        }, \n        {\n            Query: isPC,   // 795px\n            height: '450px'\n        }, \n        {\n            Query: isIPhon_6_7_8_Plus, // 735px\n            height: '420px'\n        }, \n        {\n            Query: isIPhon_6_7_8, // 666px\n            height: '350px'\n        },\n        {\n            Query: remainder, // 0px\n            height: '300px'\n        }\n    ];\n\n    // 뷰포트 크기에 따라 Scroll pannel의 height 계산\n    let height = 0;\n    for(let i = 0 ; i < 5; i++) {\n        if(MediaQueryArr[i].Query === true){\n            height = MediaQueryArr[i].height;\n            break;\n        }\n    }\n    return (\n        <>\n            <section \n                style={{height: height}}\n                className=\"flex flex-col overflow-scroll relative\"\n            >\n                {users.map((person, key) => (\n                    <Card \n                        key={key}\n                        id={person.id}\n                        profileImg={person.profileImg} \n                        description={person.description} \n                        displayName={person.displayName} \n                        heartCnt={person.heartCnt}\n                        contents={person.contents}\n                        tags={person.tags}\n                    />\n                ))}                       \n            </section>\n        </>\n    )\n}\n\nexport default Community;","import React, { useState, useCallback, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { StyleRoot } from 'radium';\nimport Select from 'react-select';\nimport LoadingIndicator from 'react-loading-indicator';\nimport Community from '../containers/community';\nimport Layout from '../components/layout';\nimport Modal from '../components/UI/modal';\nimport { \n    UniversityOptions, \n    UnivgroupedOptions,\n    GenderOptions,\n    GendergroupedOptions,\n    AgeOptions,\n    AgegroupedOptions,\n    InterestOptions,\n    InterestgroupedOptions,\n} from '../model/person';\nimport { personCommunity } from '../model/person';\n\nconst Person = () => {\n    // 새로운 유저가 화면 클릭시 리다이렉션.\n    const [isSettingFinished, setIsSettingFinished] = useState(false);    \n    const [unKnownUserClicked, setUnKnownUserClicked] = useState(false);\n    \n    // filtering state => 필터링 시작 여부\n    const [isFiltering, setFiltering] = useState(false);\n    const [FilteredUser, setFilteringUser] = useState(personCommunity);\n\n    // button click state => 버튼 클릭 여부\n    const [isUnivClicked, setUnivClicked] = useState(false);\n    const [isGenderClicked, setGenderClicked] = useState(false);\n    const [isAgeClicked, setAgeClicked] = useState(false);\n    const [isInterestClicked, setInterestClicked] = useState(false);\n\n    // filtered state => Select 후 상태\n    const [Univ, setUniv] = useState(\"고려대학교\");\n    const [Gender, setGender] = useState(\"여자\");\n    const [Age, setAge] = useState([23, 26]);\n    const [Interest, setInterest] = useState(\"맛집\");\n\n    // filtering state Handler => Select를 할 때 발생\n    const UnivHandler = useCallback((selectedOption) => {\n        setUniv(selectedOption.label);\n    }, []);\n    const GenderHandler = useCallback((selectedOption) => {\n        setGender(selectedOption.label);\n    }, []);\n    const AgeHandler = useCallback((selectedOption) => {\n        setAge(selectedOption.value);\n    }, []);\n    const InterestHandler = useCallback((selectedOption) => {\n        setInterest(selectedOption.value);\n    }, []);\n\n    // Filtering User Handler => 확인 버튼. 클릭 시 발생.\n    const UnivFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr = personCommunity.filter(user => {\n            return user.univ === Univ\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setUnivClicked(false);\n    }, [Univ]);\n\n    const GenderFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr = personCommunity.filter(user => {\n            return user.gender === Gender\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setGenderClicked(false);\n    }, [Gender]);\n\n    const AgeFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr = personCommunity.filter(user => {\n            return (user.age >= Age[0]) && (user.age <= Age[1])\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setAgeClicked(false);\n    }, [Age]);\n\n    const InterestFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr =  personCommunity.filter(user => {\n            return user.interests.find(interest => interest === Interest)\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setInterestClicked(false);\n    }, [Interest]);\n    \n\n    return (\n        <div className=\"max-h-screen overflow-hidden\">\n            <div onClick={(e) => isSettingFinished ? null : setUnKnownUserClicked(!unKnownUserClicked) && e.preventDefault()} style={{zIndex: 999}} className=\"w-full h-screen bg-gray-400\">\n                <Layout>\n                    <section className=\"px-3 my-2\">\n                        {/* 프로필 설정을 안했으면, '/Iam' 으로 보내기 */}\n                        <Modal show={unKnownUserClicked}>\n                            <div className=\"my-5 text-md h-full\">\n                                <h1>활동하시려면 먼저 가입을 해주세요! </h1>\n                            </div>\n                            <div>\n                                <Link to=\"/univ\">\n                                    <button className=\"font-sans w-full border-2 rounded-3xl px-5 py-3 mt-10 bg-black text-white hover:text-black hover:bg-white focus:outline-none\">가입하기</button>\n                                </Link>\n                            </div>\n                        </Modal>\n                      \n\n                        {/* Button Nav */}\n                        <div className=\"my-3 flex-nowrap overflow-hidden\">\n                            <button id=\"univ\" onClick={() => setUnivClicked(true)} className=\"px-1 py-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                                학교 <span className=\"text-blue-500\">{Univ}</span>\n                            </button>\n                            <Modal show={isUnivClicked} clicked={() => setUnivClicked(false)}>\n                                <div>\n                                    <h1 className=\"font-bold mb-5\">대학교</h1>\n                                    <Select \n                                        defaultValue={UniversityOptions[1]}\n                                        options={UnivgroupedOptions}\n                                        onChange={UnivHandler}\n                                    />\n                                    <button \n                                        onClick={() => UnivFilteringHandler()} \n                                        className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                    >\n                                        확인\n                                    </button>\n                                </div>\n                            </Modal>\n\n                            <button id=\"gender\" onClick={() => setGenderClicked(true)} className=\"px-1 py-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                                성별 <span className=\"text-blue-500\">{Gender}</span>\n                            </button>\n                            <Modal show={isGenderClicked} clicked={() => setGenderClicked(false)}>\n                                <div>\n                                    <h1 className=\"font-bold mb-5\">성별</h1>\n                                    <Select \n                                        defaultValue={GenderOptions[1]} \n                                        options={GendergroupedOptions}\n                                        onChange={GenderHandler}\n                                    />\n                                    <button \n                                        onClick={() => GenderFilteringHandler()} \n                                        className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                    >\n                                        확인\n                                    </button>\n                                </div>\n                            </Modal>\n\n                            <button id=\"age\" onClick={() => setAgeClicked(true)} className=\"px-1 py-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                                나이 <span className=\"text-blue-400\">{Age.join('~')}살</span>\n                            </button>\n                            <Modal show={isAgeClicked} clicked={() => setAgeClicked(false)}>\n                                <div>\n                                    <h1 className=\"font-bold mb-5\">나이</h1>\n                                    <Select \n                                        defaultValue={AgeOptions[1]}\n                                        options={AgegroupedOptions}\n                                        onChange={AgeHandler}\n                                    />\n                                    <button \n                                        onClick={() => AgeFilteringHandler()} \n                                        className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                    >\n                                        확인\n                                    </button>\n                                </div>\n                            </Modal>\n\n                            <button id=\"interest\" onClick={() => setInterestClicked(true)} className=\"px-1 py-2 mt-2 mr-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                                관심사 <span className=\"text-blue-400\">{Interest}</span>\n                            </button>\n                            <Modal show={isInterestClicked} clicked={() => setInterestClicked(false)}>\n                                <div>\n                                    <h1 className=\"font-bold mb-5\">{Interest}</h1>\n                                    <Select \n                                        defaultValue={InterestOptions[0]}\n                                        options={InterestgroupedOptions}\n                                        onChange={InterestHandler}\n                                    />\n                                    <button \n                                        onClick={() => InterestFilteringHandler()} \n                                        className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                    >\n                                        확인\n                                    </button>\n                                </div>\n                            </Modal>\n                            <img \n                                onClick={() => setFilteringUser(personCommunity)}\n                                src=\"https://2donny.github.io/ykring/refresh-outline.svg\"\n                                width={20}\n                                height={20}\n                                className=\"inline-block cursor-pointer \"\n                            />\n                        </div>\n\n                        {/* 커뮤니티 컨테이너 */}\n                        {isFiltering ? (\n                            <StyleRoot\n                                className=\"flex flex-row justify-center mt-5\"\n                            >\n                                <LoadingIndicator \n                                    color={{red: 0, green: 0, blue: 200, alpha: .5}}\n                                    segmentWidth={5}\n                                />\n                            </StyleRoot>    \n                        ) : (\n                            <Community users={FilteredUser} />\n                        )}\n\n                        {/* 작성 버튼 */}\n                        <Link to=\"/create-article\">\n                            <img \n                                src=\"https://2donny.github.io/ykring/add-circle.svg\"\n                                alt=\"add-circle\"\n                                width={50}\n                                height={50}\n                                className=\"absolute right-1 bottom-20 mr-3\"\n                            />\n                        </Link>\n                    </section>\n                </Layout>\n            </div>\n        </div>\n    )\n}\n\nexport default Person;","export const personCommunity = [\n    {\n        id: 0,\n        profileImg: \"https://2donny.github.io/ykring/UserImage/User1.png\",\n        description: [\"고려대학교\", \"ENTP\", \"23살\", \"진지충\"],\n        displayName: \"정이든\",\n        heartCnt: 32,\n        contents: \"요즘 취준하느라 너무 힘들어요! 고민이야기 같이 하실 분 구해요 ✨ \",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"개발\"],\n        univ: \"고려대학교\",\n        gender: \"남자\",\n        age: 23,\n        interests: [\"헬스\", \"넷플릭스\", \"개발\"]\n    },\n    {\n        id: 1,\n        profileImg: \"https://2donny.github.io/ykring//UserImage/User2.png\",\n        description: [\"연세대학교\", \"ISFP\", \"26살\", \"수다쟁이\"],\n        displayName: \"양지원\",\n        heartCnt: 2,\n        contents: \"제일 좋아하는 건 마라탕이고 인천살아용 친구사귀고 싶어요~! 연락주세요 ㅎㅎ!\",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"예술\"],\n        univ: \"연세대학교\",\n        gender: \"여자\",\n        age: 26,\n        interests: [\"독서\", \"넷플릭스\"]\n    },\n    {\n        id: 2,\n        profileImg: \"https://2donny.github.io/ykring//UserImage/User3.png\",\n        description: [\"서강대학교\", \"ENTP\", \"20살\", \"신입생\"],\n        displayName: \"김현우\",\n        heartCnt: 3,\n        contents: \"코로나라 밖에 못나가는.... 불쌍한 신입생과 영상통화 하실 분.... ㅎㅎ\",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"예술\"],\n        univ: \"서강대학교\",\n        gender: \"남자\",\n        age: 20,\n        interests: [\"헬스\", \"넷플릭스\", \"맛집\"]\n    },\n    {\n        id: 3,\n        profileImg: \"https://2donny.github.io/ykring//UserImage/User4.png\",\n        description: [\"한양대학교\", \"ENTP\", \"22살\", \"재수생\"],\n        displayName: \"김소연\",\n        heartCnt: 15,\n        contents: \"피아노잘침. 인공지능 관심 있어요! / 대화잘 통하는 분 원해요. 개발스터디 같이하실분\",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"예술\"],\n        univ: \"한양대학교\",\n        gender: \"여자\",\n        age: 22,\n        interests: [\"맛집\", \"독서\", \"게임\"]\n    },\n];\n\n// Select Options data\n\n// 대학교\nexport const UniversityOptions = [\n    { value: 'seoul', label: '서울대학교', color: '#00B8D9', isFixed: true },\n    { value: 'korea', label: '고려대학교', color: '#0052CC'},\n    { value: 'yonsei', label: '연세대학교', color: '#5243AA' },\n    { value: 'hanyang', label: '한양대학교', color: '#FF5630', isFixed: true },\n    { value: 'seokang', label: '서강대학교', color: '#FF5630', isFixed: true },\n    { value: 'sungkyunkwan', label: '성균관대학교', color: '#FF5630', isFixed: true },\n]\n\nexport const UnivgroupedOptions = [\n    {\n      label: '대학',\n      options: UniversityOptions,\n    },\n];\n\n// 성별\nexport const GenderOptions = [\n    { value: 'man', label: '남자', color: '#00B8D9', isFixed: true },\n    { value: 'woman', label: '여자', color: '#0052CC'},\n]\n\nexport const GendergroupedOptions = [\n    {\n      label: '성별',\n      options: GenderOptions,\n    },\n];\n\n// 나이\nexport const AgeOptions = [\n    // value => 최대 나이\n    { value: [20, 22], label: '20세 ~ 22세', color: '#00B8D9', isFixed: true },\n    { value: [23, 26], label: '23세 ~ 26세', color: '#0052CC'},\n    { value: [27, 29], label: '27세 ~ 29세', color: '#0052CC'},\n    { value: [30, 40], label: '30세 이상', color: '#0052CC'},\n]\n\nexport const AgegroupedOptions = [\n    {\n      label: '나이',\n      options: AgeOptions,\n    },\n];\n\n// 취향\nexport const InterestOptions = [\n    { value: '맛집', label: '🍣 맛집 탐방하기', color: '#0052CC'},\n    { value: '넷플릭스', label: '🍿 넷플릭스 보기', color: '#0052CC'},\n    { value: '게임', label: '🎮 게임', color: '#00B8D9', isFixed: true },\n    { value: '독서', label: '📚 독서', color: '#00B8D9', isFixed: true },\n    { value: '헬스', label: '💪🏻 헬스', color: '#0052CC'},\n    { value: '개발', label:'💻 개발', color: '#00B8D9', isFixed: true },\n]\n\nexport const InterestgroupedOptions = [\n    {\n      label: '관심사',\n      options: InterestOptions,\n    },\n];\n\nexport const AgeSettingOptions = [\n    { label: 20, value: 20 },\n    { label: 21, value: 21 },\n    { label: 22, value: 22 },\n    { label: 23, value: 23 },\n    { label: 24, value: 24 },\n    { label: 25, value: 25 },\n    { label: 26, value: 26 },\n    { label: 27, value: 27 },\n    { label: 28, value: 28 },\n    { label: 29, value: 29 },\n    { label: 30, value: 30 },\n    { label: 31, value: 31 },\n    { label: 32, value: 32 },\n    { label: 33, value: 33 },\n    { label: 34, value: 34 },\n    { label: 35, value: 35 },\n];\n\nexport const jobs = [\n    { label: \"대학생\", value: \"대학생\" },\n    { label: \"신입생\", value: \"신입생\" },\n    { label: \"개발자\", value: \"개발자\" },\n    { label: \"기획자\", value: \"기획자\" },\n    { label: \"마케터\", value: \"마케터\" },\n    { label: \"대표\", value: \"대표\" },\n    { label: \"편집자\", value: \"편집자\" },\n    { label: \"생산원\", value: \"생산원\" },\n    { label: \"선생님\", value: \"선생님\" },\n    { label: \"마술사\", value: \"마술사\" },\n    { label: \"사업가\", value: \"사업가\" },\n    { label: \"프리랜서\", value: \"프리랜서\" },\n    { label: \"알바생\", value: \"알바생\" },\n    { label: \"서비스원\", value: \"서비스원\" },\n    { label: \"생산원\", value: \"생산원\" },\n    { label: \"기술자\", value: \"기술자\" },\n]\n\nexport const adjectives = [\n    { label: \"심심한\", value: \"심심한\" },\n    { label: \"배부른\", value: \"배부른\" },\n    { label: \"똑똑한\", value: \"똑똑한\" },\n    { label: \"열정이 넘치는\", value: \"열정이 넘치는\" },\n    { label: \"독특한\", value: \"독특한\" },\n    { label: \"매력있는\", value: \"매력있는\" },\n    { label: \"배고픈\", value: \"배고픈\" },\n    { label: \"헤롱헤롱한\", value: \"헤롱헤롱한\" },\n    { label: \"디자이너가 되고싶은\", value: \"디자이너가 되고싶은\" },\n    { label: \"개발자가 되고싶은\", value: \"개발자가 되고싶은\" },\n    \n]","import React, { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom';\n\nconst Card = ({ id, profileImg, description, displayName, contents, heartCnt, tags }) => {\n    const [isHeartClicked, setHeartClicked] = useState(null);\n    const [heartStateCnt, setHeartCnt] = useState(heartCnt);\n\n    useEffect(() => {\n        if(isHeartClicked === true) \n            setHeartCnt(heartStateCnt + 1);\n        else if(isHeartClicked === false) \n            setHeartCnt(heartStateCnt - 1);\n        else \n            setHeartCnt(heartCnt)\n    }, [isHeartClicked]);\n\n    return (\n        <article className=\"my-2 mx-3 relative\">\n                {/* Profle */}\n                <div className=\"flex flex-row\">\n                    <Link to={`/profile/${id}`}>\n                        <img \n                            src={profileImg}\n                            alt={displayName}\n                            width={50}\n                            height={50}\n                            className=\"rounded-full object-cover m-0\"\n                        />\n                    </Link>\n                    <div className=\"mx-5\">\n                        {description.map((keyword, id) => (\n                            <span key={id} className=\"text-xs\"> {keyword} / </span>\n                        ))}\n                        <h1 className=\"text-lg font-bold\">{displayName}</h1>\n                    </div>\n                    <div className=\"absolute right-0\">\n                        {/* Heart */}\n                        <button onClick={() => setHeartClicked(!isHeartClicked)} className=\"px-2 py-2 focus:outline-none\">\n                            {isHeartClicked ? (\n                                <img \n                                    src=\"https://2donny.github.io/ykring//heart-red.png\"\n                                    height={18}\n                                    width={20}\n                                    alt=\"heart\"\n                                />\n                            ) : (\n                                <img \n                                    src=\"https://2donny.github.io/ykring/NavImage/heart-outline.svg\"\n                                    height={20}\n                                    width={20}\n                                    alt=\"heart-outline\"\n                                />\n                            )}\n                        </button>\n                        {/* Heart count */}\n                        <p className=\"text-center\">\n                            {heartCnt}\n                        </p>\n                    </div>\n\n                </div>\n                \n                {/* 글 내용 */}\n                <Link to={`/article/${id}`}>\n                    <h1 className=\" text-xs my-3\">{contents}</h1>\n                </Link>\n\n                {/* 태그 */}\n                <div className=\"border-b-2\">\n                    {tags.map((tag, id) => (\n                        <p key={id} className=\"px-3 inline-block mx-1 mb-3 text-xs text-2xs border-2 rounded-2xl text-gray-400\">{tag}</p>\n                    ))}\n                </div>\n\n        </article>\n    )\n}\n\nexport default Card;"],"sourceRoot":""}