{"version":3,"sources":["containers/community.js","pages/Person.js","components/footer_nav.js","components/banner.js","components/layout.js","model/person.js","components/card.js"],"names":["Community","users","MediaQueryArr","Query","useMediaQuery","minDeviceHeight","height","i","style","className","map","person","key","id","profileImg","description","displayName","heartCnt","contents","tags","Person","useState","isFiltering","setFiltering","personCommunity","FilteredUser","setFilteringUser","isUnivClicked","setUnivClicked","isGenderClicked","setGenderClicked","isAgeClicked","setAgeClicked","isInterestClicked","setInterestClicked","Univ","setUniv","Gender","setGender","Age","setAge","Interest","setInterest","UnivHandler","useCallback","selectedOption","label","GenderHandler","AgeHandler","value","InterestHandler","UnivFilteringHandler","filteredArr","filter","user","univ","GenderFilteringHandler","gender","AgeFilteringHandler","age","InterestFilteringHandler","interests","find","interest","onClick","show","clicked","defaultValue","UniversityOptions","options","UnivgroupedOptions","onChange","GenderOptions","GendergroupedOptions","join","AgeOptions","AgegroupedOptions","InterestOptions","InterestgroupedOptions","src","width","color","red","green","blue","alpha","segmentWidth","to","alt","Footer_nav","borderTop","padding","window","location","pathname","Banner","Layout","children","headerNone","minWidth","maxWidth","maxHeight","border","isFixed","Card","isHeartClicked","setHeartClicked","heartStateCnt","setHeartCnt","useEffect","keyword","tag"],"mappings":"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","file":"static/js/5.2dfde3e3.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '../components/card';\nimport { useMediaQuery } from 'react-responsive';\n\nconst Community = ({ users }) => {\n    const isIPhoneX = useMediaQuery({\n        minDeviceHeight: 811     \n    });\n    const isPC = useMediaQuery({\n        minDeviceHeight: 795\n    });\n    const isIPhon_6_7_8_Plus = useMediaQuery({\n        minDeviceHeight: 735\n    });\n    const isIPhon_6_7_8 = useMediaQuery({\n        minDeviceHeight: 666\n    });\n    const remainder = useMediaQuery({\n        minDeviceHeight: 0\n    });\n\n    const MediaQueryArr = [\n        {\n            Query: isIPhoneX, // 811px\n            height: '500px'\n        }, \n        {\n            Query: isPC,   // 795px\n            height: '450px'\n        }, \n        {\n            Query: isIPhon_6_7_8_Plus, // 735px\n            height: '420px'\n        }, \n        {\n            Query: isIPhon_6_7_8, // 666px\n            height: '350px'\n        },\n        {\n            Query: remainder, // 0px\n            height: '300px'\n        }\n    ];\n\n    // 뷰포트 크기에 따라 Scroll pannel의 height 계산\n    let height = 0;\n    for(let i = 0 ; i < 5; i++) {\n        if(MediaQueryArr[i].Query === true){\n            height = MediaQueryArr[i].height;\n            break;\n        }\n    }\n    return (\n        <>\n            <section \n                style={{height: height}}\n                className=\"flex flex-col overflow-scroll relative\"\n            >\n                {users.map((person, key) => (\n                    <Card \n                        key={key}\n                        id={person.id}\n                        profileImg={person.profileImg} \n                        description={person.description} \n                        displayName={person.displayName} \n                        heartCnt={person.heartCnt}\n                        contents={person.contents}\n                        tags={person.tags}\n                    />\n                ))}                       \n            </section>\n        </>\n    )\n}\n\nexport default Community;","import React, { useState, useCallback, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { StyleRoot } from 'radium';\nimport Select from 'react-select';\nimport LoadingIndicator from 'react-loading-indicator';\nimport Community from '../containers/community';\nimport Layout from '../components/layout';\nimport Modal from '../components/UI/modal';\nimport { \n    UniversityOptions, \n    UnivgroupedOptions,\n    GenderOptions,\n    GendergroupedOptions,\n    AgeOptions,\n    AgegroupedOptions,\n    InterestOptions,\n    InterestgroupedOptions,\n} from '../model/person';\nimport { personCommunity } from '../model/person';\n\nconst Person = () => {\n    // filtering state => 필터링 시작 여부\n    const [isFiltering, setFiltering] = useState(false);\n    const [FilteredUser, setFilteringUser] = useState(personCommunity);\n    // button click state => 버튼 클릭 여부\n    const [isUnivClicked, setUnivClicked] = useState(false);\n    const [isGenderClicked, setGenderClicked] = useState(false);\n    const [isAgeClicked, setAgeClicked] = useState(false);\n    const [isInterestClicked, setInterestClicked] = useState(false);\n    // filtered state => Select 후 상태\n    const [Univ, setUniv] = useState(\"고려대학교\");\n    const [Gender, setGender] = useState(\"여자\");\n    const [Age, setAge] = useState([23, 26]);\n    const [Interest, setInterest] = useState(\"맛집\");\n\n    // filtering state Handler => Select를 할 때 발생\n    const UnivHandler = useCallback((selectedOption) => {\n        setUniv(selectedOption.label);\n    }, []);\n    const GenderHandler = useCallback((selectedOption) => {\n        setGender(selectedOption.label);\n    }, []);\n    const AgeHandler = useCallback((selectedOption) => {\n        setAge(selectedOption.value);\n    }, []);\n    const InterestHandler = useCallback((selectedOption) => {\n        setInterest(selectedOption.value);\n    }, []);\n\n    // Filtering User Handler => 확인 버튼. 클릭 시 발생.\n    const UnivFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr = personCommunity.filter(user => {\n            return user.univ === Univ\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setUnivClicked(false);\n    }, [Univ]);\n\n    const GenderFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr = personCommunity.filter(user => {\n            return user.gender === Gender\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setGenderClicked(false);\n    }, [Gender]);\n\n    const AgeFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr = personCommunity.filter(user => {\n            return (user.age >= Age[0]) && (user.age <= Age[1])\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setAgeClicked(false);\n    }, [Age]);\n\n    const InterestFilteringHandler = useCallback(() => {\n        setFiltering(true);\n        const filteredArr =  personCommunity.filter(user => {\n            return user.interests.find(interest => interest === Interest)\n        });\n        setFilteringUser(filteredArr);\n        setFiltering(false);\n        setInterestClicked(false);\n    }, [Interest]);\n    \n\n    return (\n        <div className=\"max-h-screen overflow-hidden\">\n            <Layout>\n\n                {/* main */}\n                <section className=\"px-3 my-2\">\n\n                    {/* Button Nav */}\n                    <div className=\"my-3 flex-nowrap overflow-hidden\">\n                        <button id=\"univ\" onClick={() => setUnivClicked(true)} className=\"px-1 py-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                            학교 <span className=\"text-blue-500\">{Univ}</span>\n                        </button>\n                        <Modal show={isUnivClicked} clicked={() => setUnivClicked(false)}>\n                            <div>\n                                <h1 className=\"font-bold mb-5\">대학교</h1>\n                                <Select \n                                    defaultValue={UniversityOptions[1]}\n                                    options={UnivgroupedOptions}\n                                    onChange={UnivHandler}\n                                />\n                                <button \n                                    onClick={() => UnivFilteringHandler()} \n                                    className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                >\n                                    확인\n                                </button>\n                            </div>\n                        </Modal>\n\n                        <button id=\"gender\" onClick={() => setGenderClicked(true)} className=\"px-1 py-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                            성별 <span className=\"text-blue-500\">{Gender}</span>\n                        </button>\n                        <Modal show={isGenderClicked} clicked={() => setGenderClicked(false)}>\n                            <div>\n                                <h1 className=\"font-bold mb-5\">성별</h1>\n                                <Select \n                                    defaultValue={GenderOptions[1]}\n                                    options={GendergroupedOptions}\n                                    onChange={GenderHandler}\n                                />\n                                <button \n                                    onClick={() => GenderFilteringHandler()} \n                                    className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                >\n                                    확인\n                                </button>\n                            </div>\n                        </Modal>\n\n                        <button id=\"age\" onClick={() => setAgeClicked(true)} className=\"px-1 py-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                            나이 <span className=\"text-blue-400\">{Age.join('~')}살</span>\n                        </button>\n                        <Modal show={isAgeClicked} clicked={() => setAgeClicked(false)}>\n                            <div>\n                                <h1 className=\"font-bold mb-5\">나이</h1>\n                                <Select \n                                    defaultValue={AgeOptions[1]}\n                                    options={AgegroupedOptions}\n                                    onChange={AgeHandler}\n                                />\n                                <button \n                                    onClick={() => AgeFilteringHandler()} \n                                    className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                >\n                                    확인\n                                </button>\n                            </div>\n                        </Modal>\n\n                        <button id=\"interest\" onClick={() => setInterestClicked(true)} className=\"px-1 py-2 mt-2 mr-2 border-2 rounded-xl mx-1 text-xs focus:outline-none \">\n                            관심사 <span className=\"text-blue-400\">{Interest}</span>\n                        </button>\n                        <Modal show={isInterestClicked} clicked={() => setInterestClicked(false)}>\n                            <div>\n                                <h1 className=\"font-bold mb-5\">{Interest}</h1>\n                                <Select \n                                    defaultValue={InterestOptions[0]}\n                                    options={InterestgroupedOptions}\n                                    onChange={InterestHandler}\n                                />\n                                <button \n                                    onClick={() => InterestFilteringHandler()} \n                                    className=\" w-full mt-20 border-2 rounded-3xl px-5 py-3 bg-blue-400 text-white hover:text-white hover:bg-blue-500 focus:outline-none\"\n                                >\n                                    확인\n                                </button>\n                            </div>\n                        </Modal>\n                        <img \n                            onClick={() => setFilteringUser(personCommunity)}\n                            src=\"https://2donny.github.io/ykring/refresh-outline.svg\"\n                            width={20}\n                            height={20}\n                            className=\"inline-block cursor-pointer \"\n                        />\n                    </div>\n\n                    {/* 커뮤니티 컨테이너 */}\n                    {isFiltering ? (\n                        <StyleRoot\n                            className=\"flex flex-row justify-center mt-5\"\n                        >\n                            <LoadingIndicator \n                                color={{red: 0, green: 0, blue: 200, alpha: .5}}\n                                segmentWidth={5}\n                            />\n                        </StyleRoot>    \n                    ) : (\n                        <Community users={FilteredUser} />\n                    )}\n\n                    {/* 작성 버튼 */}\n                    <Link to=\"/create-article\">\n                        <img \n                            src=\"https://2donny.github.io/ykring/add-circle.svg\"\n                            alt=\"add-circle\"\n                            width={50}\n                            height={50}\n                            className=\"absolute right-1 bottom-20 mr-3\"\n                        />\n                    </Link>\n                </section>\n                \n            </Layout>\n        </div>\n    )\n}\n\nexport default Person;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Footer_nav = () => {\n    return (\n        <footer\n            style={{ borderTop: '1px solid #ccc', padding: '15px 0 30px' }}\n            className=\"flex flex-row w-full justify-evenly absolute bottom-0 bg-gray-100\"\n        >\n            <NavLink to=\"/person\">\n                <img \n                    src={(window.location.pathname == \"/person\") ? \"https://2donny.github.io/ykring/NavImage/person-add.svg\" : \"https://2donny.github.io/ykring/NavImage/person-add-outline.svg\"}\n                    width={35}\n                    height={35}\n                />\n            </NavLink>\n            <NavLink to=\"/people-circle\">\n                <img \n                    src={(window.location.pathname == \"/people-circle\") ? \"https://2donny.github.io/ykring/NavImage/people-circle.svg\" : \"https://2donny.github.io/ykring/NavImage/people-circle-outline.svg\"}\n                    width={35}\n                    height={35}\n                />\n            </NavLink>\n            <NavLink to=\"/globe\">\n                <img \n                    src={(window.location.pathname == \"/globe\") ? \"https://2donny.github.io/ykring/NavImage/globe.svg\" : \"https://2donny.github.io/ykring/NavImage/globe-outline.svg\"}\n                    width={35}\n                    height={35}\n                />\n            </NavLink>\n            <NavLink to=\"love-me\">\n                <img \n                    src={(window.location.pathname == \"/love-me\") ? \"https://2donny.github.io/ykring/NavImage/heart.svg\" : \"https://2donny.github.io/ykring/NavImage/heart-outline.svg\"}\n                    width={35}\n                    height={35}\n                />\n            </NavLink>\n            <NavLink to=\"/my-profile\">\n                <img \n                    src={(window.location.pathname == \"/my-profile\") ? \"https://2donny.github.io/ykring/NavImage/profile.svg\" : \"https://2donny.github.io/ykring/NavImage/profile-outline.svg\"}\n                    width={35}\n                    height={35}\n                />\n            </NavLink>\n        </footer>\n    )\n}\n\nexport default Footer_nav;","import React from 'react';\n\nconst Banner = () => {\n    return (\n        <section className=\"px-3 rounded-3xl\">\n            <div className=\"flex flex-row items-center justify-evenly w-full h-16 bg-gray-100\">\n                <div>\n                    <h1 className=\"text-sm font-bold\">[연고링 사용법] 알려드려요.</h1>\n                    <p className=\"text-xs text-gray-400\">알아보기 START!</p>\n                </div>\n                <img \n                    src=\"https://2donny.github.io/ykring/logo192.png\"\n                    width={50}\n                    height={50}\n                />\n                </div>\n        </section>\n    )\n}\n\nexport default Banner;","import React from 'react'\nimport Footer_nav from './footer_nav';\nimport Banner from './banner';\nimport { Link } from 'react-router-dom';\n\nconst Layout = ({ children, headerNone }) => {\n    return (\n        <div \n            style={{ minWidth: \"320px\", maxWidth: \"414px\", maxHeight: '100vh', border: \"1px solid gray\"}}\n            className=\"flex flex-col mx-auto h-screen relative\"\n        >\n            {/* Navigation */}\n            {!headerNone ? (\n                <>\n                    <nav className=\"flex flex-row justify-between px-3 py-5\">\n                        <Link to=\"/person\">\n                            <img\n                                style={{width: 50, height: 50}}\n                                src=\"https://2donny.github.io/ykring/yk-logo.png\"\n                                className=\" rounded-2xl\"\n                            />\n                        </Link>\n                        <div className=\"flex flex-row items-center\">\n                            <Link to=\"/\">\n                            <h1 className=\"mx-2 font-bold hover:text-blue-400\">돌아가기</h1>\n                            </Link>\n                            <h1 className=\"mx-2 cursor-pointer font-bold hover:text-red-600 hover:font-bold\">신고하기</h1>\n                        </div>\n                    </nav>\n                    {/* Banner */}\n                    <Banner />\n                </>\n            ) : (\n                null\n            )}\n            \n            {/*  main custom  */}\n            <main className=\"h-screen\">\n                {children}\n            </main>\n\n            {/* footer */}\n            <Footer_nav />\n        </div>\n    )\n}\n\nexport default Layout;","export const personCommunity = [\n    {\n        id: 0,\n        profileImg: \"https://2donny.github.io/ykring/UserImage/User1.png\",\n        description: [\"고려대학교\", \"ENTP\", \"23살\", \"진지충\"],\n        displayName: \"정이든\",\n        heartCnt: 32,\n        contents: \"요즘 취준하느라 너무 힘들어요! 고민이야기 같이 하실 분 구해요 ✨ \",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"개발\"],\n        univ: \"고려대학교\",\n        gender: \"남자\",\n        age: 23,\n        interests: [\"헬스\", \"넷플릭스\", \"개발\"]\n    },\n    {\n        id: 1,\n        profileImg: \"https://2donny.github.io/ykring//UserImage/User2.png\",\n        description: [\"연세대학교\", \"ISFP\", \"26살\", \"수다쟁이\"],\n        displayName: \"양지원\",\n        heartCnt: 2,\n        contents: \"제일 좋아하는 건 마라탕이고 인천살아용 친구사귀고 싶어요~! 연락주세요 ㅎㅎ!\",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"예술\"],\n        univ: \"연세대학교\",\n        gender: \"여자\",\n        age: 26,\n        interests: [\"독서\", \"넷플릭스\"]\n    },\n    {\n        id: 2,\n        profileImg: \"https://2donny.github.io/ykring//UserImage/User3.png\",\n        description: [\"서강대학교\", \"ENTP\", \"20살\", \"신입생\"],\n        displayName: \"김현우\",\n        heartCnt: 3,\n        contents: \"코로나라 밖에 못나가는.... 불쌍한 신입생과 영상통화 하실 분.... ㅎㅎ\",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"예술\"],\n        univ: \"서강대학교\",\n        gender: \"남자\",\n        age: 20,\n        interests: [\"헬스\", \"넷플릭스\", \"맛집\"]\n    },\n    {\n        id: 3,\n        profileImg: \"https://2donny.github.io/ykring//UserImage/User4.png\",\n        description: [\"한양대학교\", \"ENTP\", \"22살\", \"재수생\"],\n        displayName: \"김소연\",\n        heartCnt: 15,\n        contents: \"피아노잘침. 인공지능 관심 있어요! / 대화잘 통하는 분 원해요. 개발스터디 같이하실분\",\n        tags: [\"영화\", \"동네산책\", \"솔직한 대화\", \"예술\"],\n        univ: \"한양대학교\",\n        gender: \"여자\",\n        age: 22,\n        interests: [\"맛집\", \"독서\", \"게임\"]\n    },\n];\n\n// Select Options data\n\n// 대학교\nexport const UniversityOptions = [\n    { value: 'seoul', label: '서울대학교', color: '#00B8D9', isFixed: true },\n    { value: 'korea', label: '고려대학교', color: '#0052CC'},\n    { value: 'yonsei', label: '연세대학교', color: '#5243AA' },\n    { value: 'hanyang', label: '한양대학교', color: '#FF5630', isFixed: true },\n    { value: 'seokang', label: '서강대학교', color: '#FF5630', isFixed: true },\n    { value: 'sungkyunkwan', label: '성균관대학교', color: '#FF5630', isFixed: true },\n]\n\nexport const UnivgroupedOptions = [\n    {\n      label: '대학',\n      options: UniversityOptions,\n    },\n];\n\n// 성별\nexport const GenderOptions = [\n    { value: 'man', label: '남자', color: '#00B8D9', isFixed: true },\n    { value: 'woman', label: '여자', color: '#0052CC'},\n]\n\nexport const GendergroupedOptions = [\n    {\n      label: '성별',\n      options: GenderOptions,\n    },\n];\n\n// 나이\nexport const AgeOptions = [\n    // value => 최대 나이\n    { value: [20, 22], label: '20세 ~ 22세', color: '#00B8D9', isFixed: true },\n    { value: [23, 26], label: '23세 ~ 26세', color: '#0052CC'},\n    { value: [27, 29], label: '27세 ~ 29세', color: '#0052CC'},\n    { value: [30, 40], label: '30세 이상', color: '#0052CC'},\n]\n\nexport const AgegroupedOptions = [\n    {\n      label: '나이',\n      options: AgeOptions,\n    },\n];\n\n// 취향\nexport const InterestOptions = [\n    { value: '맛집', label: '🍣 맛집 탐방하기', color: '#0052CC'},\n    { value: '넷플릭스', label: '🍿 넷플릭스 보기', color: '#0052CC'},\n    { value: '게임', label: '🎮 게임', color: '#00B8D9', isFixed: true },\n    { value: '독서', label: '📚 독서', color: '#00B8D9', isFixed: true },\n    { value: '헬스', label: '💪🏻 헬스', color: '#0052CC'},\n    { value: '개발', label:'💻 개발', color: '#00B8D9', isFixed: true },\n]\n\nexport const InterestgroupedOptions = [\n    {\n      label: '관심사',\n      options: InterestOptions,\n    },\n];","import React, { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom';\n\nconst Card = ({ id, profileImg, description, displayName, contents, heartCnt, tags }) => {\n    const [isHeartClicked, setHeartClicked] = useState(null);\n    const [heartStateCnt, setHeartCnt] = useState(heartCnt);\n\n    useEffect(() => {\n        if(isHeartClicked === true) \n            setHeartCnt(heartStateCnt + 1);\n        else if(isHeartClicked === false) \n            setHeartCnt(heartStateCnt - 1);\n        else \n            setHeartCnt(heartCnt)\n    }, [isHeartClicked]);\n\n    return (\n        <article className=\"my-2 mx-3 relative\">\n                {/* Profle */}\n                <div className=\"flex flex-row\">\n                    <Link to={`/profile/${id}`}>\n                        <img \n                            src={profileImg}\n                            alt={displayName}\n                            width={50}\n                            height={50}\n                            className=\"rounded-full object-cover m-0\"\n                        />\n                    </Link>\n                    <div className=\"mx-5\">\n                        {description.map((keyword, id) => (\n                            <span key={id} className=\"text-xs\"> {keyword} / </span>\n                        ))}\n                        <h1 className=\"text-lg font-bold\">{displayName}</h1>\n                    </div>\n                    <div className=\"absolute right-0\">\n                        {/* Heart */}\n                        <button onClick={() => setHeartClicked(!isHeartClicked)} className=\"px-2 py-2 focus:outline-none\">\n                            {isHeartClicked ? (\n                                <img \n                                    src=\"https://2donny.github.io/ykring//heart-red.png\"\n                                    height={18}\n                                    width={20}\n                                    alt=\"heart\"\n                                />\n                            ) : (\n                                <img \n                                    src=\"https://2donny.github.io/ykring/NavImage/heart-outline.svg\"\n                                    height={20}\n                                    width={20}\n                                    alt=\"heart-outline\"\n                                />\n                            )}\n                        </button>\n                        {/* Heart count */}\n                        <p className=\"text-center\">\n                            {heartCnt}\n                        </p>\n                    </div>\n\n                </div>\n                \n                {/* 글 내용 */}\n                <Link to={`/article/${id}`}>\n                    <h1 className=\" text-xs my-3\">{contents}</h1>\n                </Link>\n\n                {/* 태그 */}\n                <div className=\"border-b-2\">\n                    {tags.map((tag, id) => (\n                        <p key={id} className=\"px-3 inline-block mx-1 mb-3 text-xs text-2xs border-2 rounded-2xl text-gray-400\">{tag}</p>\n                    ))}\n                </div>\n\n        </article>\n    )\n}\n\nexport default Card;"],"sourceRoot":""}