{"version":3,"sources":["components/UI/backdrop.js","components/UI/modal.js","images/yk.png","pages/Intro.js","App.js","serviceWorker.js","index.js"],"names":["Backdrop","show","clicked","style","backgroundColor","className","onClick","Modal","children","visibility","borderRadius","position","zIndex","width","textAlign","border","boxShadow","padding","left","top","boxSizing","transition","transform","opacity","memoizedModal","React","memo","Intro","useState","isclicked","setClicked","useEffect","Aos","init","Fragment","src","alt","height","fontSize","color","to","console","log","backgroundImage","bgImg","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","data-aos","data-aos-duration","Person","lazy","People_circle","Globe","Love_me","MyProfile","Profile","CreateArticle","Article","App","fallback","path","component","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.102c9782.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Backdrop({ show, clicked }) {\n    return (\n        show ? ( \n            <div \n                style={{backgroundColor: 'rgba(0, 0, 0, .5'}}\n                className=\"w-full h-full z-30 fixed left-0 top-0\" \n                onClick={clicked}\n            /> \n        )\n        : null\n    )\n}\n\nexport default Backdrop;","import React from 'react';\nimport Backdrop from './backdrop';\nlet memoizedModal = null;\n\nconst Modal = ({ children, show, clicked }) => {\n    return (\n        <>\n            <Backdrop show={show} clicked={clicked}/>\n            <div \n                style={{\n                    visibility: show ? 'visible' :'hidden',\n                    borderRadius: '10px',\n                    position: \"fixed\",\n                    zIndex: 500,\n                    width: '440px',\n                    textAlign: 'center',\n                    border: '1px solid #ccc',\n                    boxShadow: '1px 1px 1px black',\n                    backgroundColor: 'white',\n                    padding: '36px',\n                    left: 'calc(50% - 220px)',\n                    top: '20%',\n                    boxSizing: 'border-box',\n                    transition: 'all .3s ease-out',\n                    transform: show ? 'scale(1)' : 'scale(0.5)',\n                    opacity: show ? '1' : '0'\n                }}\n                >\n                {children}\n            </div>\n        </>\n    )\n}\n\nexport default memoizedModal = React.memo(Modal);\n","export default __webpack_public_path__ + \"static/media/yk.252d2680.png\";","import React, {useState, useEffect} from 'react';\nimport bgImg from '../images/yk.png';\nimport Modal from '../components/UI/modal';\nimport { Link } from 'react-router-dom';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\n\nconst Intro = () => {\n  const [isclicked, setClicked] = useState(false);\n\n  useEffect(() => {\n    Aos.init();\n  }, []);\n  return (\n    <React.Fragment>\n      {/* Header */}\n      <header className=\"absolute w-full flex flex-row justify-between items-center px-10 py-7\">\n          <h1 className=\"text-3xl font-bold text-white\">연고링</h1>\n          <nav>\n              <ul className=\"flex flex-row items-center \">\n                  <li className=\"text-xl font-bold mx-5 text-white\">사용법</li>\n                  <li className=\"text-xl font-bold mx-3 text-white\">\n                    <button onClick={() => setClicked(true)} className=\"font-sans text-white px-5 py-2 rounded-xl bg-transparent-600 font-bold border-2 hover:bg-white hover:text-black focus:outline-none\">로그인</button>\n                  </li>\n              </ul>\n          </nav>\n      </header>\n\n      {/* main */}\n      <main>\n        <section className=\"h-screen\">\n\n          {/* 모달 */}\n          <Modal show={isclicked} clicked={() => setClicked(false)}>\n            <div className=\"my-5 text-2xl font-bold\">\n              <img \n                src=\"https://2donny.github.io/ykring/yk-logo.png\"\n                alt=\"yk-logo\"\n                width={50}\n                height={50}\n                className=\"mb-5 rounded-full text-center mx-auto\"\n              />\n              <i>계정 만들기\u001e</i>\n            </div>\n            <div>\n              <span style={{ fontSize: '14px', color: '#5c5c5c'}}>'로그인'을(를) 함으로써 연고링 이용약관에 동의합니다.<br /> 연고링은 학교 인증 기반 웹 어플리케이션으로서 인증하기 위해서는 학교 메일을 통하여 인증해야합니다.</span>\n            </div>\n            <div>\n              <Link to=\"/person\">\n                <button onClick={() => console.log('clicked')} className=\"font-sans w-full border-2 rounded-3xl px-5 py-3 mt-10 hover:text-white hover:bg-black focus:outline-none\">학교 이메일로 인증하기</button>\n              </Link>\n            </div>\n          </Modal>\n\n          {/* 메인 글귀 */}\n          <article \n            style={{\n              backgroundImage: `url(${bgImg})`,\n              width: \"100%\",\n              height: \"100%\",\n              backgroundSize: \"cover\",\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',  \n              backgroundAttachment: 'fixed',\n            }}\n          >\n            <div className=\"flex flex-col items-center w-full h-full\" style={{backgroundColor: 'rgba(0, 0, 0, 0.4)'}}>\n              <div data-aos=\"fade-up\" data-aos-duration=\"2500\" className=\"text-center\">\n                <h1 \n                  className=\"w-full pt-56 text-5xl md:text-7xl lg:text-7xl font-bold text-white text-center leading-normal md:leading-normal lg:leading-normal\"\n                >\n                  가슴뛰는 대학생활 <br /> 연고링과 함께\n                </h1>\n                <p className=\"text-white text-xs\">서울대 고려대 연세대 성균관대 서강대 한양대 대상 <br/> 시범 서비스 진행</p>\n                <button \n                  onClick={() => setClicked(true)} \n                  className=\"font-sans text-white w-48 h-16 mt-10 rounded-3xl bg-transparent-600 border-2 hover:bg-white hover:text-black focus:outline-none\"\n                > \n                  계정 만들기\n                </button>\n              </div>\n            </div>\n          </article>\n\n          {/* Banner */}\n          {/* <div className=\"flex flex-row justify-center items-center absolute bottom-0 w-full h-32 bg-gray-400\">\n            <p className=\"text-white text-xl font-bold\"> 인스타에 홍보하고 기프티콘 받기</p>\n          </div> */}\n\n        </section>\n      </main>\n\n      {/* footer */}\n      {/* <footer>\n        <div className=\"w-full h-56\">\n          <h1>동기부여</h1>\n          \n        </div>\n      </footer> */}\n    </React.Fragment>\n  );\n}\n\nexport default Intro;\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Intro from './pages/Intro';\n\nconst Person = React.lazy(() => import('./pages/Person'));\nconst People_circle = React.lazy(() => import('./pages/People-circle'));\nconst Globe = React.lazy(() => import('./pages/Globe'));\nconst Love_me = React.lazy(() => import('./pages/Love-me'));\nconst MyProfile = React.lazy(() => import('./pages/MyProfile'));\nconst Profile = React.lazy(() => import('./pages/Profile'));\nconst CreateArticle = React.lazy(() => import('./pages/CreateArticle'));\nconst Article = React.lazy(() => import('./pages/Article'));\n\nconst App = () => {\n  return (\n    <div>\n      <Suspense fallback={<p> Loading...</p>}>\n        <Switch>\n            <Route path=\"/person\" component={Person} exact/>\n            <Route path=\"/create-article\" component={CreateArticle}/>\n            <Route path=\"/profile/:id\" component={Profile}/>\n            <Route path=\"/article/:cnt\" component={Article}/> \n            \n            <Route path=\"/people-circle\" component={People_circle}/>\n\n            <Route path=\"/globe\" component={Globe} />\n\n            <Route path=\"/love-me\" component={Love_me}/>\n\n            <Route path=\"/my-profile\" component={MyProfile}/>\n\n            <Route path=\"/\" component={Intro}/>\n        </Switch>\n      </Suspense>\n    </div>\n  )  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/main.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n\n// serviceWorker.register();"],"sourceRoot":""}