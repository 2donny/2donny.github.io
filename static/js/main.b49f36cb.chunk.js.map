{"version":3,"sources":["components/footer_nav.js","components/layout.js","components/banner.js","pages/Start.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Footer_nav","footerNone","style","borderTop","padding","backgroundColor","className","to","src","window","location","pathname","width","height","Layout","children","headerNone","id","Banner","alt","Start","useState","isLoading","setIsLoading","useEffect","setTimeout","marginBottom","wordBreak","onClick","console","log","Secure","React","lazy","Login","Univ","SettingCotainer","App","fallback","path","component","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"wHAgDeA,EA7CI,SAAC,GAChB,OADmC,EAAjBC,YAEC,yBACXC,MAAO,CAAEC,UAAW,iBAAkBC,QAAS,cAAeC,gBAAiB,WAC/EC,UAAU,yDAFC,UAIX,cAAC,IAAD,CAASC,GAAG,UAAZ,SACI,qBACIC,IAAkC,WAA5BC,OAAOC,SAASC,SAAyB,0DAA4D,kEAC3GC,MAAO,GACPC,OAAQ,OAGhB,cAAC,IAAD,CAASN,GAAG,iBAAZ,SACI,qBACIC,IAAkC,kBAA5BC,OAAOC,SAASC,SAAgC,6DAA+D,qEACrHC,MAAO,GACPC,OAAQ,OAGhB,cAAC,IAAD,CAASN,GAAG,SAAZ,SACI,qBACIC,IAAkC,UAA5BC,OAAOC,SAASC,SAAwB,qDAAuD,6DACrGC,MAAO,GACPC,OAAQ,OAGhB,cAAC,IAAD,CAASN,GAAG,UAAZ,SACI,qBACIC,IAAkC,YAA5BC,OAAOC,SAASC,SAA0B,qDAAuD,6DACvGC,MAAO,GACPC,OAAQ,OAGhB,cAAC,IAAD,CAASN,GAAG,cAAZ,SACI,qBACIC,IAAkC,eAA5BC,OAAOC,SAASC,SAA6B,uDAAyD,+DAC5GC,MAAO,GACPC,OAAQ,W,QCKbC,IAzCA,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,WAAYf,EAAiB,EAAjBA,WACpC,OACI,sBACIgB,GAAG,SACHX,UAAU,2CAFd,UAIMU,EAqBE,KApBA,qCACI,sBAAKV,UAAU,0CAAf,UACI,cAAC,IAAD,CAAMC,GAAG,UAAT,SACI,qBACIL,MAAO,CAACU,MAAO,GAAIC,OAAQ,IAC3BL,IAAI,8CACJF,UAAU,mBAGlB,sBAAKA,UAAU,6BAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,oBAAID,UAAU,qCAAd,wCAEJ,oBAAIA,UAAU,mEAAd,4CAIR,cAAC,IAAD,OAOR,sBAAMA,UAAU,sBAAhB,SACKS,IAIL,cAAC,EAAD,CAAYd,WAAYA,S,gCCzCpC,gBAqBeiB,IAnBA,WACX,OACI,kCACI,sBAAKhB,MAAO,CAACG,gBAAiB,UAAWQ,OAAQ,QAASP,UAAU,8DAApE,UACI,gCACI,oBAAIA,UAAU,+BAAd,4GACA,mBAAGA,UAAU,wBAAb,qFAEJ,qBACIE,IAAI,iBACJW,IAAI,SACJP,MAAO,GACPC,OAAQ,Y,sIC+CbO,EAzDD,WAAO,IAAD,EACkBC,oBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,KAQhB,OALAC,qBAAU,WACNC,YAAW,WACPF,GAAa,KACd,OACJ,IAEC,qBAAKjB,UAAU,SAAf,SACI,cAAC,IAAD,CAAQU,YAAU,EAACf,YAAY,EAA/B,SAGKqB,EACG,sBAAKhB,UAAU,4DAAf,UACI,qBACIJ,MAAO,CAACW,OAAQ,QAASD,MAAO,QAASc,aAAc,QACvDlB,IAAI,uCACJW,IAAI,UACJb,UAAU,wBAEd,0EAGJ,sBAAKA,UAAU,2EAAf,UACI,yBAASA,UAAU,mCAAnB,SACI,qBACIJ,MAAO,CAACW,OAAQ,OAAQD,MAAO,QAC/BJ,IAAI,uCACJW,IAAI,UACJb,UAAU,0BAIlB,yBAASA,UAAU,0CAAnB,SACI,qBAAKJ,MAAO,CAACG,gBAAiB,OAAQQ,OAAQ,QAASD,MAAO,aAGlE,0BAASN,UAAU,oBAAnB,UACI,oBAAIJ,MAAO,CAACyB,UAAW,YAAarB,UAAU,2BAA9C,sFACA,kJAA0B,uBAA1B,qGACA,yBAGJ,yBAASJ,MAAO,CAACW,OAAQ,MAAOT,QAAS,UAAzC,SACI,cAAC,IAAD,CAAMG,GAAG,UAAT,SACI,wBAAQqB,QAAS,kBAAMC,QAAQC,IAAI,YAAYxB,UAAU,8HAAzD,6GC7C1ByB,EAASC,IAAMC,MAAK,kBAAM,kCAC1BC,EAAQF,IAAMC,MAAK,kBAAM,8DACzBE,EAAOH,IAAMC,MAAK,kBAAM,uDACxBG,EAAkBJ,IAAMC,MAAK,kBAAM,qEAoB1BI,EAhBH,WACV,OACE,8BACE,cAAC,WAAD,CAAUC,SAAU,qBAAKhC,UAAU,qDAAf,SAAqE,qBAAKJ,MAAO,CAACU,MAAO,QAASC,OAAQ,SAAUL,IAAI,mBAA5I,SACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+B,KAAK,wBAAwBC,UAAWJ,IAC/C,cAAC,IAAD,CAAOG,KAAK,QAAQC,UAAWL,IAC/B,cAAC,IAAD,CAAOI,KAAK,SAASC,UAAWN,IAChC,cAAC,IAAD,CAAOK,KAAK,UAAUC,UAAWT,IACjC,cAAC,IAAD,CAAOQ,KAAK,IAAIC,UAAWpB,EAAOqB,OAAK,YCT7CC,G,YAAcC,QACa,cAA7BlC,OAAOC,SAASkC,UAEe,UAA7BnC,OAAOC,SAASkC,UAEhBnC,OAAOC,SAASkC,SAASC,MAAM,4DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1B9B,QAAQC,IACN,+GAKEkB,GAAUA,EAAOY,UACnBZ,EAAOY,SAASP,KAMlBxB,QAAQC,IAAI,sCAGRkB,GAAUA,EAAOa,WACnBb,EAAOa,UAAUR,WAO5BS,OAAM,SAACC,GACNlC,QAAQkC,MAAM,4CAA6CA,MCtFnEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SDMjB,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwB7D,OAAOC,SAAS6D,MACpDC,SAAW/D,OAAOC,SAAS8D,OAIvC,OAGF/D,OAAOgE,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMuB,GAAN,sBAEP5B,IAgEV,SAAiCK,EAAOC,GAEtC0B,MAAM3B,EAAO,CACX4B,QAAS,CAAE,iBAAkB,YAE5BvB,MAAK,SAACwB,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,MAAK,SAACC,GAClCA,EAAa6B,aAAa9B,MAAK,WAC7B3C,OAAOC,SAASyE,eAKpBrC,EAAgBC,EAAOC,MAG1Bc,OAAM,WACLjC,QAAQC,IAAI,oEAtFVsD,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,MAAK,WACjCvB,QAAQC,IACN,+GAMJgB,EAAgBC,EAAOC,OC/BjCqC,K","file":"static/js/main.b49f36cb.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Footer_nav = ({ footerNone }) => {\n    return (\n        !footerNone && <footer\n            style={{ borderTop: '1px solid #ccc', padding: '15px 0 30px', backgroundColor: '#fefefe' }}\n            className=\"flex flex-row w-full justify-evenly absolute bottom-0 \"\n        >\n            <NavLink to=\"/person\">\n                <img \n                    src={(window.location.pathname == \"/person\") ? \"https://2donny.github.io/ykring/NavImage/person-add.svg\" : \"https://2donny.github.io/ykring/NavImage/person-add-outline.svg\"}\n                    width={30}\n                    height={30}\n                />\n            </NavLink>\n            <NavLink to=\"/people-circle\">\n                <img \n                    src={(window.location.pathname == \"/people-circle\") ? \"https://2donny.github.io/ykring/NavImage/people-circle.svg\" : \"https://2donny.github.io/ykring/NavImage/people-circle-outline.svg\"}\n                    width={30}\n                    height={30}\n                />\n            </NavLink>\n            <NavLink to=\"/globe\">\n                <img \n                    src={(window.location.pathname == \"/globe\") ? \"https://2donny.github.io/ykring/NavImage/globe.svg\" : \"https://2donny.github.io/ykring/NavImage/globe-outline.svg\"}\n                    width={30}\n                    height={30}\n                />\n            </NavLink>\n            <NavLink to=\"love-me\">\n                <img \n                    src={(window.location.pathname == \"/love-me\") ? \"https://2donny.github.io/ykring/NavImage/heart.svg\" : \"https://2donny.github.io/ykring/NavImage/heart-outline.svg\"}\n                    width={30}\n                    height={30}\n                />\n            </NavLink>\n            <NavLink to=\"/my-profile\">\n                <img \n                    src={(window.location.pathname == \"/my-profile\") ? \"https://2donny.github.io/ykring/NavImage/profile.svg\" : \"https://2donny.github.io/ykring/NavImage/profile-outline.svg\"}\n                    width={30}\n                    height={30}\n                />\n            </NavLink>\n        </footer>\n    )\n}\n\nexport default Footer_nav;","import React from 'react'\nimport Footer_nav from './footer_nav';\nimport Banner from './banner';\nimport { Link } from 'react-router-dom';\n\nconst Layout = ({ children, headerNone, footerNone }) => {\n    return (\n        <div \n            id=\"layout\"\n            className=\"flex flex-col mx-auto bg-white md:w-full\"\n        >\n            {!headerNone ? (\n                <>\n                    <nav className=\"flex flex-row justify-between px-3 py-2\">\n                        <Link to=\"/friend\">\n                            <img\n                                style={{width: 40, height: 40}}\n                                src=\"https://2donny.github.io/ykring/yk-logo.png\"\n                                className=\" rounded-2xl\"\n                            />\n                        </Link>\n                        <div className=\"flex flex-row items-center\">\n                            <Link to=\"/\">\n                                <h1 className=\"mx-2 font-bold hover:text-blue-400\">돌아가기</h1>\n                            </Link>\n                            <h1 className=\"mx-2 cursor-pointer font-bold hover:text-red-600 hover:font-bold\">신고하기</h1>\n                        </div>\n                    </nav>\n                    {/* Banner */}\n                    <Banner />\n                </>\n            ) : (\n                null\n            )}\n\n            {/*  main custom  */}\n            <main className=\"h-full min-h-screen\">\n                {children}\n            </main>\n\n            {/* footer */}\n            <Footer_nav footerNone={footerNone}/>\n        </div>\n    )\n}\n\nexport default Layout;","import React from 'react';\n\nconst Banner = () => {\n    return (\n        <section >\n            <div style={{backgroundColor: \"#F3F3F3\", height: \"60px\"}} className=\"flex flex-row items-center rounded-xl justify-evenly w-full\">\n                <div>\n                    <h1 className=\"text-base font-bold m-0 py-1\">[연고링 이벤트\u001d] 놓치면 후회합니다.</h1>\n                    <p className=\"text-sm text-gray-400\">팔로우하고 친구추가하면~</p>\n                </div>\n                <img \n                    src=\"/bannerImg.png\"\n                    alt=\"banner\"\n                    width={80}\n                    height={80}\n                />\n            </div>\n        </section>\n    )\n}\n\nexport default Banner;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../components/layout';\n\nconst Start = () => {\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setIsLoading(false);\n        }, 100);\n    }, []);\n    return (\n        <div className=\"w-full\">\n            <Layout headerNone footerNone={true}>\n                \n                {/* main */}\n                {isLoading ? (\n                    <div className=\"w-full h-screen flex flex-col justify-center items-center\">\n                        <img \n                            style={{height: '150px', width: '150px', marginBottom: '10px'}}\n                            src=\"https://2donny.github.io/yk-logo.png\"\n                            alt=\"yk-logo\"\n                            className=\"rounded-2xl mx-auto\"\n                        />\n                        <p>로딩중입니다..</p>\n                    </div>\n                ) : (\n                    <div className=\"h-screen pb-20 flex flex-col items-center justify-center overflow-hidden\">\n                        <section className=\"mt-5 flex flex-row items-center \">\n                            <img \n                                style={{height: '70px', width: '70px'}}\n                                src=\"https://2donny.github.io/yk-logo.png\"\n                                alt=\"yk-logo\"\n                                className=\"rounded-2xl mx-auto\"\n                            />\n                        </section>\n\n                        <section className=\"flex flex-row justify-center px-16 my-5\">\n                            <div style={{backgroundColor: '#ccc', height: '200px', width: '250px'}}></div>\n                        </section>\n\n                        <section className=\"text-center px-10\">\n                            <h1 style={{wordBreak: \"keep-all\"}} className=\"mb-3 font-light text-4xl\">대학생들의 네트워킹 공간\u001d</h1>\n                            <p>연고링은 대학생들의 네트워킹 공간이예요. <br /> 새로운 대학생 친구들을 사귀어봐요!</p>\n                            <p></p>\n                        </section>\n\n                        <section style={{height: '10%', padding: '0 10px'}}>\n                            <Link to=\"/secure\">\n                                <button onClick={() => console.log('clicked')} className=\"font-sans w-full border-2 rounded-2xl px-5 py-3 mt-5 bg-black text-white hover:text-black hover:bg-white focus:outline-none\">'나'에 대해서 질문하고 시작하기</button>\n                            </Link>\n                        </section>\n                    </div>\n                )}\n                \n            </Layout>\n        </div>\n    )\n}\n\nexport default Start;","import React, { Suspense } from 'react';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\n// import Intro from './pages/Intro';\nimport Start from './pages/Start';\n\nconst Secure = React.lazy(() => import('./pages/Secure'));\nconst Login = React.lazy(() => import('./pages/Login'));\nconst Univ = React.lazy(() => import('./pages/SettingPages/Univ'));\nconst SettingCotainer = React.lazy(() => import('./pages/SettingPages/SettingContainer'));\n\n\n\nconst App = () => {\n  return (\n    <div>\n      <Suspense fallback={<div className=\"h-screen flex flex-row justify-center items-center\" ><img style={{width: \"200px\", height: \"200px\"}} src=\"/yk-logo.png\" /></div>}>\n        <Switch>\n            <Route path=\"/setting/:questionNum\" component={SettingCotainer}/>\n            <Route path=\"/univ\" component={Univ}/>\n            <Route path=\"/login\" component={Login}/>\n            <Route path=\"/secure\" component={Secure}/>\n            <Route path=\"/\" component={Start} exact/> \n        </Switch>\n      </Suspense>\n    </div>\n  )  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/main.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}