{"version":3,"sources":["pages/HomePages/MyProfile.js","axios-instance.js","store/actions/Auth.js","store/actions/User.js"],"names":["MyProfile","useState","isActivity","setIsActivity","useSelector","store","user","age","gender","job","adj","location","articleImgSrc","displayName","introText","profileImgSrc","dispatch","useDispatch","updateProfile","useCallback","event","preventDefault","reader","FileReader","onload","actions","target","result","__file","files","readAsDataURL","className","invitement","footerNone","style","height","width","marginRight","borderRadius","backgroundColor","src","margin","alt","fontSize","color","padding","marginLeft","marginTop","htmlFor","position","right","cursor","onChange","e","type","name","id","accept","visibility","borderBottom","onClick","fontWeight","minHeight","Axios","axios","create","baseURL","withCredentials","AxiosForCORS","headers","authFail","actionTypes","auth","email","univKor","authData","post","then","res","console","log","isSuccess","data","success","univ","authSuccess","catch","err","alert","authConfirmFail","authConfirmInit","authConfirm","addAge","addGender","addJob","addAdj","addLocation","addArticleImgSrc","addArticleText","articleText","addInterest","interestArr","displayNameFail","displayNameInit","displayNameSuccess","addIntroText","addProfileImgSrc","ProfileImgSrc","addInstagramId","instagramId","submitToServerFail","submitToServer","genderInRedux","ageInRedux","jobInRedux","adjInRedux","locationInRedux","articleImgSrcInRedux","articleTextInRedux","displayNameInRedux","interestArrInRedux","introTextInRedux","profileImgSrcInRedux","instagramIdInRedux","userData","updateProfileImgToServer","updatedProfileImg","updateProfileImg"],"mappings":"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","file":"static/js/6.7beb713a.chunk.js","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Layout from '../../components/layout';\nimport * as actions from '../../store/actions/index';\n\nconst MyProfile = () => {\n    const [isActivity, setIsActivity] = useState(true);\n\n    const {age, gender, job, adj, location, articleImgSrc, displayName, introText, profileImgSrc} = useSelector(store => store.user);\n    const dispatch = useDispatch();\n    const updateProfile = useCallback((event) => {\n        event.preventDefault();\n        const reader = new FileReader();\n        reader.onload = event => { \n            dispatch(actions.updateProfileImgToServer(event.target.result))\n        };\n        const files = event.target.files;\n        const __file = files[0];\n\n        reader.readAsDataURL(__file);\n    }, []);\n\n    return (\n        <div className=\"w-full\">\n            <Layout invitement footerNone>\n\n                {/* Profile Container */}\n                <section style={{height: '310px'}} className=\"px-3 py-3 mx-3\">\n                    {/* 프로필 사진, 게시물, 친구 수 */}\n                    <div className=\"flex flex-row items-center justify-between\">\n                        <img \n                            style={{width: 80, height: 80, marginRight: 30, borderRadius: 100, backgroundColor: 'gray'}}\n                            src={profileImgSrc}\n                        />\n                        <div className=\"text-center mx-2\">\n                            <h3 style={{margin: 5}}>1</h3>\n                            <p className=\"text-sm\">게시물\u001c</p>\n                        </div>\n                        <div className=\"text-center mx-2\">\n                            <h3 style={{margin: 5}}>0</h3>\n                            <p className=\"text-sm\">친구</p>\n                        </div>\n                        <div className=\"text-center mx-2\">\n                            <img\n                                style={{width: 23, height: 23, margin: 5}} \n                                src=\"heart-red.png\"\n                                alt=\"heart\"\n                            />\n                            <p className=\"text-sm\">180</p>\n                        </div>\n                    </div>\n\n                    {/* 3개 자기소개 */}\n                    <div className=\"mt-5 mb-2\">\n                        <h3 className=\"my-1 text-lg\">{adj} {job}<span className=\"text-lg mx-1 font-light\">{displayName}</span></h3>\n                        <div className=\"flex flex-row\">\n                            <div style={{height: 25, backgroundColor: '#CCF6FF', margin: '0 5px 0 0'}}><p style={{fontSize: '8px', color: '#8D8D8D', padding: '7px'}}>{gender}</p></div>\n                            <div style={{height: 25, backgroundColor: '#EEEEEE', margin: '0 5px'}}><p style={{fontSize: '8px', color: '#8D8D8D', padding: '7px'}}>{location}</p></div>\n                            <div style={{height: 25, backgroundColor: '#EEEEEE', margin: '0 5px'}}><p style={{fontSize: '8px', color: '#8D8D8D', padding: '7px'}}>{age}</p></div>\n                        </div>\n                    </div>\n                    <p className=\"text-sm\">{introText}</p>\n\n                    {/* 학교, 직장 */}\n                    <ul className=\"mb-2\">\n                        <li className=\"flex flex-row text-sm text-gray-500\">\n                            <img \n                                style={{width: 15, height: 15}}\n                                src=\"/school.svg\"\n                                alt=\"univ\"\n                            />\n                            <p className=\" font-extrabold mx-2\">고려대</p><span>재학중</span>\n                        </li>\n                        <li className=\"flex flex-row text-sm text-gray-500\">\n                            <img \n                                style={{width: 15, height: 15}}\n                                src=\"/bag-remove.svg\"\n                                alt=\"univ\"\n                            />\n                            <p className=\"font-extrabold mx-2\">연고링</p><span>재직중</span>\n                        </li>\n                        <li className=\"flex flex-row text-sm text-gray-500\">\n                            <img \n                                style={{width: 10, height: 10, marginLeft: 2, marginTop: 3}}\n                                src=\"/ellipsis-horizontal-outline.svg\"\n                                alt=\"더보기\"\n                            />\n                            <p className=\"font-extrabold mx-2\"></p><span>더보기</span>\n                        </li>\n                        <div className=\"w-full text-right relative\">\n                            <label htmlFor=\"file\" className=\"inline-block\" style={{position: 'absolute', right: 0, backgroundColor: \"#FF6600\", padding: '6px 25px', borderRadius: 4, color: 'white', cursor: 'pointer'}}>\n                                프로필 변경\n                            </label>\n                            <input \n                                onChange={(e) => updateProfile(e)}\n                                type=\"file\" name=\"file\" id=\"file\" accept=\"impage/*\" \n                                style={{visibility: 'hidden', width: 0}}\n                            />\n                        </div>\n                    </ul>\n                </section>\n\n                {/* Album nav */}\n                <section style={{height: '100%', borderBottom: '1px solid #ccc'}} className=\"pb-3\">\n                    <ul className=\"w-full flex flex-row justify-around\">\n                        <li onClick={() => setIsActivity(true)} style={{fontWeight: isActivity ? 'bold': null}} className=\"cursor-pointer\">내 활동</li>\n                        <li onClick={() => setIsActivity(false)} style={{fontWeight: isActivity ? null: 'bold'}} className=\"cursor-pointer\">INTEREST</li>\n                        <li className=\"font-bold px-5\"></li>\n                    </ul>\n                </section>\n\n                <section style={{minHeight: '300px'}} className=\"flex flex-col justify-center items-center\">\n                    {articleImgSrc ? (\n                        <>\n                            <div style={{minHeight: 300}} className=\"grid grid-cols-3 grid-rows-3 w-full\">\n                                {isActivity ? (\n                                    <div>\n                                        <img \n                                            className=\"bg-black\"\n                                            src={articleImgSrc}\n                                            alt=\"article-image\"\n                                        />\n                                    </div>\n                                ) : (\n                                    null\n                                )}\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <img \n                                src=\"/add-circle-outline.svg\"\n                                alt=\"add-circle\"\n                                style={{width: 150, height: 150}}\n                            />\n                            <p className=\"px-5 \">정식 서비스는 20일날 시작합니다. 일기장처럼 사용해보세요 :) </p>\n                        </>\n                    )}\n                </section>\n                \n            </Layout>\n        </div>\n    )\n}\n\nexport default MyProfile;","import axios from 'axios';\n\nexport const Axios = axios.create({\n    baseURL: 'https://ykring.herokuapp.com',\n    withCredentials: false,\n})\n\nexport const AxiosForCORS = axios.create({\n    baseURL: 'https://ykring.herokuapp.com',\n    headers:{\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Accept': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n    }  \n})\n\n","import * as actionTypes from './actionTypes';\nimport { Axios } from '../../axios-instance';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    }\n}\n\nexport const authSuccess = (email, univKor) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        email: email,\n        univ: univKor\n    }\n}\n\nexport const authFail = () => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n    }\n}\n\nexport const errorInit = () => {\n    return {\n        type: actionTypes.ERROR_INIT\n    }\n}\n\nexport const auth = (email, univKor) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email\n        };\n        Axios.post('/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess)\n                    dispatch(authSuccess(email, univKor));\n                else\n                    dispatch(authFail());\n            })\n            .catch(err => {\n                console.log(err);\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n                dispatch(authFail(err));\n            })\n    }\n}\n\n// auth Confirm\nexport const authConfirmStart = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_START,\n    }\n}\nexport const authConfirmFail = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_FAIL,\n    }\n}\nexport const authConfirmSuccess = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_SUCCESS,\n    }\n}\nexport const authConfirmInit = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_INIT,\n    }\n}\n\nexport const authConfirm = (email) => {\n    return dispatch => {\n        dispatch(authConfirmStart());\n        const authData = {\n            email: email\n        };\n        Axios.post('/check/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(authConfirmSuccess());\n                    dispatch(authConfirmInit());\n                }\n                else {\n                    dispatch(authConfirmFail());\n                    dispatch(authConfirmInit());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(authConfirmFail());\n                dispatch(authConfirmInit());\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n            })\n    }\n}\n\n","import * as actionTypes from './actionTypes';\nimport { Axios, AxiosForCORS } from '../../axios-instance';\n\nexport const addAge = (age) => {\n    return {\n        type: actionTypes.ADD_AGE,\n        age,\n    }\n}\nexport const addGender = (gender) => {\n    return {\n        type: actionTypes.ADD_GENDER,\n        gender,\n    }\n}\n\nexport const addJob = (job) => {\n    return {\n        type: actionTypes.ADD_JOB,\n        job,\n    }\n}\n\nexport const addAdj = (adj) => {\n    return {\n        type: actionTypes.ADD_ADJ,\n        adj,\n    }\n}\n\nexport const addLocation = (location) => {\n    return {\n        type: actionTypes.ADD_LOCATION,\n        location,\n    }\n}\nexport const addArticleImgSrc = (articleImgSrc) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_IMGSRC,\n        articleImgSrc,\n    }\n}\n\nexport const addArticleText = (articleText) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_TEXT,\n        articleText,\n    }\n}\n\nexport const addInterest = (interestArr) => {\n    return {\n        type: actionTypes.ADD_INTEREST,\n        interestArr,\n    }\n}\n\n\n// displayName check\n\nexport const displayNameStart = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_START,\n    }\n}\nexport const displayNameSuccess = (displayName) => {\n    return {\n        type: actionTypes.DISPLAYNAME_SUCCESS,\n        displayName,\n    }\n}\nexport const displayNameFail = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_FAIL,\n    }\n}\nexport const displayNameInit = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_INIT,\n    }\n}\n\nexport const displayName = (displayName) => {\n    return dispatch => {\n        dispatch(displayNameStart());\n\n        const data = {\n            displayName\n        }\n        Axios.post('/check/name', data)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess){ \n                    dispatch(displayNameSuccess(displayName));\n                }else {\n                    dispatch(displayNameFail());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(displayNameFail());\n            })\n    }\n}\n\n// -----\n\nexport const addIntroText = (introText) => {\n    return {\n        type: actionTypes.ADD_INTRO_TEXT,\n        introText,\n    }\n}\nexport const addProfileImgSrc = (ProfileImgSrc) => {\n    console.log(ProfileImgSrc)\n    return {\n        type: actionTypes.ADD_PROFILE_IMG_SRC,\n        ProfileImgSrc\n    }\n}\n\nexport const addInstagramId = (instagramId) => {\n    return {\n        type: actionTypes.ADD_INSTA_ID,\n        instagramId\n    }\n}\n\n\n// SubmitToServer\nexport const submitToServerStart = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_START,\n    }\n}\n\nexport const submitToServerSuccess = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_SUCCESS,\n    }\n}\nexport const submitToServerFail = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_FAIL,\n    }\n}\n\nexport const submitToServer = (genderInRedux, ageInRedux, jobInRedux, adjInRedux, locationInRedux, articleImgSrcInRedux, articleTextInRedux, displayNameInRedux, interestArrInRedux, introTextInRedux, profileImgSrcInRedux, instagramIdInRedux) => {\n    return dispatch => {\n        dispatch(submitToServerStart());\n        const userData = {\n            genderInRedux, \n            ageInRedux, \n            jobInRedux, \n            adjInRedux, \n            locationInRedux, \n            articleImgSrcInRedux, \n            articleTextInRedux, \n            displayNameInRedux, \n            interestArrInRedux, \n            introTextInRedux, \n            profileImgSrcInRedux, \n            instagramIdInRedux\n        };\n        console.log(ageInRedux);\n        AxiosForCORS.post('/pre/user', userData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess)\n                    dispatch(submitToServerSuccess());\n                else\n                    dispatch(submitToServerFail());\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(submitToServerFail());\n            })\n    }\n}\n\n\nexport const updateProfileImg = (updatedProfileImg) => {\n    return {\n        type: actionTypes.UPDATE_PROFILE_IMG,\n        updatedProfileImg,\n    }\n}\n\nexport const updateProfileImgToServer = (updatedProfileImg) => {\n    return dispatch => {\n        dispatch(updateProfileImg(updatedProfileImg));\n        // 서버에 보내기\n    }\n}\n"],"sourceRoot":""}