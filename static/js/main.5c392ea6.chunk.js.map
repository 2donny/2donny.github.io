{"version":3,"sources":["components/footer_nav.js","components/layout.js","components/banner.js","components/KakaoShareButton.js","store/actions/actionTypes.js","axios-instance.js","store/actions/Auth.js","store/actions/User.js","components/UI/backdrop.js","components/UI/modal.js","images/yk.png","pages/Intro.js","App.js","serviceWorkerRegistration.js","store/reducers/Auth.js","store/reducers/User.js","index.js"],"names":["Footer_nav","footerNone","style","borderTop","padding","backgroundColor","className","to","src","window","location","pathname","width","height","Layout","children","isIntro","invitement","num","headerNone","useState","headerColor","setHeaderColor","useEffect","addEventListener","handleScroll","shareBtnClicked","useCallback","createKakaoButton","screenHeight","innerHeight","scrollY","id","alt","margin","position","right","bottom","cursor","onClick","scrollTo","left","border","borderRadius","zIndex","overflow","color","Banner","btnId","kakao","Kakao","isInitialized","init","process","Link","createDefaultButton","container","objectType","content","title","description","imageUrl","link","mobileWebUrl","webUrl","social","likeCount","commentCount","sharedCount","buttons","KakaoShareButton","display","objectFit","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","ERROR_INIT","ADD_AGE","ADD_GENDER","ADD_JOB","ADD_ADJ","ADD_LOCATION","ADD_ARTICLE_IMGSRC","ADD_ARTICLE_TEXT","DISPLAYNAME_START","DISPLAYNAME_SUCCESS","DISPLAYNAME_FAIL","ADD_INTEREST","ADD_INTRO_TEXT","ADD_PROFILE_IMG_SRC","ADD_INSTA_ID","SUBMIT_TO_SERVER_START","SUBMIT_TO_SERVER_FAIL","SUBMIT_TO_SERVER_SUCCESS","UPDATE_PROFILE_IMG","Axios","axios","create","baseURL","auth","payload","email","univKor","dispatch","univ","type","actionTypes","authData","post","then","res","console","log","authSuccess","catch","err","error","alert","addAge","age","addGender","gender","addJob","job","addAdj","adj","addLocation","addArticleImgSrc","articleImgSrc","addArticleText","articleText","addInterest","interestArr","displayName","displayNameSuccess","addIntroText","introText","addProfileImgSrc","ProfileImgSrc","addInstagramId","instagramId","submitToServer","genderInRedux","ageInRedux","jobInRedux","adjInRedux","locationInRedux","articleImgSrcInRedux","articleTextInRedux","interestArrInRedux","introTextInRedux","profileImgSrcInRedux","instagramIdInRedux","userData","updateProfileImgToServer","updatedProfileImg","updateProfileImg","Backdrop","show","clicked","Modal","visibility","textAlign","boxShadow","top","boxSizing","transition","transform","opacity","memoizedModal","React","memo","Intro","history","Aos","autoPlay","loop","muted","playsInline","controls","typeof","data-aos","data-aos-duration","fontSize","push","Start","lazy","Secure","Login","SettingCotainer","MyProfile","App","Fragment","fallback","path","component","exact","from","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","initialState","isEmailSent","loading","reducer","action","displayNameUI","profileImgSrc","composeEnhancers","compose","rootReducer","combineReducers","authReducer","user","userReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5c392ea6.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Footer_nav = ({ footerNone }) => {\n    return (\n        !footerNone && <nav\n            style={{ borderTop: '1px solid #ccc', padding: '15px 0 30px', backgroundColor: '#fefefe' }}\n            className=\"flex flex-row w-full justify-evenly absolute bottom-0 \"\n        >\n            <NavLink to=\"/person\">\n                <img \n                    src={(window.location.pathname == \"/person\") ? \"/NavImage/person-add.svg\" : \"/NavImage/person-add-outline.svg\"}\n                    width={30}\n                    height={30}\n                />\n            </NavLink>\n            <NavLink to=\"/people-circle\">\n                <img \n                    src={(window.location.pathname == \"/people-circle\") ? \"/NavImage/people-circle.svg\" : \"/NavImage/people-circle-outline.svg\"}\n                    width={30}\n                    height={30}\n                />\n            </NavLink>\n            <NavLink to=\"/globe\">\n                <img \n                    src={(window.location.pathname == \"/globe\") ? \"/NavImage/globe.svg\" : \"/NavImage/globe-outline.svg\"}\n                    width={30}\n                    height={30}\n                />\n            </NavLink>\n            <NavLink to=\"love-me\">\n                <img \n                    src={(window.location.pathname == \"/love-me\") ? \"/NavImage/heart.svg\" : \"/NavImage/heart-outline.svg\"}\n                    width={30}\n                    height={30}\n                />\n            </NavLink>\n            <NavLink to=\"/my-profile\">\n                <img \n                    src={(window.location.pathname == \"/my-profile\") ? \"/NavImage/profile.svg\" : \"/NavImage/profile-outline.svg\"}\n                    width={30}\n                    height={30}\n                />\n            </NavLink>\n        </nav>\n    )\n}\n\nexport default Footer_nav;","import React, { useCallback, useState, useEffect } from 'react'\nimport Footer_nav from './footer_nav';\nimport Banner from './banner';\nimport { Link } from 'react-router-dom';\nimport { createKakaoButton } from '../components/KakaoShareButton';\nimport Headroom from 'react-headroom';\n\nconst Layout = ({ children, isIntro, invitement, num, headerNone, footerNone }) => {\n    const [headerColor, setHeaderColor] = useState('black');\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll)\n    }, []);\n    const shareBtnClicked = useCallback(() => {\n        createKakaoButton('#kakao-link-btn-second');\n    }, []);\n\n    // Head room. scroll에 따라 색깔 변경\n    const handleScroll = useCallback(() => {\n        const screenHeight = window.innerHeight;\n        if(window.scrollY > screenHeight) {\n            setHeaderColor('white');\n        }else\n            setHeaderColor('black')\n    }, []);\n    \n    return (\n        <div id=\"layout\" className=\"flex flex-col mx-auto bg-white md:w-full\">\n            {!headerNone ? (\n                <>\n                    <nav className=\"flex flex-row justify-between px-3 py-2\">\n                        <Link to=\"/my-profile\">\n                            <img\n                                style={{width: 40, height: 40}}\n                                src=\"/yk-logo.png\"\n                                alt=\"yk-logo\"\n                                className=\" rounded-2xl\"\n                            />\n                        </Link>\n                        <div className=\"flex flex-row items-center\">\n                            <Link to=\"/my-profile\">\n                                <img \n                                    style={{width: 30, height: 30, margin: '0 10px'}}\n                                    src=\"/notifications-outline.svg\"\n                                    alt=\"notification\"\n                                />\n                            </Link>\n                            <Link to=\"/my-profile\">\n                                <img \n                                    style={{width: 30, height: 30, margin: '0 10px'}}\n                                    src=\"/Article/ellipsis-vertical-outline.svg\"\n                                    alt=\"notification\"\n                                />\n                            </Link>\n                            \n                        </div>\n                    </nav>\n                    {/* Banner */}\n                    <Banner />\n                </>\n            ) : null}\n\n            {num === '2' || num === '3' ? (\n                <aside>\n                    <img\n                        style={{width: '60px', height: '60px', position: 'fixed', right: 10, bottom: 10, cursor: 'pointer'}} \n                        onClick={() => window.scrollTo(0, 0)}\n                        src=\"/arrow-up-circle.svg\"\n                        alt=\"scroll-top\"\n                        />\n                </aside>\n            ) : null}\n\n            {invitement ? (\n                <aside style={{width: '100%', position: 'fixed', bottom: 30, left: 'calc(50% - 159px)'}}>\n                    <button onClick={() => shareBtnClicked()} id=\"kakao-link-btn-second\" className=\"focus:outline-none\" style={{padding: '10px 100px', border: '1px solid black', backgroundColor: '#eee', borderRadius: '10px'}}>연고링 초대장 보내기</button>\n                </aside>\n            ) : null}\n\n            {isIntro ? (\n                <header>\n                    <Headroom\n                        style={{zIndex: 50, overflow: 'hidden', backgroundColor: headerColor}}\n                    >\n                        <div className=\"flex flex-row items-center justify-between px-5 py-7\">\n                            <h3 style={{color: headerColor === 'black' ? 'white' : 'black'}} className=\"m-0 text-xl font-bold text-white\">Xircle.연고링</h3>\n                            <nav>\n                                <Link to=\"/start\">\n                                    <label className=\"text-black cursor-pointer px-5 py-2 rounded-xl font-bold border-2 bg-white hover:bg-white hover:text-black focus:outline-none\">사전신청 하기</label>\n                                </Link>\n                            </nav>\n                        </div>\n                    </Headroom>\n                </header>\n            ) : null}\n\n            <main className=\"min-h-screen\">\n                {children}\n            </main>\n\n            <Footer_nav footerNone={footerNone}/>\n\n            {/* footer */}\n            <footer>\n                <div></div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Layout;","import React from 'react';\n\nconst Banner = () => {\n    return (\n        <section >\n            <div style={{backgroundColor: \"#F3F3F3\", height: \"60px\"}} className=\"flex flex-row items-center rounded-xl justify-evenly w-full\">\n                <div>\n                    <h1 className=\"text-base font-bold m-0 py-1\">[연고링 이벤트\u001d] 놓치면 후회합니다.</h1>\n                    <p className=\"text-sm text-gray-400\">팔로우하고 친구추가하면~</p>\n                </div>\n                <img \n                    src=\"/bannerImg.png\"\n                    alt=\"banner\"\n                    width={80}\n                    height={80}\n                />\n            </div>\n        </section>\n    )\n}\n\nexport default Banner;","import React, { useEffect } from 'react'\n\nexport const createKakaoButton = (btnId) => {\n  const kakao = window.Kakao\n  if (!kakao.isInitialized()) { //중복 방지\n    // 두번째 step 에서 가져온 javascript key 를 이용하여 initialize\n    kakao.init(process.env.REACT_APP_KAKAO_KEY)\n  }\n  kakao.Link.createDefaultButton({\n    // Render 부분 id=kakao-link-btn 을 찾아 그부분에 렌더링을 합니다\n    container: btnId,\n    objectType: 'feed',\n    content: {\n      title: '연고링',\n      description: '#대학생 #친구 #청춘 #20대',\n      imageUrl: process.env.REACT_APP_FETCH_IMAGE_URL,\n      link: {\n        mobileWebUrl: 'https://2donny.github.io/',\n        webUrl: 'https://2donny.github.io/',\n      },\n    },\n    social: {\n      likeCount: 133,\n      commentCount: 255,\n      sharedCount: 333,\n    },\n    buttons: [\n      {\n        title: '웹으로 보기',\n        link: {\n          mobileWebUrl: 'https://2donny.github.io/',\n          webUrl: 'https://2donny.github.io/',\n        },\n      },\n      {\n        title: '앱으로 보기',\n        link: {\n          mobileWebUrl: \"https://2donny.github.io/\",\n          webUrl: 'https://2donny.github.io/',\n        },\n      },\n    ],\n  })\n}\n\nconst KakaoShareButton = () => {\n  useEffect(() => {\n    createKakaoButton('#kakao-link-btn')\n  }, [])\n\n  return (\n    <div style={{display: 'inline'}}>\n      <button id=\"kakao-link-btn\">\n        <img style={{width: '64px', height: '64px', borderRadius: '120px', objectFit: 'contain'}} src=\"/kakao.png\" alt=\"kakao-share-icon\" />\n      </button>\n    </div>\n  )\n}\nexport default KakaoShareButton","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const ERROR_INIT = 'ERROR_INIT';\n\n\nexport const ADD_AGE = 'ADD_AGE';\nexport const ADD_GENDER = 'ADD_GENDER';\nexport const ADD_JOB = 'ADD_JOB';\nexport const ADD_ADJ = 'ADD_ADJ';\nexport const ADD_LOCATION = 'ADD_LOCATION';\nexport const ADD_ARTICLE_IMGSRC = 'ADD_ARTICLE_IMGSRC';\nexport const ADD_ARTICLE_TEXT = 'ADD_ARTICLE_TEXT';\nexport const DISPLAYNAME_START = 'DISPLAYNAME_START';\nexport const DISPLAYNAME_SUCCESS = 'DISPLAYNAME_SUCCESS';\nexport const DISPLAYNAME_FAIL = 'DISPLAYNAME_FAIL';\nexport const ADD_INTEREST = 'ADD_INTEREST';\nexport const ADD_INTRO_TEXT = 'ADD_INTRO_TEXT';\nexport const ADD_PROFILE_IMG_SRC = 'ADD_PROFILE_IMG_SRC';\nexport const ADD_INSTA_ID = 'ADD_INSTA_ID';\nexport const SUBMIT_TO_SERVER = 'SUBMIT_TO_SERVER';\nexport const SUBMIT_TO_SERVER_START = 'SUBMIT_TO_SERVER_START';\nexport const SUBMIT_TO_SERVER_FAIL = 'SUBMIT_TO_SERVER_FAIL';\nexport const SUBMIT_TO_SERVER_SUCCESS = 'SUBMIT_TO_SERVER_SUCCESS';\nexport const UPDATE_PROFILE_IMG = 'UPDATE_PROFILE_IMG';\nexport const UPDATE_PROFILE_IMG_To_Server = 'UPDATE_PROFILE_IMG_To_Server';\n\n","import axios from 'axios';\n\nconst Axios = axios.create({\n    baseURL: 'https://ykring.herokuapp.com'\n})\n\nexport default Axios;\n","import * as actionTypes from './actionTypes';\nimport Axios from '../../axios-instance';\n\nexport const authStart = (univ) => {\n    return {\n        type: actionTypes.AUTH_START,\n        univ,\n    }\n}\n\nexport const authSuccess = (email) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        email: email,\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error,\n    }\n}\n\nexport const errorInit = () => {\n    return {\n        type: actionTypes.ERROR_INIT\n    }\n}\n\nexport const auth = (payload) => {\n    const {email, univKor} = payload;\n\n    return dispatch => {\n        dispatch(authStart(univKor));\n\n        const authData = {\n            email: email\n        };\n        \n        Axios.post('/email', authData)\n            .then(res => {\n                console.log(res);\n                dispatch(authSuccess(email));\n            })\n            .catch(err => {\n                console.log(err);\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n                dispatch(authFail(err));\n            })\n    }\n}\n","import * as actionTypes from './actionTypes';\nimport Axios from '../../axios-instance';\n\n\nexport const addAge = (age) => {\n    return {\n        type: actionTypes.ADD_AGE,\n        age,\n    }\n}\nexport const addGender = (gender) => {\n    return {\n        type: actionTypes.ADD_GENDER,\n        gender,\n    }\n}\n\nexport const addJob = (job) => {\n    return {\n        type: actionTypes.ADD_JOB,\n        job,\n    }\n}\n\nexport const addAdj = (adj) => {\n    return {\n        type: actionTypes.ADD_ADJ,\n        adj,\n    }\n}\n\nexport const addLocation = (location) => {\n    return {\n        type: actionTypes.ADD_LOCATION,\n        location,\n    }\n}\nexport const addArticleImgSrc = (articleImgSrc) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_IMGSRC,\n        articleImgSrc,\n    }\n}\n\nexport const addArticleText = (articleText) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_TEXT,\n        articleText,\n    }\n}\n\nexport const addInterest = (interestArr) => {\n    return {\n        type: actionTypes.ADD_INTEREST,\n        interestArr,\n    }\n}\n\n\n// displayName check\n\nexport const displayNameStart = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_START,\n    }\n}\nexport const displayNameSuccess = (displayName) => {\n    return {\n        type: actionTypes.DISPLAYNAME_SUCCESS,\n        displayName,\n    }\n}\nexport const displayNameFail = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_FAIL,\n    }\n}\nexport const displayName = (displayName) => {\n    return dispatch => {\n        dispatch(displayNameStart());\n\n        Axios.post('/check/name', displayName)\n            .then(res => {\n                console.log(res);\n                dispatch(displayNameSuccess(displayName));\n            })\n            .catch(err => {\n                console.log(err);\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n                dispatch(displayNameFail());\n            })\n    }\n}\n\n// -----\n\nexport const addIntroText = (introText) => {\n    return {\n        type: actionTypes.ADD_INTRO_TEXT,\n        introText,\n    }\n}\nexport const addProfileImgSrc = (ProfileImgSrc) => {\n    return {\n        type: actionTypes.ADD_PROFILE_IMG_SRC,\n        ProfileImgSrc\n    }\n}\n\nexport const addInstagramId = (instagramId) => {\n    return {\n        type: actionTypes.ADD_INSTA_ID,\n        instagramId\n    }\n}\n\n\n// SubmitToServer\nexport const submitToServerStart = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_START,\n    }\n}\n\nexport const submitToServerSuccess = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_SUCCESS,\n    }\n}\nexport const submitToServerFail = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_FAIL,\n    }\n}\n\nexport const submitToServer = (genderInRedux, ageInRedux, jobInRedux, adjInRedux, locationInRedux, articleImgSrcInRedux, articleTextInRedux, displayName, interestArrInRedux, introTextInRedux, profileImgSrcInRedux, instagramIdInRedux) => {\n    return dispatch => {\n        dispatch(submitToServerStart());\n        \n        const userData = {\n            genderInRedux, \n            ageInRedux, \n            jobInRedux, \n            adjInRedux, \n            locationInRedux, \n            articleImgSrcInRedux, \n            articleTextInRedux, \n            displayName, \n            interestArrInRedux, \n            introTextInRedux, \n            profileImgSrcInRedux, \n            instagramIdInRedux\n        };\n        Axios.post('/pre/user', userData)\n            .then(res => {\n                console.log(res);\n                dispatch(submitToServerSuccess());\n            })\n            .catch(err => {\n                console.log(err);\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n                dispatch(submitToServerFail());\n            })\n    }\n}\n\n\nexport const updateProfileImg = (updatedProfileImg) => {\n    return {\n        type: actionTypes.UPDATE_PROFILE_IMG,\n        updatedProfileImg,\n    }\n}\n\nexport const updateProfileImgToServer = (updatedProfileImg) => {\n    return dispatch => {\n        dispatch(updateProfileImg(updatedProfileImg));\n        // 서버에 보내기\n    }\n}\n","import React from 'react';\n\nfunction Backdrop({ show, clicked }) {\n    return (\n        show ? ( \n            <div \n                style={{backgroundColor: 'rgba(0, 0, 0, .7'}}\n                className=\"w-full h-full z-30 fixed left-0 top-0\" \n                onClick={clicked}\n            /> \n        )\n        : null\n    )\n}\n\nexport default Backdrop;","import React from 'react';\nimport Backdrop from './backdrop';\n\nlet memoizedModal = null;\n\nconst Modal = ({ children, show, clicked }) => {\n    return (\n        <div className=\"w-full\">\n            <Backdrop show={show} clicked={clicked}/>\n            <div className=\"w-full\">\n                <div \n                    style={{\n                        visibility: show ? 'visible' :'hidden',\n                        borderRadius: '10px',\n                        position: \"fixed\",\n                        zIndex: 500,\n                        width: \"340px\",\n                        textAlign: 'center',\n                        border: '1px solid #ccc',\n                        boxShadow: '1px 1px 1px black',\n                        backgroundColor: 'white',\n                        padding: '36px',\n                        left: 'calc(50% - 170px)',\n                        top: '20%',\n                        boxSizing: 'border-box',\n                        transition: 'all .3s ease-out',\n                        transform: show ? 'scale(1)' : 'scale(0.5)',\n                        opacity: show ? '1' : '0'\n                    }}\n                >\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default memoizedModal = React.memo(Modal);\n","export default __webpack_public_path__ + \"static/media/yk.252d2680.png\";","import React, {useState, useEffect} from 'react';\nimport bgImg from '../images/yk.png';\nimport Modal from '../components/UI/modal';\nimport { Link } from 'react-router-dom';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport Layout from '../components/layout';\n\n\nconst Intro = ({ history }) => {\n\n  useEffect(() => {\n    Aos.init();\n  }, []);\n  return (\n    <Layout isIntro footerNone headerNone>\n      <>\n        {/* 1번째 Slide */}\n        <section style={{}} className=\"h-screen w-full\">\n          <section className=\"relative\">\n            <div className=\"h-screen w-full overflow-visible\">\n              <video  autoPlay loop muted playsInline controls typeof=\"video/mp4\" className=\"h-screen object-cover\" src=\"/Intro/intro-video.mp4\"></video>\n            </div>\n            <div  style={{transform: \"translate(-50%, -50%)\", position: 'absolute', left: '50%', top: '50%', textAlign: 'center'}}>\n              <div data-aos=\"fade-up\" data-aos-duration=\"2000\">\n                <h1\n                  style={{fontSize: 24}} \n                  className=\"font-bold text-white leading-10\"\n                >\n                  요즘 대학생들의 <br/> 새로운 네트워킹\n                </h1>\n                <h1 style={{fontSize: 38}} className=\"text-white m-0 font-extrabold\">XIRCLE</h1>\n                <button \n                  onClick={() => history.push('/start')} \n                  className=\"px-8 py-3   text-white mt-10 rounded-3xl bg-transparent-600 border-2 hover:bg-white hover:text-black focus:outline-none\"\n                > \n                  사전 신청하기\n                </button>\n              </div>\n            </div>\n          </section>\n        </section>\n\n        {/* 2번째 slide */}\n        <section style={{height: '100vh'}}>\n        </section>\n      </>\n      {/* 메인 글귀 */}\n      {/* <section \n        style={{\n          backgroundImage: `url(${bgImg})`,\n          width: \"100%\",\n          height: \"100%\",\n          backgroundSize: \"cover\",\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',  \n          backgroundAttachment: 'fixed',\n        }}\n      >\n        <div className=\"flex flex-col items-center w-full h-full\" style={{backgroundColor: 'rgba(0, 0, 0, 0.4)'}}>\n          <div data-aos=\"fade-up\" data-aos-duration=\"2500\" className=\"text-center\">\n            <h1\n              style={{fontSize: 24}} \n              className=\"w-full pt-56 font-bold text-white text-center leading-10\"\n            >\n              요즘 대학생들의 <br/> 새로운 네트워킹\n            </h1>\n            <h1 style={{fontSize: 38}} className=\"text-white m-0 font-extrabold\">XIRCLE</h1>\n            <button \n              onClick={() => setClicked(true)} \n              className=\"px-8 py-3   text-white mt-10 rounded-3xl bg-transparent-600 border-2 hover:bg-white hover:text-black focus:outline-none\"\n            > \n              신청하기\n            </button>\n          </div>\n        </div>\n      </section> */}\n    </Layout>\n  );\n}\n\nexport default Intro;\n","import React, { Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Intro from './pages/Intro';\n\nconst Start = React.lazy(() => import('./pages/Start'));\nconst Secure = React.lazy(() => import('./pages/Secure'));\nconst Login = React.lazy(() => import('./pages/Login'));\nconst SettingCotainer = React.lazy(() => import('./pages/SettingPages/SettingContainer'));\nconst MyProfile = React.lazy(() => import('./pages/HomePages/MyProfile'));\n\n\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Suspense fallback={<div className=\"h-screen flex flex-row justify-center items-center\" ><img style={{width: \"200px\", height: \"200px\"}} src=\"/yk-logo.png\" /></div>}>\n        <Switch>\n            <Route path=\"/my-profile\" component={MyProfile} exact/>\n            <Route path=\"/setting/:questionNum\" component={SettingCotainer} exact/>\n            <Route path=\"/login\" component={Login} exact/>\n            <Route path=\"/secure\" component={Secure} exact/>\n            <Route path=\"/start\" component={Start} exact/>\n            <Route path=\"/\" component={Intro} exact/> \n            <Redirect from=\"*\" to=\"/\"/>\n        </Switch>\n      </Suspense>\n    </React.Fragment>\n  )  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    email: null,\n    isEmailSent: null,\n    univ: null,\n    error: null,\n    loading: null,\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type) {\n        case actionTypes.AUTH_START:\n            return {\n                ...state,\n                loading: true,\n                univ: action.univ\n            }\n        case actionTypes.AUTH_SUCCESS:\n            return {\n                ...state,\n                email: action.email,\n                loading: false,\n                error: false,\n                isEmailSent: true\n            }\n        case actionTypes.AUTH_FAIL:\n            return {\n                ...state,\n                error: true,\n                loading: false,\n            }\n        case actionTypes.ERROR_INIT:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { submitToServer } from '../actions';\n\nconst initialState = {\n    displayNameUI: {\n        loading: null,\n        error: null,\n    },\n    submitToServer: {\n        loading: null,\n        error: null\n    },\n    gender: null,\n    age: null,\n    job: null,\n    adj: null,\n    location: null,\n    articleImgSrc: \"something\",\n    articleText: null,\n    displayName: null,\n    interestArr: [],\n    introText: null,\n    profileImgSrc: null,\n    instagramId: null,\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type) {\n        case actionTypes.ADD_AGE:\n            return {\n                ...state,\n                age: action.age\n            }\n        case actionTypes.ADD_GENDER:\n            return {\n                ...state,\n                gender: action.gender\n            }\n        case actionTypes.ADD_JOB:\n            return {\n                ...state,\n                job: action.job\n            }\n        case actionTypes.ADD_ADJ:\n            return {\n                ...state,\n                adj: action.adj\n            }\n        case actionTypes.ADD_LOCATION:\n            return {\n                ...state,\n                location: action.location\n            }\n        case actionTypes.ADD_LOCATION:\n            return {\n                ...state,\n                interestArr: action.interestArr\n            }\n        case actionTypes.ADD_ARTICLE_IMGSRC:\n            return {\n                ...state,\n                articleImgSrc: action.articleImgSrc\n            }\n        case actionTypes.ADD_ARTICLE_TEXT:\n            return {\n                ...state,\n                articleText: action.articleText\n            }\n        case actionTypes.DISPLAYNAME_START:\n            return {\n                ...state,\n                displayNameUI: {\n                    ...state.displayNameUI,\n                    loading: true\n                }\n            }\n        case actionTypes.DISPLAYNAME_FAIL:\n            return {\n                ...state,\n                displayNameUI: {\n                    ...state.displayNameUI,\n                    loading: false,\n                    error: true\n                }\n            }\n        case actionTypes.DISPLAYNAME_SUCCESS:\n            return {\n                ...state,\n                displayName: action.displayName,\n                displayNameUI: {\n                    ...state.displayNameUI,\n                    loading: false,\n                    error: false\n                }\n            }\n        case actionTypes.ADD_INTRO_TEXT:\n            return {\n                ...state,\n                introText: action.introText\n            }\n        case actionTypes.ADD_PROFILE_IMG_SRC:\n            return {\n                ...state,\n                profileImgSrc: action.ProfileImgSrc\n            }\n        case actionTypes.ADD_INSTA_ID:\n            return {\n                ...state,\n                instagramId: action.instagramId\n            }\n        case actionTypes.SUBMIT_TO_SERVER_START:\n            return {\n                ...state,\n                submitToServer: {\n                    ...state.submitToServer,\n                    loading: true\n                }\n            }\n        case actionTypes.SUBMIT_TO_SERVER_FAIL:\n            return {\n                ...state,\n                submitToServer: {\n                    ...state.submitToServer,\n                    loading: false,\n                    error: true\n                }\n            }\n        case actionTypes.SUBMIT_TO_SERVER_SUCCESS:\n            return {\n                ...state,\n                submitToServer: {\n                    ...state.submitToServer,\n                    loading: false,\n                    error: false\n                }\n            }\n        case actionTypes.UPDATE_PROFILE_IMG:\n            return {\n                ...state,\n                profileImgSrc: action.updatedProfileImg\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/main.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './store/reducers/Auth';\nimport userReducer from './store/reducers/User';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  user: userReducer,\n})\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)) //리덕스에 미들웨어 사용시\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}