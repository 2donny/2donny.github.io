{"version":3,"sources":["../node_modules/@material-ui/core/esm/styles/makeStyles.js","components/universitySwitcher.js","components/UI/validationButton.js","pages/Auth/FindAuth.js","axios-instance.js","store/actions/Auth.js","store/actions/User.js","components/UI/backdrop.js","components/UI/modal.js"],"names":["makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","universitySwitcher","universityEng","useStyles","theme","root","margin","spacing","ValidationTextFields","history","type","classes","useState","isBtnDisabled","setIsBtnDisabled","findBtnClicked","setFindBtnClicked","email","setEmail","dispatch","useDispatch","isLoading","useSelector","store","auth","loading","emailRegex","textChangeHandler","useCallback","event","preventDefault","emailText","target","value","match","submitHandler","push","alert","index","indexOf","univ","slice","univKor","actions","className","noValidate","autoComplete","TextField","error","id","label","helperText","autoFocus","required","fullWidth","variant","onChange","e","style","height","left","color","red","green","blue","alpha","segmentWidth","onClick","padding","disabled","show","clicked","textAlign","cursor","FindAuth","isConfirmed","headerNone","footerNone","borderBottom","goBack","width","marginLeft","src","alt","href","marginRight","marginBottom","fontSize","Axios","axios","create","baseURL","authFail","actionTypes","authData","post","then","res","console","log","data","success","authSuccess","code","errorMsg","message","window","location","assign","catch","err","addIsPublic","isPublic","addIsGraduate","isGraduate","addGender","gender","addAge","age","addJob","job","addAdj","adj","addLocation","submitArticleImgToAWSFail","submitImgToAWSInit","submitArticleImgToAWS","articleImg_formData","imgAwsUrl","submitArticleImgToAWSSuccess","addArticleText","articleText","addArticleTag","articleTag","addInterest","interestArr","displayNameInit","addIntroText","introText","submitProfileImgToAWSFail","submitProfileImgToAWS","profileImg_formData","isSuccess","submitProfileImgToAWSSuccess","submitToServerFail","submitToServer","phoneNumberInRedux","isPublicInRedux","isGraduateInRedux","emailInRedux","genderInRedux","ageInRedux","jobInRedux","adjInRedux","locationInRedux","articleImgSrcInRedux","articleTextInRedux","articleTagInRedux","displayNameInRedux","interestArrInRedux","introTextInRedux","profileImgSrcInRedux","resumeText","workPlaceText","userData","phoneNumber","articleImgSrc","displayName","profileImgSrc","resume","workPlace","updateProfileImgToServer","updatedProfileImg","updateProfileImg","Backdrop","backgroundColor","Modal","children","visibility","borderRadius","position","zIndex","border","boxShadow","top","boxSizing","transition","transform","opacity","memoizedModal","React","memo"],"mappings":"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","file":"static/js/11.2e786b76.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","\nfunction universitySwitcher({ universityEng }){\n    switch(universityEng) {\n        case 'korea.ac.kr':\n            return \"고려대학교\"\n        case 'yonsei.ac.kr':\n            return \"연세대학교\"\n        case 'snu.ac.kr':\n            return \"서울대학교\"\n        case 'sogang.ac.kr':\n            return \"서강대학교\"\n        case 'skky.ac.kr':\n            return \"성균관대학교\"\n        case 'hanyang.ac.kr':\n            return \"한양대학교\"\n        default:\n            return null\n    }\n}\n\nexport default universitySwitcher;","import React, { useCallback, useState, useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LoadingIndicator from 'react-loading-indicator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport universitySwitcher from '../universitySwitcher';\nimport Modal from './modal';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function ValidationTextFields({ history, type }) {\n  const classes = useStyles();\n  \n  \n  const [isBtnDisabled, setIsBtnDisabled] = useState(true);\n  const [findBtnClicked, setFindBtnClicked] = useState(false);\n  const [email, setEmail] = useState('');\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(store => store.auth.loading);\n\n  const emailRegex = /^[a-zA-Z0-9]([-_]?[a-zA-Z0-9])*@(korea.ac.kr|yonsei.ac.kr|snu.ac.kr|sogang.ac.kr|g.skku.edu|hanyang.ac.kr)$/;\n\n  const textChangeHandler = useCallback((event) => {\n    event.preventDefault();\n    const emailText = event.target.value;\n    setEmail(emailText);\n\n    if(emailText.match(emailRegex)) {\n      setIsBtnDisabled(false);\n    }else {\n      setIsBtnDisabled(true);\n    }\n  }, []);\n\n  const submitHandler = useCallback((event) => {\n    event.preventDefault();\n    history.push('start');\n    if(!email.match(emailRegex)) { // 먼저 필터링\n      event.preventDefault();\n      return alert('올바른 메일로 입력해주세요.');\n    }\n    const index = email.indexOf('@');\n    const univ = email.slice(index+1); // 영어\n    const univKor = universitySwitcher(univ); //한국말\n\n    // redux 스토어에 dispatch\n    dispatch(actions.auth(email, univKor));\n  }, [email]);\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div className=\"w-full text-center mt-5\">\n        <TextField\n          error={!email.match(emailRegex)}\n          id=\"outlined-error-helper-text\"\n          label=\"학교 이메일\"\n          helperText={!email.match(emailRegex) ? \"이메일을 올바르게 입력해주세요.\" : \"\"}\n          autoFocus\n          required\n          fullWidth={true}\n          variant=\"outlined\"\n          onChange={(e) => textChangeHandler(e)}\n        />\n      </div>\n\n      {/* 로딩 인디케이터 */}\n      {isLoading ? (\n      <div style={{height: '30px', left: 'calc(50% - 10px)'}} className=\"absolute \">\n        <LoadingIndicator \n            color={{red: 0, green: 0, blue: 0, alpha: 1}}\n            segmentWidth={2}\n        />\n      </div>\n      ) : null}\n\n      {/* 전송 버튼 */}\n      {type === 'auth' ? (\n      <button onClick={(e) => submitHandler(e)} style={{padding: \"15px 0\", margin: '80px 0 0'}} className=\"font-sans w-full rounded-lg mt-10 bg-gray-400 text-white hover:bg-gray-400 focus:outline-none\">\n        인증확인 전송\n      </button>\n      ) : (\n      <button disabled={isBtnDisabled} onClick={(e) => {e.preventDefault(); setFindBtnClicked(true)}} style={{padding: \"15px 0\", margin: '80px 0 0'}} className=\"font-sans w-full rounded-lg mt-10 bg-gray-400 text-white hover:bg-gray-400 focus:outline-none\">\n        닉네임/비밀번호 찾기\n      </button>\n      )}\n\n      {/* 모달 */}\n      <Modal show={findBtnClicked} clicked={() => setFindBtnClicked(false)}>\n        <div className=\"mb-5 py-5\">\n          <h1 className=\"text-xl mb-5\">이메일을 확인해주세요!</h1>\n          <p style={{color: '#aaa'}} className=\"text-base my-10\">이메일로 기존 닉네임과 비밀번호를 <br/> 전송해드렸습니다.</p>\n        </div>\n      </Modal>\n      <div> {type === 'find' ? null : (\n        <p onClick={() => history.push('/login')} style={{color: \"#949393\", margin: '20px 0', textAlign: 'center', cursor: 'pointer'}}>로그인하러가기\u001d</p>)}\n      </div>\n    </form>\n  )\n}\n","import React, { useCallback, useEffect, useRef, useState }  from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Layout from '../../components/layout';\nimport * as actions from '../../store/actions/index';\nimport LoadingIndicator from 'react-loading-indicator';\nimport ValidationButton from '../../components/UI/validationButton';\n\nconst FindAuth = ({ history }) => {\n    \n    const isLoading = useSelector(store => store.auth.loading);\n    const isConfirmed = useSelector(store => store.auth.isConfirmed);\n    \n    const dispatch = useDispatch();\n\n    \n    // const passwordChangeHandler = useCallback((event) => {\n    //     console.log(event.target.value)\n    //     event.preventDefault();\n\n    //     const passwordText = event.target.value;\n\n    //     if(passwordText.length < 6 || passwordText.length > 10) {\n    //         setPasswordNameDescription('비밀번호는 6자리 이상 10자리 이하입니다.');\n    //         setIsBtnDisabled(true);\n    //     }else {\n    //         setPasswordNameDescription(null);\n    //         if(displayNameDescription === null)\n    //             setIsBtnDisabled(false);\n    //     }\n    // }, []);\n    \n    const findSubmitHandler = useCallback((e) => {\n        e.preventDefault();\n        \n    }, []);\n\n    const forgotClickedHandler = useCallback((event) => {\n        event.preventDefault();\n\n    }, []);\n    \n    return (\n        <Layout headerNone footerNone={true}>\n            <nav style={{height: '60px', borderBottom: '1px solid #eee'}} className=\"flex flex-row items-center justify-between \">\n                <img\n                    onClick={() => history.goBack()} \n                    style={{width: '25px', height: '25px', marginLeft: 10, cursor: 'pointer'}}\n                    src=\"/arrow-back-outline.svg\"\n                    alt=\"back\"\n                />\n                <a href='http://pf.kakao.com/_kDxhtK' style={{color: \"#949393\", cursor: 'pointer', marginRight: 30}}> 문의하기 </a>\n            </nav>\n\n            <section className=\"mb-10\">\n                <section style={{padding: '10px 30px'}} className=\"text-center mt-5\">\n                    <h1 style={{textAlign: 'left', marginBottom: '5px', fontSize: '24px'}} className=\"text-2xl text-left\">닉네임/비밀번호 찾기</h1>\n                    <p style={{fontSize: '15px', color: \"#C5C1C1\", textAlign: 'left', margin: '20px auto'}}>가입하신 학교 이메일을 적어주세요. <br/> 이메일로 기존 닉네임과 비밀번호를 발송해드립니다.</p>\n                </section>\n                <section className=\"px-10 mb-5\">\n                    <section className=\"text-center my-10\">\n                        <ValidationButton type=\"find\"/>\n                    </section>\n                </section>\n            </section>\n        </Layout>\n    )\n}\n\nexport default FindAuth;","import axios from 'axios';\n\nexport const Axios = axios.create({\n    baseURL: 'https://ykring.herokuapp.com',\n})\n","import * as actionTypes from './actionTypes';\nimport { Axios } from '../../axios-instance';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    }\n}\n\nexport const authSuccess = (email, univKor) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        email: email,\n        univ: univKor\n    }\n}\n\nexport const authFail = () => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n    }\n}\n\nexport const errorInit = () => {\n    return {\n        type: actionTypes.ERROR_INIT\n    }\n}\n\nexport const auth = (email, univKor) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email\n        };\n        Axios.post('/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess)\n                    dispatch(authSuccess(email, univKor));\n                else {\n                    const code = res.data.code;\n                    const errorMsg = res.data.message;\n                    dispatch(authFail());\n                    if(code === 450) {\n                        // 여기서 dispatch 또해야함. 해당 이메일로 정보를 서버에서 가져와야함.\n                        window.location.assign('/my-profile');\n                    }else {\n                        alert(errorMsg);\n                    }\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                const errorMsg = err.data.message;\n                alert(errorMsg);\n                dispatch(authFail(err));\n            })\n    }\n}\n\n// auth Confirm\nexport const authConfirmStart = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_START,\n    }\n}\nexport const authConfirmFail = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_FAIL,\n    }\n}\nexport const authConfirmSuccess = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_SUCCESS,\n    }\n}\nexport const authConfirmInit = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_INIT,\n    }\n}\n\nexport const authConfirm = (email) => {\n    return dispatch => {\n        dispatch(authConfirmStart());\n        const authData = {\n            email: email\n        };\n        Axios.post('/check/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(authConfirmSuccess());\n                    dispatch(authConfirmInit());\n                }\n                else {\n                    dispatch(authConfirmFail());\n                    dispatch(authConfirmInit());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(authConfirmFail());\n                dispatch(authConfirmInit());\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n            })\n    }\n}\n\nexport const loginConfirmStart = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_START,\n    }\n}\nexport const loginConfirmFail = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_FAIL,\n    }\n}\nexport const loginConfirmSuccess = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_SUCCESS,\n    }\n}\nexport const loginConfirmInit = () => {\n    return {\n        type: actionTypes.AUTH_CONFIRM_INIT,\n    }\n}\n\n// Login\nexport const loginSubmit = (email) => {\n    return dispatch => {\n        dispatch(loginConfirmStart());\n        const authData = {\n            email: email\n        };\n        Axios.post('/check/email', authData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(authConfirmSuccess());\n                    dispatch(authConfirmInit());\n                }\n                else {\n                    dispatch(authConfirmFail());\n                    dispatch(authConfirmInit());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(authConfirmFail());\n                dispatch(authConfirmInit());\n                alert('네트워크 혹은 서버에 일시적인 오류가 있습니다. 다시 시도해주세요');\n            })\n    }\n}\n\n\n","import * as actionTypes from './actionTypes';\nimport { Axios } from '../../axios-instance';\n\n\nexport const addPhoneNumber = (phoneNumber) => {\n    return {\n        type: actionTypes.ADD_PHONE_NUMBER,\n        phoneNumber,\n    }\n}\nexport const addIsPublic = (isPublic) => {\n    return {\n        type: actionTypes.ADD_IS_PUBLIC,\n        isPublic,\n    }\n}\nexport const addIsGraduate = (isGraduate) => {\n    return {\n        type: actionTypes.ADD_IS_GRADUATE,\n        isGraduate,\n    }\n}\nexport const addGender = (gender) => {\n    return {\n        type: actionTypes.ADD_GENDER,\n        gender,\n    }\n}\nexport const addAge = (age) => {\n    return {\n        type: actionTypes.ADD_AGE,\n        age,\n    }\n}\nexport const addJob = (job) => {\n    return {\n        type: actionTypes.ADD_JOB,\n        job,\n    }\n}\n\nexport const addAdj = (adj) => {\n    return {\n        type: actionTypes.ADD_ADJ,\n        adj,\n    }\n}\n\nexport const addLocation = (location) => {\n    return {\n        type: actionTypes.ADD_LOCATION,\n        location,\n    }\n}\n\n// ArticleImg Submit to AWS S3\nexport const submitArticleImgToAWSStart = () => {\n    return {\n        type: actionTypes.SUBMIT_ARTICLE_IMGSRC_TO_AWS_START,\n    }\n}\nexport const submitArticleImgToAWSSuccess = (imgAwsUrl) => {\n    return {\n        type: actionTypes.SUBMIT_ARTICLE_IMGSRC_TO_AWS_SUCCESS,\n        imgAwsUrl,\n    }\n}\nexport const submitArticleImgToAWSFail = () => {\n    return {\n        type: actionTypes.SUBMIT_ARTICLE_IMGSRC_TO_AWS_FAIL,\n    }\n}\nexport const submitImgToAWSInit = () => {\n    return {\n        type: actionTypes.SUBMIT_IMG_SRC_TO_AWS_INIT,\n    }\n}\n\nexport const submitArticleImgToAWS = (articleImg_formData) => {\n    return dispatch => {\n        dispatch(submitArticleImgToAWSStart());\n        \n        console.log(articleImg_formData);\n\n        Axios.post('/img', articleImg_formData)\n            .then(res => {\n                console.log(res);\n                const imgAwsUrl = res.data.data;\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(submitArticleImgToAWSSuccess(imgAwsUrl))\n                    dispatch(submitImgToAWSInit())\n                }else {\n                    dispatch(submitArticleImgToAWSFail())\n                    dispatch(submitImgToAWSInit())\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(submitArticleImgToAWSFail());\n                dispatch(submitImgToAWSInit())\n            })\n    }\n}\n// ----\n\nexport const addArticleText = (articleText) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_TEXT,\n        articleText,\n    }\n}\nexport const addArticleTag = (articleTag) => {\n    return {\n        type: actionTypes.ADD_ARTICLE_HASHTAG,\n        articleTag,\n    }\n}\n\nexport const addInterest = (interestArr) => {\n    return {\n        type: actionTypes.ADD_INTEREST,\n        interestArr,\n    }\n}\n\n// displayName check\nexport const displayNameStart = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_START,\n    }\n}\nexport const displayNameSuccess = (displayName) => {\n    return {\n        type: actionTypes.DISPLAYNAME_SUCCESS,\n        displayName,\n    }\n}\nexport const displayNameFail = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_FAIL,\n    }\n}\nexport const displayNameInit = () => {\n    return {\n        type: actionTypes.DISPLAYNAME_INIT,\n    }\n}\n\nexport const displayName = (displayName) => {\n    return dispatch => {\n        dispatch(displayNameStart());\n\n        const data = {\n            displayName\n        }\n        Axios.post('/check/name', data)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess){ \n                    dispatch(displayNameSuccess(displayName));\n                }else {\n                    dispatch(displayNameFail());\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(displayNameFail());\n            })\n    }\n}\n// -----\n\nexport const addIntroText = (introText) => {\n    return {\n        type: actionTypes.ADD_INTRO_TEXT,\n        introText,\n    }\n}\n\n// Submit proflieImgSrc to AWS S3\nexport const submitProfileImgToAWSStart = () => {\n    return {\n        type: actionTypes.SUBMIT_PROFILE_IMGSRC_TO_AWS_START,\n    }\n}\nexport const submitProfileImgToAWSSuccess = (imgAwsUrl) => {\n    return {\n        type: actionTypes.SUBMIT_PROFILE_IMGSRC_TO_AWS_SUCCESS,\n        imgAwsUrl,\n    }\n}\nexport const submitProfileImgToAWSFail = () => {\n    return {\n        type: actionTypes.SUBMIT_PROFILE_IMGSRC_TO_AWS_FAIL,\n    }\n}\n\nexport const submitProfileImgToAWS = (profileImg_formData) => {\n    return dispatch => {\n        dispatch(submitProfileImgToAWSStart());\n\n        Axios.post('/img', profileImg_formData)\n            .then(res => {\n                console.log(res);\n                const imgAwsUrl = res.data.data;\n                const isSuccess = res.data.success;\n                if(isSuccess) {\n                    dispatch(submitProfileImgToAWSSuccess(imgAwsUrl))\n                }else {\n                    dispatch(submitProfileImgToAWSFail())\n                }\n            })\n            .catch(err => {{\n                console.log(err);\n                dispatch(submitProfileImgToAWSFail())\n            }})\n    }\n}\n// -----\n\n// SubmitToServer\nexport const submitToServerStart = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_START,\n    }\n}\n\nexport const submitToServerSuccess = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_SUCCESS,\n    }\n}\nexport const submitToServerFail = () => {\n    return {\n        type: actionTypes.SUBMIT_TO_SERVER_FAIL,\n    }\n}\n\nexport const submitToServer = (phoneNumberInRedux, isPublicInRedux, isGraduateInRedux, emailInRedux, genderInRedux, ageInRedux, jobInRedux, adjInRedux, locationInRedux, articleImgSrcInRedux, articleTextInRedux, articleTagInRedux, displayNameInRedux, interestArrInRedux, introTextInRedux, profileImgSrcInRedux, resumeText, workPlaceText) => {\n    return dispatch => {\n        dispatch(submitToServerStart());\n        const userData = {\n            phoneNumber: phoneNumberInRedux,\n            email: emailInRedux,\n            isPublic: isPublicInRedux,\n            isGraduate: isGraduateInRedux,\n            gender: genderInRedux, \n            age: ageInRedux,\n            job: jobInRedux, \n            adj: adjInRedux, \n            location: locationInRedux, \n            articleImgSrc: articleImgSrcInRedux, \n            articleText: articleTextInRedux, \n            articleTag: articleTagInRedux,\n            displayName: displayNameInRedux, \n            interestArr: interestArrInRedux, \n            introText: introTextInRedux, \n            profileImgSrc: profileImgSrcInRedux, \n            resume: resumeText,\n            workPlace: workPlaceText\n        };\n        Axios.post('/pre/user', userData)\n            .then(res => {\n                console.log(res);\n                const isSuccess = res.data.success;\n                if(isSuccess)\n                    dispatch(submitToServerSuccess());\n                else {\n                    dispatch(submitToServerFail());\n                    alert(res.data.message);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(submitToServerFail());\n                alert('일시적인 오류가 발생했습니다. 잠시후 다시 시도해주세요.');\n            })\n    }\n}\n\n\nexport const updateProfileImg = (updatedProfileImg) => {\n    return {\n        type: actionTypes.UPDATE_PROFILE_IMG,\n        updatedProfileImg,\n    }\n}\n\nexport const updateProfileImgToServer = (updatedProfileImg) => {\n    return dispatch => {\n        dispatch(updateProfileImg(updatedProfileImg));\n        // 서버에 보내기\n    }\n}\n","import React from 'react';\n\nfunction Backdrop({ show, clicked }) {\n    return (\n        show ? ( \n            <div \n                style={{backgroundColor: 'rgba(0, 0, 0, .7'}}\n                className=\"w-full h-full z-30 fixed left-0 top-0\" \n                onClick={clicked}\n            /> \n        )\n        : null\n    )\n}\n\nexport default Backdrop;","import React from 'react';\nimport Backdrop from './backdrop';\n\nlet memoizedModal = null;\n\nconst Modal = ({ children, show, clicked }) => {\n    return (\n        <div className=\"w-full\">\n            <Backdrop show={show} clicked={clicked}/>\n            <div className=\"w-full\">\n                <div \n                    style={{\n                        visibility: show ? 'visible' :'hidden',\n                        borderRadius: '10px',\n                        position: \"fixed\",\n                        zIndex: 500,\n                        width: \"340px\",\n                        textAlign: 'center',\n                        border: '1px solid #ccc',\n                        boxShadow: '1px 1px 1px black',\n                        backgroundColor: 'white',\n                        padding: '36px',\n                        left: 'calc(50% - 170px)',\n                        top: '20%',\n                        boxSizing: 'border-box',\n                        transition: 'all .3s ease-out',\n                        transform: show ? 'scale(1)' : 'scale(0.5)',\n                        opacity: show ? '1' : '0'\n                    }}\n                >\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default memoizedModal = React.memo(Modal);\n"],"sourceRoot":""}